{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"AniHelp 모델 생성","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyM6zKJtH+X6zT0T0S7uaIH4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2S9M0AN5e8Jz","executionInfo":{"status":"ok","timestamp":1625532632833,"user_tz":-540,"elapsed":21981,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"31cbb076-b78c-4998-8bda-25e74560d73b"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"mySIM1PzBEQP"},"source":["%reload_ext autoreload\n","%autoreload 2\n","%matplotlib inline"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gg5R-R9MeFEp","executionInfo":{"status":"ok","timestamp":1625507307386,"user_tz":-540,"elapsed":319604,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"c2e236fb-81b6-4364-e68e-c9328fc8a3bd"},"source":["# lightgbm gpu 버전 세팅\n","!git clone --recursive https://github.com/Microsoft/LightGBM\n","\n","%cd /content/LightGBM\n","!mkdir build\n","!cmake -DUSE_GPU=1\n","!make -j$(nproc)\n","!sudo apt-get -y install python-pip\n","!sudo -H pip install setuptools pandas numpy scipy scikit-learn -U\n","%cd /content/LightGBM/python-package/\n","!sudo python setup.py install --precompile\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Cloning into 'LightGBM'...\n","remote: Enumerating objects: 22889, done.\u001b[K\n","remote: Counting objects: 100% (507/507), done.\u001b[K\n","remote: Compressing objects: 100% (264/264), done.\u001b[K\n","remote: Total 22889 (delta 304), reused 401 (delta 232), pack-reused 22382\u001b[K\n","Receiving objects: 100% (22889/22889), 17.79 MiB | 4.08 MiB/s, done.\n","Resolving deltas: 100% (16749/16749), done.\n","Submodule 'include/boost/compute' (https://github.com/boostorg/compute) registered for path 'external_libs/compute'\n","Submodule 'eigen' (https://gitlab.com/libeigen/eigen.git) registered for path 'external_libs/eigen'\n","Submodule 'external_libs/fast_double_parser' (https://github.com/lemire/fast_double_parser.git) registered for path 'external_libs/fast_double_parser'\n","Submodule 'external_libs/fmt' (https://github.com/fmtlib/fmt.git) registered for path 'external_libs/fmt'\n","Cloning into '/content/LightGBM/external_libs/compute'...\n","remote: Enumerating objects: 21731, done.        \n","remote: Counting objects: 100% (3/3), done.        \n","remote: Compressing objects: 100% (3/3), done.        \n","remote: Total 21731 (delta 0), reused 1 (delta 0), pack-reused 21728        \n","Receiving objects: 100% (21731/21731), 8.51 MiB | 15.59 MiB/s, done.\n","Resolving deltas: 100% (17566/17566), done.\n","Cloning into '/content/LightGBM/external_libs/eigen'...\n","remote: Enumerating objects: 110280, done.        \n","remote: Counting objects: 100% (1646/1646), done.        \n","remote: Compressing objects: 100% (563/563), done.        \n","remote: Total 110280 (delta 1241), reused 1447 (delta 1075), pack-reused 108634        \n","Receiving objects: 100% (110280/110280), 102.15 MiB | 27.17 MiB/s, done.\n","Resolving deltas: 100% (90508/90508), done.\n","Cloning into '/content/LightGBM/external_libs/fast_double_parser'...\n","remote: Enumerating objects: 689, done.        \n","remote: Counting objects: 100% (189/189), done.        \n","remote: Compressing objects: 100% (121/121), done.        \n","remote: Total 689 (delta 93), reused 99 (delta 41), pack-reused 500        \n","Receiving objects: 100% (689/689), 802.19 KiB | 18.23 MiB/s, done.\n","Resolving deltas: 100% (347/347), done.\n","Cloning into '/content/LightGBM/external_libs/fmt'...\n","remote: Enumerating objects: 26760, done.        \n","remote: Counting objects: 100% (468/468), done.        \n","remote: Compressing objects: 100% (151/151), done.        \n","remote: Total 26760 (delta 270), reused 435 (delta 266), pack-reused 26292        \n","Receiving objects: 100% (26760/26760), 13.27 MiB | 25.64 MiB/s, done.\n","Resolving deltas: 100% (18069/18069), done.\n","Submodule path 'external_libs/compute': checked out '36c89134d4013b2e5e45bc55656a18bd6141995a'\n","Submodule path 'external_libs/eigen': checked out '8ba1b0f41a7950dc3e1d4ed75859e36c73311235'\n","Submodule path 'external_libs/fast_double_parser': checked out 'ace60646c02dc54c57f19d644e49a61e7e7758ec'\n","Submodule 'benchmark/dependencies/abseil-cpp' (https://github.com/abseil/abseil-cpp.git) registered for path 'external_libs/fast_double_parser/benchmarks/dependencies/abseil-cpp'\n","Submodule 'benchmark/dependencies/double-conversion' (https://github.com/google/double-conversion.git) registered for path 'external_libs/fast_double_parser/benchmarks/dependencies/double-conversion'\n","Cloning into '/content/LightGBM/external_libs/fast_double_parser/benchmarks/dependencies/abseil-cpp'...\n","remote: Enumerating objects: 14762, done.        \n","remote: Counting objects: 100% (697/697), done.        \n","remote: Compressing objects: 100% (346/346), done.        \n","remote: Total 14762 (delta 434), reused 568 (delta 351), pack-reused 14065        \n","Receiving objects: 100% (14762/14762), 9.87 MiB | 22.37 MiB/s, done.\n","Resolving deltas: 100% (11175/11175), done.\n","Cloning into '/content/LightGBM/external_libs/fast_double_parser/benchmarks/dependencies/double-conversion'...\n","remote: Enumerating objects: 1225, done.        \n","remote: Counting objects: 100% (69/69), done.        \n","remote: Compressing objects: 100% (49/49), done.        \n","remote: Total 1225 (delta 38), reused 34 (delta 20), pack-reused 1156        \n","Receiving objects: 100% (1225/1225), 7.08 MiB | 22.44 MiB/s, done.\n","Resolving deltas: 100% (810/810), done.\n","Submodule path 'external_libs/fast_double_parser/benchmarks/dependencies/abseil-cpp': checked out 'd936052d32a5b7ca08b0199a6724724aea432309'\n","Submodule path 'external_libs/fast_double_parser/benchmarks/dependencies/double-conversion': checked out 'f4cb2384efa55dee0e6652f8674b05763441ab09'\n","Submodule path 'external_libs/fmt': checked out 'cc09f1a6798c085c325569ef466bcdcffdc266d4'\n","/content/LightGBM\n","-- The C compiler identification is GNU 7.5.0\n","-- The CXX compiler identification is GNU 7.5.0\n","-- Check for working C compiler: /usr/bin/cc\n","-- Check for working C compiler: /usr/bin/cc -- works\n","-- Detecting C compiler ABI info\n","-- Detecting C compiler ABI info - done\n","-- Detecting C compile features\n","-- Detecting C compile features - done\n","-- Check for working CXX compiler: /usr/bin/c++\n","-- Check for working CXX compiler: /usr/bin/c++ -- works\n","-- Detecting CXX compiler ABI info\n","-- Detecting CXX compiler ABI info - done\n","-- Detecting CXX compile features\n","-- Detecting CXX compile features - done\n","-- Found OpenMP_C: -fopenmp (found version \"4.5\") \n","-- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \n","-- Found OpenMP: TRUE (found version \"4.5\")  \n","-- Looking for CL_VERSION_2_2\n","-- Looking for CL_VERSION_2_2 - found\n","-- Found OpenCL: /usr/lib/x86_64-linux-gnu/libOpenCL.so (found version \"2.2\") \n","-- OpenCL include directory: /usr/include\n","-- Boost version: 1.65.1\n","-- Found the following Boost libraries:\n","--   filesystem\n","--   system\n","-- Performing Test MM_PREFETCH\n","-- Performing Test MM_PREFETCH - Success\n","-- Using _mm_prefetch\n","-- Performing Test MM_MALLOC\n","-- Performing Test MM_MALLOC - Success\n","-- Using _mm_malloc\n","-- Configuring done\n","-- Generating done\n","-- Build files have been written to: /content/LightGBM\n","\u001b[35m\u001b[1mScanning dependencies of target _lightgbm\u001b[0m\n","\u001b[35m\u001b[1mScanning dependencies of target lightgbm\u001b[0m\n","[  1%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/main.cpp.o\u001b[0m\n","[  2%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/boosting/boosting.cpp.o\u001b[0m\n","[  4%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/application/application.cpp.o\u001b[0m\n","[  5%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/boosting/gbdt.cpp.o\u001b[0m\n","[  7%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/boosting/boosting.cpp.o\u001b[0m\n","[  8%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/boosting/gbdt_model_text.cpp.o\u001b[0m\n","[ 10%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/boosting/gbdt.cpp.o\u001b[0m\n","[ 11%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/boosting/gbdt_prediction.cpp.o\u001b[0m\n","[ 13%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/boosting/gbdt_model_text.cpp.o\u001b[0m\n","[ 14%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/boosting/prediction_early_stop.cpp.o\u001b[0m\n","[ 15%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/io/bin.cpp.o\u001b[0m\n","[ 17%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/boosting/gbdt_prediction.cpp.o\u001b[0m\n","[ 18%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/boosting/prediction_early_stop.cpp.o\u001b[0m\n","[ 20%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/io/bin.cpp.o\u001b[0m\n","[ 21%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/io/config.cpp.o\u001b[0m\n","[ 23%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/io/config_auto.cpp.o\u001b[0m\n","[ 24%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/io/config.cpp.o\u001b[0m\n","[ 26%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/io/dataset.cpp.o\u001b[0m\n","[ 27%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/io/config_auto.cpp.o\u001b[0m\n","[ 28%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/io/dataset.cpp.o\u001b[0m\n","[ 30%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/io/dataset_loader.cpp.o\u001b[0m\n","[ 31%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/io/file_io.cpp.o\u001b[0m\n","[ 33%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/io/dataset_loader.cpp.o\u001b[0m\n","[ 34%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/io/json11.cpp.o\u001b[0m\n","[ 36%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/io/metadata.cpp.o\u001b[0m\n","[ 37%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/io/file_io.cpp.o\u001b[0m\n","[ 39%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/io/parser.cpp.o\u001b[0m\n","[ 40%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/io/json11.cpp.o\u001b[0m\n","[ 42%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/io/train_share_states.cpp.o\u001b[0m\n","[ 43%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/io/metadata.cpp.o\u001b[0m\n","[ 44%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/io/tree.cpp.o\u001b[0m\n","[ 46%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/io/parser.cpp.o\u001b[0m\n","[ 47%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/io/train_share_states.cpp.o\u001b[0m\n","[ 49%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/io/tree.cpp.o\u001b[0m\n","[ 50%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/metric/dcg_calculator.cpp.o\u001b[0m\n","[ 52%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/metric/metric.cpp.o\u001b[0m\n","[ 53%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/metric/dcg_calculator.cpp.o\u001b[0m\n","[ 55%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/metric/metric.cpp.o\u001b[0m\n","[ 56%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/network/ifaddrs_patch.cpp.o\u001b[0m\n","[ 57%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/network/linker_topo.cpp.o\u001b[0m\n","[ 59%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/network/linkers_mpi.cpp.o\u001b[0m\n","[ 60%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/network/linkers_socket.cpp.o\u001b[0m\n","[ 62%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/network/network.cpp.o\u001b[0m\n","[ 63%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/objective/objective_function.cpp.o\u001b[0m\n","[ 65%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/network/ifaddrs_patch.cpp.o\u001b[0m\n","[ 66%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/network/linker_topo.cpp.o\u001b[0m\n","[ 68%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/network/linkers_mpi.cpp.o\u001b[0m\n","[ 69%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/network/linkers_socket.cpp.o\u001b[0m\n","[ 71%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/network/network.cpp.o\u001b[0m\n","[ 72%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/objective/objective_function.cpp.o\u001b[0m\n","[ 73%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/treelearner/cuda_tree_learner.cpp.o\u001b[0m\n","[ 75%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/treelearner/data_parallel_tree_learner.cpp.o\u001b[0m\n","[ 76%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/treelearner/cuda_tree_learner.cpp.o\u001b[0m\n","[ 78%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/treelearner/data_parallel_tree_learner.cpp.o\u001b[0m\n","[ 79%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/treelearner/feature_parallel_tree_learner.cpp.o\u001b[0m\n","[ 81%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/treelearner/feature_parallel_tree_learner.cpp.o\u001b[0m\n","[ 82%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/treelearner/gpu_tree_learner.cpp.o\u001b[0m\n","[ 84%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/treelearner/gpu_tree_learner.cpp.o\u001b[0m\n","[ 85%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/treelearner/linear_tree_learner.cpp.o\u001b[0m\n","[ 86%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/treelearner/linear_tree_learner.cpp.o\u001b[0m\n","[ 88%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/treelearner/serial_tree_learner.cpp.o\u001b[0m\n","[ 89%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/treelearner/serial_tree_learner.cpp.o\u001b[0m\n","[ 91%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/treelearner/tree_learner.cpp.o\u001b[0m\n","[ 92%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/treelearner/tree_learner.cpp.o\u001b[0m\n","[ 94%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/treelearner/voting_parallel_tree_learner.cpp.o\u001b[0m\n","[ 95%] \u001b[32mBuilding CXX object CMakeFiles/lightgbm.dir/src/treelearner/voting_parallel_tree_learner.cpp.o\u001b[0m\n","[ 97%] \u001b[32mBuilding CXX object CMakeFiles/_lightgbm.dir/src/c_api.cpp.o\u001b[0m\n","[ 98%] \u001b[32m\u001b[1mLinking CXX executable lightgbm\u001b[0m\n","[ 98%] Built target lightgbm\n","[100%] \u001b[32m\u001b[1mLinking CXX shared library lib_lightgbm.so\u001b[0m\n","[100%] Built target _lightgbm\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","The following additional packages will be installed:\n","  libpython-all-dev python-all python-all-dev python-asn1crypto\n","  python-cffi-backend python-crypto python-cryptography python-dbus\n","  python-enum34 python-gi python-idna python-ipaddress python-keyring\n","  python-keyrings.alt python-pip-whl python-pkg-resources python-secretstorage\n","  python-setuptools python-six python-wheel python-xdg\n","Suggested packages:\n","  python-crypto-doc python-cryptography-doc python-cryptography-vectors\n","  python-dbus-dbg python-dbus-doc python-enum34-doc python-gi-cairo\n","  gnome-keyring libkf5wallet-bin gir1.2-gnomekeyring-1.0 python-fs\n","  python-gdata python-keyczar python-secretstorage-doc python-setuptools-doc\n","The following NEW packages will be installed:\n","  libpython-all-dev python-all python-all-dev python-asn1crypto\n","  python-cffi-backend python-crypto python-cryptography python-dbus\n","  python-enum34 python-gi python-idna python-ipaddress python-keyring\n","  python-keyrings.alt python-pip python-pip-whl python-pkg-resources\n","  python-secretstorage python-setuptools python-six python-wheel python-xdg\n","0 upgraded, 22 newly installed, 0 to remove and 39 not upgraded.\n","Need to get 3,430 kB of archives.\n","After this operation, 10.8 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu bionic/main amd64 libpython-all-dev amd64 2.7.15~rc1-1 [1,092 B]\n","Get:2 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-all amd64 2.7.15~rc1-1 [1,076 B]\n","Get:3 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-all-dev amd64 2.7.15~rc1-1 [1,100 B]\n","Get:4 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-asn1crypto all 0.24.0-1 [72.7 kB]\n","Get:5 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-cffi-backend amd64 1.11.5-1 [63.4 kB]\n","Get:6 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-crypto amd64 2.6.1-8ubuntu2 [244 kB]\n","Get:7 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-enum34 all 1.1.6-2 [34.8 kB]\n","Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-idna all 2.6-1 [32.4 kB]\n","Get:9 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-ipaddress all 1.0.17-1 [18.2 kB]\n","Get:10 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-six all 1.11.0-2 [11.3 kB]\n","Get:11 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 python-cryptography amd64 2.1.4-1ubuntu1.4 [276 kB]\n","Get:12 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-dbus amd64 1.2.6-1 [90.2 kB]\n","Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 python-gi amd64 3.26.1-2ubuntu1 [197 kB]\n","Get:14 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-secretstorage all 2.3.1-2 [11.8 kB]\n","Get:15 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-keyring all 10.6.0-1 [30.6 kB]\n","Get:16 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-keyrings.alt all 3.0-1 [16.7 kB]\n","Get:17 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 python-pip-whl all 9.0.1-2.3~ubuntu1.18.04.5 [1,653 kB]\n","Get:18 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 python-pip all 9.0.1-2.3~ubuntu1.18.04.5 [151 kB]\n","Get:19 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-pkg-resources all 39.0.1-2 [128 kB]\n","Get:20 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-setuptools all 39.0.1-2 [329 kB]\n","Get:21 http://archive.ubuntu.com/ubuntu bionic/universe amd64 python-wheel all 0.30.0-0.2 [36.4 kB]\n","Get:22 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 python-xdg all 0.25-4ubuntu1.1 [31.2 kB]\n","Fetched 3,430 kB in 2s (2,059 kB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76, <> line 22.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package libpython-all-dev:amd64.\n","(Reading database ... 160772 files and directories currently installed.)\n","Preparing to unpack .../00-libpython-all-dev_2.7.15~rc1-1_amd64.deb ...\n","Unpacking libpython-all-dev:amd64 (2.7.15~rc1-1) ...\n","Selecting previously unselected package python-all.\n","Preparing to unpack .../01-python-all_2.7.15~rc1-1_amd64.deb ...\n","Unpacking python-all (2.7.15~rc1-1) ...\n","Selecting previously unselected package python-all-dev.\n","Preparing to unpack .../02-python-all-dev_2.7.15~rc1-1_amd64.deb ...\n","Unpacking python-all-dev (2.7.15~rc1-1) ...\n","Selecting previously unselected package python-asn1crypto.\n","Preparing to unpack .../03-python-asn1crypto_0.24.0-1_all.deb ...\n","Unpacking python-asn1crypto (0.24.0-1) ...\n","Selecting previously unselected package python-cffi-backend.\n","Preparing to unpack .../04-python-cffi-backend_1.11.5-1_amd64.deb ...\n","Unpacking python-cffi-backend (1.11.5-1) ...\n","Selecting previously unselected package python-crypto.\n","Preparing to unpack .../05-python-crypto_2.6.1-8ubuntu2_amd64.deb ...\n","Unpacking python-crypto (2.6.1-8ubuntu2) ...\n","Selecting previously unselected package python-enum34.\n","Preparing to unpack .../06-python-enum34_1.1.6-2_all.deb ...\n","Unpacking python-enum34 (1.1.6-2) ...\n","Selecting previously unselected package python-idna.\n","Preparing to unpack .../07-python-idna_2.6-1_all.deb ...\n","Unpacking python-idna (2.6-1) ...\n","Selecting previously unselected package python-ipaddress.\n","Preparing to unpack .../08-python-ipaddress_1.0.17-1_all.deb ...\n","Unpacking python-ipaddress (1.0.17-1) ...\n","Selecting previously unselected package python-six.\n","Preparing to unpack .../09-python-six_1.11.0-2_all.deb ...\n","Unpacking python-six (1.11.0-2) ...\n","Selecting previously unselected package python-cryptography.\n","Preparing to unpack .../10-python-cryptography_2.1.4-1ubuntu1.4_amd64.deb ...\n","Unpacking python-cryptography (2.1.4-1ubuntu1.4) ...\n","Selecting previously unselected package python-dbus.\n","Preparing to unpack .../11-python-dbus_1.2.6-1_amd64.deb ...\n","Unpacking python-dbus (1.2.6-1) ...\n","Selecting previously unselected package python-gi.\n","Preparing to unpack .../12-python-gi_3.26.1-2ubuntu1_amd64.deb ...\n","Unpacking python-gi (3.26.1-2ubuntu1) ...\n","Selecting previously unselected package python-secretstorage.\n","Preparing to unpack .../13-python-secretstorage_2.3.1-2_all.deb ...\n","Unpacking python-secretstorage (2.3.1-2) ...\n","Selecting previously unselected package python-keyring.\n","Preparing to unpack .../14-python-keyring_10.6.0-1_all.deb ...\n","Unpacking python-keyring (10.6.0-1) ...\n","Selecting previously unselected package python-keyrings.alt.\n","Preparing to unpack .../15-python-keyrings.alt_3.0-1_all.deb ...\n","Unpacking python-keyrings.alt (3.0-1) ...\n","Selecting previously unselected package python-pip-whl.\n","Preparing to unpack .../16-python-pip-whl_9.0.1-2.3~ubuntu1.18.04.5_all.deb ...\n","Unpacking python-pip-whl (9.0.1-2.3~ubuntu1.18.04.5) ...\n","Selecting previously unselected package python-pip.\n","Preparing to unpack .../17-python-pip_9.0.1-2.3~ubuntu1.18.04.5_all.deb ...\n","Unpacking python-pip (9.0.1-2.3~ubuntu1.18.04.5) ...\n","Selecting previously unselected package python-pkg-resources.\n","Preparing to unpack .../18-python-pkg-resources_39.0.1-2_all.deb ...\n","Unpacking python-pkg-resources (39.0.1-2) ...\n","Selecting previously unselected package python-setuptools.\n","Preparing to unpack .../19-python-setuptools_39.0.1-2_all.deb ...\n","Unpacking python-setuptools (39.0.1-2) ...\n","Selecting previously unselected package python-wheel.\n","Preparing to unpack .../20-python-wheel_0.30.0-0.2_all.deb ...\n","Unpacking python-wheel (0.30.0-0.2) ...\n","Selecting previously unselected package python-xdg.\n","Preparing to unpack .../21-python-xdg_0.25-4ubuntu1.1_all.deb ...\n","Unpacking python-xdg (0.25-4ubuntu1.1) ...\n","Setting up python-idna (2.6-1) ...\n","Setting up python-pip-whl (9.0.1-2.3~ubuntu1.18.04.5) ...\n","Setting up python-asn1crypto (0.24.0-1) ...\n","Setting up python-crypto (2.6.1-8ubuntu2) ...\n","Setting up python-wheel (0.30.0-0.2) ...\n","Setting up libpython-all-dev:amd64 (2.7.15~rc1-1) ...\n","Setting up python-pkg-resources (39.0.1-2) ...\n","Setting up python-cffi-backend (1.11.5-1) ...\n","Setting up python-gi (3.26.1-2ubuntu1) ...\n","Setting up python-six (1.11.0-2) ...\n","Setting up python-enum34 (1.1.6-2) ...\n","Setting up python-dbus (1.2.6-1) ...\n","Setting up python-ipaddress (1.0.17-1) ...\n","Setting up python-pip (9.0.1-2.3~ubuntu1.18.04.5) ...\n","Setting up python-all (2.7.15~rc1-1) ...\n","Setting up python-xdg (0.25-4ubuntu1.1) ...\n","Setting up python-setuptools (39.0.1-2) ...\n","Setting up python-keyrings.alt (3.0-1) ...\n","Setting up python-all-dev (2.7.15~rc1-1) ...\n","Setting up python-cryptography (2.1.4-1ubuntu1.4) ...\n","Setting up python-secretstorage (2.3.1-2) ...\n","Setting up python-keyring (10.6.0-1) ...\n","Processing triggers for man-db (2.8.3-2ubuntu0.1) ...\n","Collecting setuptools\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a2/e1/902fbc2f61ad6243cd3d57ffa195a9eb123021ec912ec5d811acf54a39f8/setuptools-57.1.0-py3-none-any.whl (818kB)\n","\u001b[K     |████████████████████████████████| 819kB 7.4MB/s \n","\u001b[?25hCollecting pandas\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/99/f7/01cea7f6c963100f045876eb4aa1817069c5c9eca73d2dbfb5d31ff9a39f/pandas-1.3.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (10.8MB)\n","\u001b[K     |████████████████████████████████| 10.8MB 53.5MB/s \n","\u001b[?25hCollecting numpy\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/3f/03/c3526fb4e79a793498829ca570f2f868204ad9a8040afcd72d82a8f121db/numpy-1.21.0-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (15.7MB)\n","\u001b[K     |████████████████████████████████| 15.7MB 204kB/s \n","\u001b[?25hCollecting scipy\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/b2/85/b00f13b52d079b5625e1a12330fc6453c947a482ff667a907c7bc60ed220/scipy-1.7.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (28.5MB)\n","\u001b[K     |████████████████████████████████| 28.5MB 161kB/s \n","\u001b[?25hCollecting scikit-learn\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a8/eb/a48f25c967526b66d5f1fa7a984594f0bf0a5afafa94a8c4dbc317744620/scikit_learn-0.24.2-cp37-cp37m-manylinux2010_x86_64.whl (22.3MB)\n","\u001b[K     |████████████████████████████████| 22.3MB 90kB/s \n","\u001b[?25hRequirement already satisfied, skipping upgrade: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas) (2018.9)\n","Requirement already satisfied, skipping upgrade: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas) (2.8.1)\n","Requirement already satisfied, skipping upgrade: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn) (1.0.1)\n","Collecting threadpoolctl>=2.0.0\n","  Downloading https://files.pythonhosted.org/packages/f7/12/ec3f2e203afa394a149911729357aa48affc59c20e2c1c8297a60f33f133/threadpoolctl-2.1.0-py3-none-any.whl\n","Requirement already satisfied, skipping upgrade: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas) (1.15.0)\n","\u001b[31mERROR: tensorflow 2.5.0 has requirement numpy~=1.19.2, but you'll have numpy 1.21.0 which is incompatible.\u001b[0m\n","\u001b[31mERROR: google-colab 1.0.0 has requirement pandas~=1.1.0; python_version >= \"3.0\", but you'll have pandas 1.3.0 which is incompatible.\u001b[0m\n","\u001b[31mERROR: datascience 0.10.6 has requirement folium==0.2.1, but you'll have folium 0.8.3 which is incompatible.\u001b[0m\n","\u001b[31mERROR: albumentations 0.1.12 has requirement imgaug<0.2.7,>=0.2.5, but you'll have imgaug 0.2.9 which is incompatible.\u001b[0m\n","Installing collected packages: setuptools, numpy, pandas, scipy, threadpoolctl, scikit-learn\n","  Found existing installation: setuptools 57.0.0\n","    Uninstalling setuptools-57.0.0:\n","      Successfully uninstalled setuptools-57.0.0\n","  Found existing installation: numpy 1.19.5\n","    Uninstalling numpy-1.19.5:\n","      Successfully uninstalled numpy-1.19.5\n","  Found existing installation: pandas 1.1.5\n","    Uninstalling pandas-1.1.5:\n","      Successfully uninstalled pandas-1.1.5\n","  Found existing installation: scipy 1.4.1\n","    Uninstalling scipy-1.4.1:\n","      Successfully uninstalled scipy-1.4.1\n","  Found existing installation: scikit-learn 0.22.2.post1\n","    Uninstalling scikit-learn-0.22.2.post1:\n","      Successfully uninstalled scikit-learn-0.22.2.post1\n","Successfully installed numpy-1.21.0 pandas-1.3.0 scikit-learn-0.24.2 scipy-1.7.0 setuptools-57.1.0 threadpoolctl-2.1.0\n","/content/LightGBM/python-package\n","running install\n","running build\n","running build_py\n","INFO:root:Generating grammar tables from /usr/lib/python3.7/lib2to3/Grammar.txt\n","INFO:root:Generating grammar tables from /usr/lib/python3.7/lib2to3/PatternGrammar.txt\n","creating build\n","creating build/lib\n","creating build/lib/lightgbm\n","copying lightgbm/plotting.py -> build/lib/lightgbm\n","copying lightgbm/libpath.py -> build/lib/lightgbm\n","copying lightgbm/basic.py -> build/lib/lightgbm\n","copying lightgbm/callback.py -> build/lib/lightgbm\n","copying lightgbm/__init__.py -> build/lib/lightgbm\n","copying lightgbm/sklearn.py -> build/lib/lightgbm\n","copying lightgbm/engine.py -> build/lib/lightgbm\n","copying lightgbm/dask.py -> build/lib/lightgbm\n","copying lightgbm/compat.py -> build/lib/lightgbm\n","running egg_info\n","creating lightgbm.egg-info\n","writing lightgbm.egg-info/PKG-INFO\n","writing dependency_links to lightgbm.egg-info/dependency_links.txt\n","writing requirements to lightgbm.egg-info/requires.txt\n","writing top-level names to lightgbm.egg-info/top_level.txt\n","writing manifest file 'lightgbm.egg-info/SOURCES.txt'\n","reading manifest template 'MANIFEST.in'\n","no previously-included directories found matching 'build'\n","warning: no files found matching 'LICENSE'\n","warning: no files found matching '*.txt'\n","warning: no files found matching '*.so' under directory 'lightgbm'\n","warning: no files found matching 'compile/CMakeLists.txt'\n","warning: no files found matching 'compile/cmake/IntegratedOpenCL.cmake'\n","warning: no files found matching '*.so' under directory 'compile'\n","warning: no files found matching '*.dll' under directory 'compile/Release'\n","warning: no files found matching 'compile/external_libs/compute/CMakeLists.txt'\n","warning: no files found matching '*' under directory 'compile/external_libs/compute/cmake'\n","warning: no files found matching '*' under directory 'compile/external_libs/compute/include'\n","warning: no files found matching '*' under directory 'compile/external_libs/compute/meta'\n","warning: no files found matching 'compile/external_libs/eigen/CMakeLists.txt'\n","warning: no files found matching 'compile/external_libs/eigen/Eigen/Cholesky'\n","warning: no files found matching 'compile/external_libs/eigen/Eigen/Core'\n","warning: no files found matching 'compile/external_libs/eigen/Eigen/Dense'\n","warning: no files found matching 'compile/external_libs/eigen/Eigen/Eigenvalues'\n","warning: no files found matching 'compile/external_libs/eigen/Eigen/Geometry'\n","warning: no files found matching 'compile/external_libs/eigen/Eigen/Householder'\n","warning: no files found matching 'compile/external_libs/eigen/Eigen/Jacobi'\n","warning: no files found matching 'compile/external_libs/eigen/Eigen/LU'\n","warning: no files found matching 'compile/external_libs/eigen/Eigen/QR'\n","warning: no files found matching 'compile/external_libs/eigen/Eigen/SVD'\n","warning: no files found matching '*' under directory 'compile/external_libs/eigen/Eigen/src/Cholesky'\n","warning: no files found matching '*' under directory 'compile/external_libs/eigen/Eigen/src/Core'\n","warning: no files found matching '*' under directory 'compile/external_libs/eigen/Eigen/src/Eigenvalues'\n","warning: no files found matching '*' under directory 'compile/external_libs/eigen/Eigen/src/Geometry'\n","warning: no files found matching '*' under directory 'compile/external_libs/eigen/Eigen/src/Householder'\n","warning: no files found matching '*' under directory 'compile/external_libs/eigen/Eigen/src/Jacobi'\n","warning: no files found matching '*' under directory 'compile/external_libs/eigen/Eigen/src/LU'\n","warning: no files found matching '*' under directory 'compile/external_libs/eigen/Eigen/src/misc'\n","warning: no files found matching '*' under directory 'compile/external_libs/eigen/Eigen/src/plugins'\n","warning: no files found matching '*' under directory 'compile/external_libs/eigen/Eigen/src/QR'\n","warning: no files found matching '*' under directory 'compile/external_libs/eigen/Eigen/src/SVD'\n","warning: no files found matching 'compile/external_libs/fast_double_parser/CMakeLists.txt'\n","warning: no files found matching 'compile/external_libs/fast_double_parser/LICENSE'\n","warning: no files found matching 'compile/external_libs/fast_double_parser/LICENSE.BSL'\n","warning: no files found matching '*' under directory 'compile/external_libs/fast_double_parser/include'\n","warning: no files found matching 'compile/external_libs/fmt/CMakeLists.txt'\n","warning: no files found matching 'compile/external_libs/fmt/LICENSE.rst'\n","warning: no files found matching '*' under directory 'compile/external_libs/fmt/include'\n","warning: no files found matching '*' under directory 'compile/include'\n","warning: no files found matching '*' under directory 'compile/src'\n","warning: no files found matching 'LightGBM.sln' under directory 'compile/windows'\n","warning: no files found matching 'LightGBM.vcxproj' under directory 'compile/windows'\n","warning: no files found matching '*.dll' under directory 'compile/windows/x64/DLL'\n","warning: no previously-included files matching '*.py[co]' found anywhere in distribution\n","warning: no previously-included files found matching 'compile/external_libs/compute/.git'\n","writing manifest file 'lightgbm.egg-info/SOURCES.txt'\n","copying lightgbm/VERSION.txt -> build/lib/lightgbm\n","running install_lib\n","copying build/lib/lightgbm/plotting.py -> /usr/local/lib/python3.7/dist-packages/lightgbm\n","copying build/lib/lightgbm/libpath.py -> /usr/local/lib/python3.7/dist-packages/lightgbm\n","copying build/lib/lightgbm/basic.py -> /usr/local/lib/python3.7/dist-packages/lightgbm\n","copying build/lib/lightgbm/callback.py -> /usr/local/lib/python3.7/dist-packages/lightgbm\n","copying build/lib/lightgbm/__init__.py -> /usr/local/lib/python3.7/dist-packages/lightgbm\n","copying build/lib/lightgbm/VERSION.txt -> /usr/local/lib/python3.7/dist-packages/lightgbm\n","copying build/lib/lightgbm/sklearn.py -> /usr/local/lib/python3.7/dist-packages/lightgbm\n","copying build/lib/lightgbm/engine.py -> /usr/local/lib/python3.7/dist-packages/lightgbm\n","copying build/lib/lightgbm/dask.py -> /usr/local/lib/python3.7/dist-packages/lightgbm\n","copying build/lib/lightgbm/compat.py -> /usr/local/lib/python3.7/dist-packages/lightgbm\n","INFO:LightGBM:Installing lib_lightgbm from: ['../lib_lightgbm.so']\n","copying ../lib_lightgbm.so -> /usr/local/lib/python3.7/dist-packages/lightgbm\n","byte-compiling /usr/local/lib/python3.7/dist-packages/lightgbm/plotting.py to plotting.cpython-37.pyc\n","byte-compiling /usr/local/lib/python3.7/dist-packages/lightgbm/libpath.py to libpath.cpython-37.pyc\n","byte-compiling /usr/local/lib/python3.7/dist-packages/lightgbm/basic.py to basic.cpython-37.pyc\n","byte-compiling /usr/local/lib/python3.7/dist-packages/lightgbm/callback.py to callback.cpython-37.pyc\n","byte-compiling /usr/local/lib/python3.7/dist-packages/lightgbm/__init__.py to __init__.cpython-37.pyc\n","byte-compiling /usr/local/lib/python3.7/dist-packages/lightgbm/sklearn.py to sklearn.cpython-37.pyc\n","byte-compiling /usr/local/lib/python3.7/dist-packages/lightgbm/engine.py to engine.cpython-37.pyc\n","byte-compiling /usr/local/lib/python3.7/dist-packages/lightgbm/dask.py to dask.cpython-37.pyc\n","byte-compiling /usr/local/lib/python3.7/dist-packages/lightgbm/compat.py to compat.cpython-37.pyc\n","running install_egg_info\n","Copying lightgbm.egg-info to /usr/local/lib/python3.7/dist-packages/lightgbm-3.2.1.99-py3.7.egg-info\n","running install_scripts\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qVGgMcsIfH10","executionInfo":{"status":"ok","timestamp":1625532554275,"user_tz":-540,"elapsed":38153,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"c2d0edd5-81b6-4ab9-ccbd-43f87e0b479f"},"source":["# konlpy 설치, 나눔 폰트 설치\n","!pip install konlpy\n","!sudo apt-get install -y fonts-nanum* -qq\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf\n","!pip install catboost\n","!pip install ipywidgets\n","!jupyter nbextension enable --py widgetsnbextension"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Collecting konlpy\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/85/0e/f385566fec837c0b83f216b2da65db9997b35dd675e107752005b7d392b1/konlpy-0.5.2-py2.py3-none-any.whl (19.4MB)\n","\u001b[K     |████████████████████████████████| 19.4MB 1.4MB/s \n","\u001b[?25hRequirement already satisfied: lxml>=4.1.0 in /usr/local/lib/python3.7/dist-packages (from konlpy) (4.2.6)\n","Collecting beautifulsoup4==4.6.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/9e/d4/10f46e5cfac773e22707237bfcd51bbffeaf0a576b0a847ec7ab15bd7ace/beautifulsoup4-4.6.0-py3-none-any.whl (86kB)\n","\u001b[K     |████████████████████████████████| 92kB 10.8MB/s \n","\u001b[?25hRequirement already satisfied: tweepy>=3.7.0 in /usr/local/lib/python3.7/dist-packages (from konlpy) (3.10.0)\n","Collecting colorama\n","  Downloading https://files.pythonhosted.org/packages/44/98/5b86278fbbf250d239ae0ecb724f8572af1c91f4a11edf4d36a206189440/colorama-0.4.4-py2.py3-none-any.whl\n","Requirement already satisfied: numpy>=1.6 in /usr/local/lib/python3.7/dist-packages (from konlpy) (1.19.5)\n","Collecting JPype1>=0.7.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/98/88/f817ef1af6f794e8f11313dcd1549de833f4599abcec82746ab5ed086686/JPype1-1.3.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (448kB)\n","\u001b[K     |████████████████████████████████| 450kB 25.5MB/s \n","\u001b[?25hRequirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.7/dist-packages (from tweepy>=3.7.0->konlpy) (1.15.0)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from tweepy>=3.7.0->konlpy) (1.3.0)\n","Requirement already satisfied: requests[socks]>=2.11.1 in /usr/local/lib/python3.7/dist-packages (from tweepy>=3.7.0->konlpy) (2.23.0)\n","Requirement already satisfied: typing-extensions; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from JPype1>=0.7.0->konlpy) (3.7.4.3)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->tweepy>=3.7.0->konlpy) (3.1.1)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests[socks]>=2.11.1->tweepy>=3.7.0->konlpy) (2021.5.30)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests[socks]>=2.11.1->tweepy>=3.7.0->konlpy) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests[socks]>=2.11.1->tweepy>=3.7.0->konlpy) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests[socks]>=2.11.1->tweepy>=3.7.0->konlpy) (3.0.4)\n","Requirement already satisfied: PySocks!=1.5.7,>=1.5.6; extra == \"socks\" in /usr/local/lib/python3.7/dist-packages (from requests[socks]>=2.11.1->tweepy>=3.7.0->konlpy) (1.7.1)\n","Installing collected packages: beautifulsoup4, colorama, JPype1, konlpy\n","  Found existing installation: beautifulsoup4 4.6.3\n","    Uninstalling beautifulsoup4-4.6.3:\n","      Successfully uninstalled beautifulsoup4-4.6.3\n","Successfully installed JPype1-1.3.0 beautifulsoup4-4.6.0 colorama-0.4.4 konlpy-0.5.2\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76, <> line 4.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package fonts-nanum.\n","(Reading database ... 160772 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20170925-1_all.deb ...\n","Unpacking fonts-nanum (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-eco.\n","Preparing to unpack .../fonts-nanum-eco_1.000-6_all.deb ...\n","Unpacking fonts-nanum-eco (1.000-6) ...\n","Selecting previously unselected package fonts-nanum-extra.\n","Preparing to unpack .../fonts-nanum-extra_20170925-1_all.deb ...\n","Unpacking fonts-nanum-extra (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-coding.\n","Preparing to unpack .../fonts-nanum-coding_2.5-1_all.deb ...\n","Unpacking fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-extra (20170925-1) ...\n","Setting up fonts-nanum (20170925-1) ...\n","Setting up fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-eco (1.000-6) ...\n","Processing triggers for fontconfig (2.12.6-0ubuntu2) ...\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 31 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n","Collecting catboost\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/5a/41/24e14322b9986cf72a8763e0a0a69cc256cf963cf9502c8f0044a62c1ae8/catboost-0.26-cp37-none-manylinux1_x86_64.whl (69.2MB)\n","\u001b[K     |████████████████████████████████| 69.2MB 44kB/s \n","\u001b[?25hRequirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from catboost) (1.15.0)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from catboost) (3.2.2)\n","Requirement already satisfied: pandas>=0.24.0 in /usr/local/lib/python3.7/dist-packages (from catboost) (1.1.5)\n","Requirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.7/dist-packages (from catboost) (1.19.5)\n","Requirement already satisfied: graphviz in /usr/local/lib/python3.7/dist-packages (from catboost) (0.10.1)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.7/dist-packages (from catboost) (4.4.1)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from catboost) (1.4.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->catboost) (0.10.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->catboost) (1.3.1)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->catboost) (2.8.1)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->catboost) (2.4.7)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24.0->catboost) (2018.9)\n","Requirement already satisfied: retrying>=1.3.3 in /usr/local/lib/python3.7/dist-packages (from plotly->catboost) (1.3.3)\n","Installing collected packages: catboost\n","Successfully installed catboost-0.26\n","Requirement already satisfied: ipywidgets in /usr/local/lib/python3.7/dist-packages (7.6.3)\n","Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (5.1.3)\n","Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (4.10.1)\n","Requirement already satisfied: traitlets>=4.3.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (5.0.5)\n","Requirement already satisfied: widgetsnbextension~=3.5.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (3.5.1)\n","Requirement already satisfied: jupyterlab-widgets>=1.0.0; python_version >= \"3.6\" in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (1.0.0)\n","Requirement already satisfied: ipython>=4.0.0; python_version >= \"3.3\" in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (5.5.0)\n","Requirement already satisfied: jsonschema!=2.5.0,>=2.4 in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets) (2.6.0)\n","Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets) (0.2.0)\n","Requirement already satisfied: jupyter-core in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets) (4.7.1)\n","Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets) (5.3.5)\n","Requirement already satisfied: tornado>=4.0 in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets) (5.1.1)\n","Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.7/dist-packages (from widgetsnbextension~=3.5.0->ipywidgets) (5.3.1)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets) (57.0.0)\n","Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets) (0.8.1)\n","Requirement already satisfied: pexpect; sys_platform != \"win32\" in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets) (4.8.0)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets) (0.7.5)\n","Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets) (1.0.18)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets) (2.6.1)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets) (4.4.2)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets) (2.8.1)\n","Requirement already satisfied: pyzmq>=13 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets) (22.1.0)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (2.11.3)\n","Requirement already satisfied: terminado>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.10.1)\n","Requirement already satisfied: nbconvert in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (5.6.1)\n","Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (1.5.0)\n","Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.7/dist-packages (from pexpect; sys_platform != \"win32\"->ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets) (0.7.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets) (0.2.5)\n","Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets) (1.15.0)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (2.0.1)\n","Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.5.0)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.7.1)\n","Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.8.4)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (1.4.3)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (3.3.0)\n","Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.3)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (0.5.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (20.9)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets) (2.4.7)\n","Enabling notebook extension jupyter-js-widgets/extension...\n","      - Validating: \u001b[32mOK\u001b[0m\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"he1ADRA__mMq","executionInfo":{"status":"ok","timestamp":1625533046779,"user_tz":-540,"elapsed":371,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}}},"source":["import matplotlib.pyplot as plt\n","from matplotlib import rcParams\n","import seaborn as sns\n","# from konlpy.tag import Okt, Hannanum, Kkma,Komoran,Mecab\n","import numpy as np\n","import pandas as pd\n","from pathlib import Path\n","from sklearn.metrics import accuracy_score, mean_squared_error, confusion_matrix, log_loss, precision_recall_curve, precision_score,recall_score,roc_auc_score, f1_score \n","from sklearn.model_selection import train_test_split\n","import warnings\n","from sklearn.model_selection import KFold\n","import math\n","import joblib\n","# lightgbm 모델\n","import lightgbm as lgb\n","from lightgbm import LGBMClassifier, plot_importance\n","# Xgboost 모델\n","import xgboost as xgb\n","# 랜덤포레스트 \n","from sklearn.ensemble import RandomForestClassifier\n","# 로지스틱 리그레션\n","from sklearn.linear_model import LogisticRegression\n","# SVM Classifier\n","from sklearn.svm import SVC\n","# Catboost classifier\n","from catboost import CatBoostClassifier\n","# keras\n","import tensorflow as tf\n","from tensorflow.keras import layers\n","import timeit\n","#feature Selection\n","from sklearn.feature_selection import SelectKBest, chi2, f_classif, SelectFromModel\n","import itertools"],"execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OAqXfDGBCnmH","executionInfo":{"status":"ok","timestamp":1625492890265,"user_tz":-540,"elapsed":9776,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"aa3ba525-9063-48ec-a636-5e4ff67bcfa2"},"source":["!pip install optuna\n","import optuna # 모델 튜닝 모듈"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting optuna\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/1a/18/b49ca91cf592747e19f2d333c2a86cd7c81895b922a5a09adf6335471576/optuna-2.8.0-py3-none-any.whl (301kB)\n","\r\u001b[K     |█                               | 10kB 23.8MB/s eta 0:00:01\r\u001b[K     |██▏                             | 20kB 16.5MB/s eta 0:00:01\r\u001b[K     |███▎                            | 30kB 14.2MB/s eta 0:00:01\r\u001b[K     |████▍                           | 40kB 13.2MB/s eta 0:00:01\r\u001b[K     |█████▍                          | 51kB 7.7MB/s eta 0:00:01\r\u001b[K     |██████▌                         | 61kB 9.0MB/s eta 0:00:01\r\u001b[K     |███████▋                        | 71kB 8.5MB/s eta 0:00:01\r\u001b[K     |████████▊                       | 81kB 9.3MB/s eta 0:00:01\r\u001b[K     |█████████▊                      | 92kB 9.0MB/s eta 0:00:01\r\u001b[K     |██████████▉                     | 102kB 7.5MB/s eta 0:00:01\r\u001b[K     |████████████                    | 112kB 7.5MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 122kB 7.5MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 133kB 7.5MB/s eta 0:00:01\r\u001b[K     |███████████████▏                | 143kB 7.5MB/s eta 0:00:01\r\u001b[K     |████████████████▎               | 153kB 7.5MB/s eta 0:00:01\r\u001b[K     |█████████████████▍              | 163kB 7.5MB/s eta 0:00:01\r\u001b[K     |██████████████████▌             | 174kB 7.5MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 184kB 7.5MB/s eta 0:00:01\r\u001b[K     |████████████████████▋           | 194kB 7.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████▊          | 204kB 7.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████▉         | 215kB 7.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████▉        | 225kB 7.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 235kB 7.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 245kB 7.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▏    | 256kB 7.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 266kB 7.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▎  | 276kB 7.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 286kB 7.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▌| 296kB 7.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 307kB 7.5MB/s \n","\u001b[?25hRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from optuna) (20.9)\n","Collecting colorlog\n","  Downloading https://files.pythonhosted.org/packages/32/e6/e9ddc6fa1104fda718338b341e4b3dc31cd8039ab29e52fc73b508515361/colorlog-5.0.1-py2.py3-none-any.whl\n","Collecting cmaes>=0.8.2\n","  Downloading https://files.pythonhosted.org/packages/01/1f/43b01223a0366171f474320c6e966c39a11587287f098a5f09809b45e05f/cmaes-0.8.2-py3-none-any.whl\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from optuna) (1.21.0)\n","Requirement already satisfied: scipy!=1.4.0 in /usr/local/lib/python3.7/dist-packages (from optuna) (1.7.0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from optuna) (4.41.1)\n","Requirement already satisfied: sqlalchemy>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from optuna) (1.4.18)\n","Collecting alembic\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d5/80/ef186e599a57d0e4cb78fc76e0bfc2e6953fa9716b2a5cf2de0117ed8eb5/alembic-1.6.5-py2.py3-none-any.whl (164kB)\n","\u001b[K     |████████████████████████████████| 174kB 26.2MB/s \n","\u001b[?25hCollecting cliff\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/87/11/aea1cacbd4cf8262809c4d6f95dcb3f2802594de1f51c5bd454d69bf15c5/cliff-3.8.0-py3-none-any.whl (80kB)\n","\u001b[K     |████████████████████████████████| 81kB 11.0MB/s \n","\u001b[?25hRequirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->optuna) (2.4.7)\n","Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from sqlalchemy>=1.1.0->optuna) (4.5.0)\n","Requirement already satisfied: greenlet!=0.4.17; python_version >= \"3\" in /usr/local/lib/python3.7/dist-packages (from sqlalchemy>=1.1.0->optuna) (1.1.0)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.7/dist-packages (from alembic->optuna) (2.8.1)\n","Collecting python-editor>=0.3\n","  Downloading https://files.pythonhosted.org/packages/c6/d3/201fc3abe391bbae6606e6f1d598c15d367033332bd54352b12f35513717/python_editor-1.0.4-py3-none-any.whl\n","Collecting Mako\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f3/54/dbc07fbb20865d3b78fdb7cf7fa713e2cba4f87f71100074ef2dc9f9d1f7/Mako-1.1.4-py2.py3-none-any.whl (75kB)\n","\u001b[K     |████████████████████████████████| 81kB 11.5MB/s \n","\u001b[?25hRequirement already satisfied: PrettyTable>=0.7.2 in /usr/local/lib/python3.7/dist-packages (from cliff->optuna) (2.1.0)\n","Requirement already satisfied: PyYAML>=3.12 in /usr/local/lib/python3.7/dist-packages (from cliff->optuna) (3.13)\n","Collecting cmd2>=1.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/e3/6a/e929ec70ca05c5962f6541ef29fb9c207dd41f0f2333680fa39f44fa4357/cmd2-2.1.1-py3-none-any.whl (140kB)\n","\u001b[K     |████████████████████████████████| 143kB 20.7MB/s \n","\u001b[?25hCollecting pbr!=2.1.0,>=2.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/18/e0/1d4702dd81121d04a477c272d47ee5b6bc970d1a0990b11befa275c55cf2/pbr-5.6.0-py2.py3-none-any.whl (111kB)\n","\u001b[K     |████████████████████████████████| 112kB 25.6MB/s \n","\u001b[?25hCollecting stevedore>=2.0.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d4/49/b602307aeac3df3384ff1fcd05da9c0376c622a6c48bb5325f28ab165b57/stevedore-3.3.0-py3-none-any.whl (49kB)\n","\u001b[K     |████████████████████████████████| 51kB 7.4MB/s \n","\u001b[?25hRequirement already satisfied: typing-extensions>=3.6.4; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->sqlalchemy>=1.1.0->optuna) (3.7.4.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->sqlalchemy>=1.1.0->optuna) (3.4.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil->alembic->optuna) (1.15.0)\n","Requirement already satisfied: MarkupSafe>=0.9.2 in /usr/local/lib/python3.7/dist-packages (from Mako->alembic->optuna) (2.0.1)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from PrettyTable>=0.7.2->cliff->optuna) (0.2.5)\n","Requirement already satisfied: attrs>=16.3.0 in /usr/local/lib/python3.7/dist-packages (from cmd2>=1.0.0->cliff->optuna) (21.2.0)\n","Collecting pyperclip>=1.6\n","  Downloading https://files.pythonhosted.org/packages/a7/2c/4c64579f847bd5d539803c8b909e54ba087a79d01bb3aba433a95879a6c5/pyperclip-1.8.2.tar.gz\n","Requirement already satisfied: colorama>=0.3.7 in /usr/local/lib/python3.7/dist-packages (from cmd2>=1.0.0->cliff->optuna) (0.4.4)\n","Building wheels for collected packages: pyperclip\n","  Building wheel for pyperclip (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyperclip: filename=pyperclip-1.8.2-cp37-none-any.whl size=11136 sha256=bdaef568db16277455c76238273636832b7cbfe41051c0ed78e1a15ccdcf3884\n","  Stored in directory: /root/.cache/pip/wheels/25/af/b8/3407109267803f4015e1ee2ff23be0c8c19ce4008665931ee1\n","Successfully built pyperclip\n","Installing collected packages: colorlog, cmaes, python-editor, Mako, alembic, pyperclip, cmd2, pbr, stevedore, cliff, optuna\n","Successfully installed Mako-1.1.4 alembic-1.6.5 cliff-3.8.0 cmaes-0.8.2 cmd2-2.1.1 colorlog-5.0.1 optuna-2.8.0 pbr-5.6.0 pyperclip-1.8.2 python-editor-1.0.4 stevedore-3.3.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"71M8kwKECuTc","executionInfo":{"status":"ok","timestamp":1625532556036,"user_tz":-540,"elapsed":10,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}}},"source":["warnings.simplefilter('ignore')"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"y2B6dNybdT74","executionInfo":{"status":"ok","timestamp":1625532556037,"user_tz":-540,"elapsed":9,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}}},"source":["plt.rcParams['axes.unicode_minus'] = False  # 마이너스 폰트 안깨지게\n","plt.rcParams['font.family'] = 'NanumGothic'\n","# font 크기 조절\n","plt.rcParams['font.size'] = 15\n","# figsize 를 전역으로 설정\n","plt.rcParams['figure.figsize'] = (15, 9)  "],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"_SNeLwtcdT2y"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FssSOCwMeM7H"},"source":["# 데이터 불러오기"]},{"cell_type":"code","metadata":{"id":"1ATUnh7WeMT2","executionInfo":{"status":"ok","timestamp":1625532640137,"user_tz":-540,"elapsed":330,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}}},"source":["# 기본적인 설정 및 경로\n","trn_file = '/content/drive/MyDrive/TwoPs/AniHelp_feat7.csv'\n","\n","seed = 8282"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yHLY85ypePnc","executionInfo":{"status":"ok","timestamp":1625532648746,"user_tz":-540,"elapsed":8280,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"89d4e201-c6cf-4772-b5dd-de92376095a0"},"source":["trn_df = pd.read_csv(trn_file, index_col=0)\n","trn_df.info()"],"execution_count":12,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 418658 entries, 0 to 418657\n","Data columns (total 34 columns):\n"," #   Column     Non-Null Count   Dtype  \n","---  ------     --------------   -----  \n"," 0   index      418658 non-null  int64  \n"," 1   공고번호       418658 non-null  object \n"," 2   축종         418658 non-null  object \n"," 3   품종         417474 non-null  object \n"," 4   털색         418654 non-null  object \n"," 5   성별         418658 non-null  object \n"," 6   중성화여부      418658 non-null  object \n"," 7   특징         418613 non-null  object \n"," 8   접수일시       418658 non-null  object \n"," 9   구조사유       75842 non-null   object \n"," 10  발생장소       418658 non-null  object \n"," 11  공고기간       418658 non-null  int64  \n"," 12  관할보호센터명    418657 non-null  object \n"," 13  보호장소       418657 non-null  object \n"," 14  관할기관       418658 non-null  object \n"," 15  상태         418658 non-null  object \n"," 16  gender     418658 non-null  int64  \n"," 17  neutering  418658 non-null  int64  \n"," 18  털색2        418658 non-null  object \n"," 19  품종2        418658 non-null  object \n"," 20  지역         418658 non-null  object \n"," 21  성격         418658 non-null  int64  \n"," 22  건강         418658 non-null  int64  \n"," 23  나이         418658 non-null  int64  \n"," 24  입양여부       418658 non-null  int64  \n"," 25  입양여부2      418658 non-null  int64  \n"," 26  월          418658 non-null  int64  \n"," 27  도          418658 non-null  object \n"," 28  시          418658 non-null  object \n"," 29  위도         411763 non-null  float64\n"," 30  경도         411763 non-null  float64\n"," 31  연          418658 non-null  int64  \n"," 32  연월         418658 non-null  object \n"," 33  사이즈        418658 non-null  object \n","dtypes: float64(2), int64(11), object(21)\n","memory usage: 111.8+ MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"48NXBhJYePlg","executionInfo":{"status":"ok","timestamp":1625532648748,"user_tz":-540,"elapsed":12,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}}},"source":["# 매핑 용 데이터\n","gender_lst = ['암컷','수컷']\n","neutering_lst = ['예','아니오','미상']\n","spcies_lst = list(trn_df['축종'].unique())\n","loc_lst = list(trn_df['지역'].unique())\n","kind_lst = list(trn_df['품종2'].unique())\n","color_lst = list(trn_df['털색2'].unique())\n","do_lst = list(trn_df['도'].unique())\n","si_lst = list(trn_df['시'].unique())\n","size_lst = list(trn_df['사이즈'].unique())\n","\n","spcies_dic = {}\n","loc_dic = {}\n","kind_dic = {}\n","color_dic = {}\n","do_dic = {}\n","si_dic = {}\n","size_dic = {}\n","\n","spcies_tup = None\n","loc_tup = None\n","kind_tup = None\n","color_tup = None\n","do_tup = None\n","si_tup = None\n","size_tup = None\n","\n","temp = []\n","for i,data in enumerate(spcies_lst):\n","  spcies_dic[data] = i\n","  temp.append((i,data))\n","spcies_tup = tuple(temp)\n","temp = []\n","for i,data in enumerate(loc_lst):\n","  loc_dic[data] = i\n","  temp.append((i,data))\n","loc_tup = tuple(temp)\n","temp = []\n","\n","for i,data in enumerate(kind_lst):\n","  kind_dic[data] = i\n","  temp.append((i,data))\n","kind_tup = tuple(temp)\n","temp = []\n","for i,data in enumerate(color_lst):\n","  color_dic[data] = i\n","  temp.append((i,data))\n","color_tup = tuple(temp)\n","temp = []\n","for i,data in enumerate(do_lst):\n","  do_dic[data] = i\n","  temp.append((i,data))\n","do_tup = tuple(temp)\n","temp = []\n","for i,data in enumerate(si_lst):\n","  si_dic[data] = i\n","  temp.append((i,data))\n","si_tup = tuple(temp)\n","temp = []\n","for i,data in enumerate(size_lst):\n","  size_dic[data] = i\n","  temp.append((i,data))\n","size_tup = tuple(temp)"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X3N0ivLmY8OQ","executionInfo":{"status":"ok","timestamp":1625532648750,"user_tz":-540,"elapsed":13,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"b2f8af69-b48f-4c73-cd46-8d64b43a545d"},"source":["print(spcies_tup)\n","print(loc_tup)\n","print(kind_tup)\n","print(color_tup)\n","print(do_tup)\n","print(si_tup)\n","print(size_tup)"],"execution_count":14,"outputs":[{"output_type":"stream","text":["((0, '개'), (1, '고양이'))\n","((0, '광주 남구'), (1, '광주 광산'), (2, '경기 수원'), (3, '경기 성남'), (4, '경기 안양'), (5, '경기 부천'), (6, '대구 수성'), (7, '경기 광명'), (8, '경기 평택'), (9, '경기 남양주'), (10, '인천 서구'), (11, '경기 안산'), (12, '경기 하남'), (13, '충남 아산'), (14, '서울 용산'), (15, '전북 전주'), (16, '전남 영광'), (17, '경남 함안'), (18, '경남 통영'), (19, '전북 완주'), (20, '서울 동작'), (21, '서울 강북'), (22, '서울 양천'), (23, '부산 영도'), (24, '부산 남구'), (25, '부산 해운대'), (26, '부산 연제'), (27, '인천 남동'), (28, '대전 동구'), (29, '대전 중구'), (30, '대전 서구'), (31, '대전 유성'), (32, '대구 달성'), (33, '울산 중구'), (34, '강원 강릉'), (35, '충북 제천'), (36, '충북 청주'), (37, '충남 서산'), (38, '전북 남원'), (39, '전남 목포'), (40, '경남 창원3'), (41, '세종 세종'), (42, '서울 노원'), (43, '충북 증평'), (44, '전남 순천'), (45, '경북 구미'), (46, '인천 부평'), (47, '강원 원주'), (48, '강원 삼척'), (49, '경기 화성'), (50, '전남 나주'), (51, '경남 밀양'), (52, '경북 상주'), (53, '경북 영주'), (54, '울산 남구'), (55, '제주 제주'), (56, '경남 창녕'), (57, '서울 강동'), (58, '서울 서초'), (59, '서울 관악'), (60, '인천 중구'), (61, '대구 북구'), (62, '부산 북구'), (63, '광주 서구'), (64, '광주 북구'), (65, '경기 파주'), (66, '울산 동구'), (67, '울산 울주'), (68, '경기 고양'), (69, '경기 오산'), (70, '경기 시흥'), (71, '경기 군포'), (72, '경기 용인'), (73, '경남 창원2'), (74, '경기 이천'), (75, '경기 광주'), (76, '강원 횡성'), (77, '강원 정선'), (78, '강원 철원'), (79, '충북 충주'), (80, '충북 보은'), (81, '충남 공주'), (82, '충남 논산'), (83, '충남 예산'), (84, '충남 당진'), (85, '서울 구로'), (86, '전북 정읍'), (87, '충북 음성'), (88, '전북 무주'), (89, '전북 순창'), (90, '전북 고창'), (91, '전북 부안'), (92, '전남 여수'), (93, '전남 광양'), (94, '전남 담양'), (95, '전남 곡성'), (96, '전남 장성'), (97, '경북 영천'), (98, '경북 청도'), (99, '전북 진안'), (100, '경남 진주'), (101, '경남 고성'), (102, '경남 거창'), (103, '서울 성동'), (104, '서울 중랑'), (105, '서울 성북'), (106, '서울 강서'), (107, '전북 군산'), (108, '부산 부산진'), (109, '부산 동래'), (110, '부산 사하'), (111, '부산 금정'), (112, '부산 기장'), (113, '대구 남구'), (114, '대구 달서'), (115, '인천 계양'), (116, '대전 대덕'), (117, '경기 의정부'), (118, '경기 동두천'), (119, '경기 구리'), (120, '경기 안성'), (121, '경기 김포'), (122, '경기 양주'), (123, '경기 포천'), (124, '강원 춘천'), (125, '경북 울진'), (126, '충남 보령'), (127, '충남 천안'), (128, '전남 영암'), (129, '경북 경주'), (130, '경북 청송'), (131, '경북 경산'), (132, '경북 문경'), (133, '경남 김해'), (134, '경남 거제'), (135, '경남 남해'), (136, '경남 창원1'), (137, '서울 송파'), (138, '서울 은평'), (139, '부산 강서'), (140, '부산 수영'), (141, '전남 무안'), (142, '경북 포항'), (143, '인천 남구'), (144, '경북 김천'), (145, '서울 마포'), (146, '충남 금산'), (147, '경북 예천'), (148, '대구 서구'), (149, '경기 양평'), (150, '충북 영동'), (151, '강원 홍천'), (152, '충북 진천'), (153, '서울 금천'), (154, '충남 태안'), (155, '경남 양산'), (156, '경북 성주'), (157, '전남 함평'), (158, '서울 동대문'), (159, '경남 하동'), (160, '서울 영등포'), (161, '서울 강남'), (162, '부산 동구'), (163, '경북 칠곡'), (164, '강원 양구'), (165, '전남 해남'), (166, '전남 신안'), (167, '전남 완도'), (168, '인천 옹진'), (169, '충남 홍성'), (170, '경북 울릉'), (171, '강원 양양'), (172, '대구 동구'), (173, '강원 평창'), (174, '강원 속초'), (175, '전남 화순'), (176, '충북 단양'), (177, '충남 부여'), (178, '강원 인제'), (179, '전남 강진'), (180, '전북 익산'), (181, '전남 진도'), (182, '부산 사상'), (183, '충북 옥천'), (184, '전남 고흥'), (185, '강원 태백'), (186, '서울 종로'), (187, '경기 가평'), (188, '대구 중구'), (189, '서울 광진'), (190, '인천 연수'), (191, '울산 북구'), (192, '강원 고성'), (193, '부산 서구'), (194, '경남 산청'), (195, '인천 동구'), (196, '광주 동구'), (197, '경북 안동'), (198, '인천 강화'), (199, '강원 영월'), (200, '경북 의성'), (201, '경북 영양'), (202, '경북 영덕'), (203, '경북 고령'), (204, '경기 연천'), (205, '충남 청양'), (206, '경남 함양'), (207, '서울 서대문'), (208, '경남 사천'), (209, '전북 임실'), (210, '경남 합천'), (211, '충북 괴산'), (212, '경기 의왕'), (213, '서울 중구'), (214, '전북 장수'), (215, '충남 계룡'), (216, '경남 의령'), (217, '서울 도봉'), (218, '부산 중구'), (219, '경북 군위'), (220, '경기 과천'), (221, '강원 동해'), (222, '강원 화천'), (223, '경기 여주'), (224, '충남 서천'), (225, '전남 구례'), (226, '전북 김제'), (227, '전남 보성'), (228, '경북 봉화'), (229, '인천 미추홀'), (230, '전남 장흥'), (231, '서울 개별사업(TNR)'), (232, '서울 서울특별시'))\n","((0, '믹스견'), (1, '품종견'), (2, '한국 고양이'), (3, '품종묘'), (4, '품종 믹스묘'), (5, '품종 믹스견'))\n","((0, '흰색'), (1, 'unknown'), (2, '갈색'), (3, '검정색'), (4, '황색'), (5, '황색 검정색 흰색'), (6, '검정색 흰색'), (7, '흰색 검정색'), (8, '노랑색'), (9, '검정색 갈색'), (10, '흰색 갈색'), (11, '아이보리'), (12, '흰색 아이보리 흰색'), (13, '검정색 갈색 흰색'), (14, '검정색 흰색 턱시도'), (15, '회색 갈색'), (16, '회색'), (17, '삼색'), (18, '검정색 황색'), (19, '갈색 흰색'), (20, '흰색 황색'), (21, '베이지 흰색'), (22, '검정색 베이지'), (23, '베이지'), (24, '검정색 회색'), (25, '흰색 아이보리'), (26, '갈색 검정색'), (27, '갈색 검정색 흰색'), (28, '회색 흰색'), (29, '턱시도 턱시도'), (30, '고등어'), (31, '황색 흰색'), (32, '노랑색 흰색'), (33, '흰색 노랑색'), (34, '황색 갈색'), (35, '흰색 갈색 검정색'), (36, '검정색 흰색 황색'), (37, '검정색 흰색 갈색'), (38, '황색 검정색'), (39, '흰색 베이지'), (40, '흰색 흰색'), (41, '갈색 아이보리'), (42, '살구색'), (43, '금색'), (44, '검정색 흰색 회색'), (45, '아이보리 갈색'), (46, '흰색 검정색 갈색'), (47, '흰색 황색 검정색'), (48, '검정색 노랑색'), (49, '흰색 아이보리 검정색'), (50, '흰색 회색'), (51, '노랑색 노랑색'), (52, '흰색 회색 검정색'), (53, '갈색 흰색 검정색'), (54, '검정색 황색 흰색'), (55, '베이지 갈색'), (56, '금색 갈색'), (57, '회색 검정색'), (58, '황색 회색'), (59, '검정색 회색 갈색'), (60, '갈색 흰색 아이보리'), (61, '갈색 회색'), (62, '베이지 검정색'), (63, '흰색 검정색 회색'), (64, '황색 흰색 검정색'), (65, '검정색 금색'), (66, '주황색 흰색 아이보리'), (67, '검정색 금색 갈색'), (68, '카오스'), (69, '흰색 흰색 아이보리'), (70, '삼색 노랑색'), (71, '회색 황색'), (72, '검정색 흰색 황색 흰색'), (73, '갈색 노랑색 흰색'), (74, '흰색 아이보리 갈색 검정색'), (75, '주황색'), (76, '흰색 회색 갈색'), (77, '회색 황색 회색'), (78, '검정색 노랑색 흰색'), (79, '검정색 흰색 노랑색'), (80, '흰색 검정색 노랑색'), (81, '갈색 회색 검정색'), (82, '황색 흰색 황색'), (83, '흰색 아이보리 황색'), (84, '회색 노랑색'), (85, '황색 갈색 갈색 흰색'), (86, '턱시도 턱시도 검정색 흰색'), (87, '검정색 흰색 턱시도 턱시도'), (88, '검정색 회색 금색'), (89, '흰색 노랑색 갈색'), (90, '흰색 노랑색 회색'), (91, '금색 회색'), (92, '회색 회색'), (93, '회색 검정색 갈색'), (94, '갈색 검정색 삼색'), (95, '흰색 황색 회색 검정색'), (96, '노랑색 흰색 아이보리'), (97, '카오스 노랑색'), (98, '주황색 흰색'), (99, '노랑색 회색'), (100, '검정색 갈색 회색'), (101, '흰색 황색 갈색'), (102, '갈색 갈색'), (103, '노랑색 검정색'), (104, '노랑색 노랑색 노랑색'), (105, '검정색 회색 흰색'), (106, '황색 흰색 검정색 갈색'), (107, '흰색 검정색 갈색 흰색 갈색'), (108, '흰색 검정색 황색'), (109, '흰색 아이보리 갈색'), (110, '삼색 고등어'), (111, '황색 갈색 주황색'), (112, '갈색 황색'), (113, '검정색 황색 갈색'), (114, '검정색 턱시도 턱시도'), (115, '아이보리 회색'), (116, '흰색 흰색 아이보리 회색'), (117, '회색 베이지 흰색'), (118, '황색 갈색 흰색'), (119, '검정색 아이보리'), (120, '검정색 주황색 흰색'), (121, '금색 검정색'), (122, '검정색 회색 노랑색'), (123, '회색 금색'), (124, '검정색 갈색 흰색 회색'), (125, '흰색 주황색'), (126, '회색 흰색 갈색'), (127, '검정색 흰색 아이보리'), (128, '회색 검정색 흰색'), (129, '흰색 갈색 황색 갈색'), (130, '갈색 회색 흰색'), (131, '흰색 노랑색 검정색'), (132, '황색 흰색 아이보리'), (133, '갈색 삼색'), (134, '황색 아이보리'), (135, '검정색 검정색 흰색'), (136, '베이지 회색'), (137, '아이보리 베이지'), (138, '고등어 흰색'), (139, '회색 흰색 아이보리'), (140, '갈색 흰색 아이보리 흰색'), (141, '검정색 흰색 아이보리 흰색 갈색'), (142, '흰색 살구색 주황색'), (143, '턱시도'), (144, '삼색 갈색 검정색 흰색'), (145, '회색 흰색 검정색'), (146, '고등어 회색'), (147, '회색 황색 갈색'), (148, '갈색 노랑색'), (149, '회색 노랑색 흰색'), (150, '노랑색 검정색 흰색'), (151, '회색 갈색 검정색'), (152, '황색 흰색 갈색 검정색'), (153, '검정색 검정색'), (154, '갈색 흰색 황색'), (155, '검정색 갈색 황색 흰색'), (156, '흰색 베이지 검정색'), (157, '황색 검정색 갈색'), (158, '황색 검정색 갈색 삼색'), (159, '황색 갈색 검정색'), (160, '흰색 갈색 흰색'), (161, '흰색 아이보리 회색'), (162, '황색 황색'), (163, '황색 갈색 회색'), (164, '아이보리 흰색'), (165, '금색 회색 검정색'), (166, '흰색 아이보리 노랑색'), (167, '검정색 회색 황색 갈색'), (168, '노랑색 갈색'), (169, '흰색 황색 회색'), (170, '회색 노랑색 검정색'), (171, '삼색 흰색 흰색 검정색'), (172, '삼색 갈색'), (173, '노랑색 흰색 갈색'), (174, '흰색 갈색 회색'), (175, '검정색 갈색 흰색 흰색'), (176, '갈색 갈색 흰색 갈색'), (177, '황색 흰색 흰색 검정색'), (178, '갈색 노랑색 검정색'), (179, '노랑색 갈색 흰색'), (180, '흰색 금색'), (181, '주황색 검정색'), (182, '주황색 갈색 노랑색'), (183, '베이지 흰색 검정색'), (184, '흰색 갈색 살구색'), (185, '황색 갈색 아이보리'), (186, '갈색 검정색 턱시도 턱시도'), (187, '흰색 갈색 갈색'), (188, '흰색 검정색 베이지'), (189, '흰색 아이보리 흰색 검정색'), (190, '삼색 노랑색 흰색 검정색'), (191, '검정색 회색 베이지'), (192, '검정색 흰색 흰색'), (193, '흰색 고등어'), (194, '삼색 흰색 검정색 갈색'), (195, '노랑색 흰색 검정색'), (196, '삼색 카오스'), (197, '흰색 아이보리 흰색 노랑색'), (198, '고등어 검정색'), (199, '검정색 갈색 검정색'), (200, '검정색 회색 황색'), (201, '아이보리 흰색 검정색'), (202, '주황색 고등어'), (203, '회색 흰색 노랑색'), (204, '검정색 주황색'), (205, '갈색 흰색 아이보리 검정색'), (206, '노랑색 흰색 노랑색'), (207, '고등어 회색 검정색'), (208, '고등어 회색 갈색 흰색'), (209, '회색 베이지'), (210, '흰색 살구색'), (211, '흰색 갈색 검정색 회색'), (212, '검정색 흰색 삼색'), (213, '회색 갈색 흰색'), (214, '회색 갈색 노랑색'), (215, '흰색 검정색 노랑색 흰색'), (216, '갈색 흰색 갈색'), (217, '회색 아이보리'), (218, '흰색 회색 노랑색'), (219, '검정색 노랑색 회색'), (220, '흰색 주황색 검정색'), (221, '노랑색 검정색 흰색 아이보리'), (222, '노랑색 흰색 아이보리 흰색'), (223, '흰색 검정색 주황색'), (224, '금색 회색 회색'), (225, '삼색 흰색 검정색 황색'), (226, '베이지 검정색 회색'), (227, '검정색 갈색 갈색'), (228, '금색 베이지'), (229, '흰색 아이보리 베이지'), (230, '아이보리 황색'), (231, '주황색 갈색'), (232, '아이보리 검정색'), (233, '금색 흰색 아이보리'), (234, '회색 살구색'), (235, '노랑색 갈색 흰색 검정색'), (236, '흰색 갈색 노랑색'), (237, '살구색 흰색'), (238, '아이보리 흰색 아이보리'), (239, '갈색 흰색 흰색 아이보리'), (240, '주황색 검정색 갈색 흰색'), (241, '흰색 아이보리 금색'), (242, '검정색 갈색 노랑색'), (243, '노랑색 주황색'), (244, '갈색 살구색'), (245, '흰색 검정색 노랑색 삼색'), (246, '흰색 아이보리 흰색 갈색'), (247, '고등어 노랑색'), (248, '갈색 흰색 회색'), (249, '삼색 검정색'), (250, '갈색 검정색 황색'), (251, '노랑색 고등어'), (252, '회색 고등어'), (253, '노랑색 검정색 갈색'), (254, '삼색 흰색 검정색 황색 갈색'), (255, '노랑색 흰색 아이보리 검정색'), (256, '검정색 흰색 고등어'), (257, '흰색 검정색 황색 회색'), (258, '검정색 흰색 갈색 흰색'), (259, '황색 흰색 검정색 흰색'), (260, '삼색 흰색 황색 검정색'), (261, '검정색 삼색'), (262, '황색 갈색 흰색 검정색'), (263, '삼색 회색'), (264, '황색 베이지'), (265, '검정색 검정색 갈색'), (266, '검정색 갈색 흰색 아이보리'), (267, '노랑색 흰색 삼색'), (268, '살구색 검정색'), (269, '검정색 황색 검정색'), (270, '갈색 회색 흰색 아이보리'), (271, '고등어 삼색'), (272, '검정색 턱시도 흰색'), (273, '갈색 주황색'), (274, '갈색 고등어'), (275, '노랑색 흰색 흰색 검정색'), (276, '흰색 갈색 갈색 검정색'), (277, '검정색 흰색 갈색 회색'), (278, '노랑색 삼색'), (279, '흰색 주황색 갈색'), (280, '흰색 황색 흰색'), (281, '흰색 흰색 아이보리 노랑색'), (282, '흰색 노랑색 금색'), (283, '갈색 갈색 검정색'), (284, '갈색 흰색 흰색'), (285, '검정색 노랑색 회색 흰색'), (286, '갈색 갈색 흰색'), (287, '흰색 삼색'), (288, '검정색 갈색 황색'), (289, '검정색 검정색 노랑색'), (290, '노랑색 황색'), (291, '갈색 황색 흰색'), (292, '흰색 검정색 검정색'), (293, '흰색 갈색 검정색 살구색'), (294, '고등어 갈색'), (295, '흰색 주황색 노랑색'), (296, '흰색 검정색 흰색 아이보리'), (297, '갈색 갈색 노랑색'), (298, '갈색 주황색 흰색'), (299, '흰색 회색 황색 갈색'), (300, '갈색 노랑색 흰색 아이보리'), (301, '회색 노랑색 흰색 아이보리'), (302, '주황색 회색'), (303, '흰색 흰색 아이보리 검정색'), (304, '흰색 갈색 검정색 황색'), (305, '검정색 회색 회색'), (306, '검정색 흰색 갈색 노랑색'), (307, '살구색 살구색'), (308, '회색 갈색 아이보리 검정색'), (309, '흰색 고등어 검정색'), (310, '갈색 갈색 갈색'), (311, '황색 노랑색'), (312, '금색 흰색'), (313, '삼색 검정색 갈색 흰색'), (314, '노랑색 회색 갈색 검정색'), (315, '검정색 노랑색 흰색 아이보리'), (316, '흰색 갈색 고등어'), (317, '흰색 갈색 황색'), (318, '삼색 흰색'), (319, '검정색 회색 흰색 아이보리'), (320, '살구색 검정색 흰색'), (321, '노랑색 흰색 회색'), (322, '주황색 검정색 흰색'), (323, '갈색 흰색 검정색 흰색'), (324, '흰색 갈색 주황색'), (325, '흰색 노랑색 삼색'), (326, '갈색 흰색 검정색 삼색'), (327, '황색 검정색 아이보리'), (328, '갈색 갈색 흰색 아이보리'), (329, '갈색 흰색 주황색'), (330, '검정색 흰색 갈색 검정색 회색'), (331, '카오스 삼색'), (332, '검정색 갈색 주황색'), (333, '회색 검정색 노랑색'), (334, '베이지 회색 갈색'), (335, '회색 턱시도 턱시도'), (336, '흰색 회색 회색'), (337, '회색 갈색 노랑색 검정색'), (338, '주황색 살구색'), (339, '황색 흰색 갈색'), (340, '고등어 흰색 아이보리'), (341, '노랑색 갈색 흰색 삼색'), (342, '검정색 노랑색 갈색'), (343, '갈색 황색 검정색'), (344, '고등어 검정색 흰색'), (345, '노랑색 노랑색 흰색'), (346, '검정색 갈색 베이지'), (347, '금색 노랑색 흰색 아이보리'), (348, '노랑색 흰색 아이보리 갈색'), (349, '흰색 황색 황색'), (350, '검정색 살구색'), (351, '검정색 살구색 흰색'), (352, '삼색 고등어 노랑색 흰색'), (353, '검정색 흰색 베이지'), (354, '갈색 검정색 흰색 아이보리'), (355, '갈색 검정색 갈색'), (356, '삼색 검정색 갈색 노랑색'), (357, '흰색 아이보리 황색 갈색'), (358, '주황색 회색 흰색 아이보리'), (359, '삼색 황색 흰색'), (360, '삼색 흰색 황색'), (361, '베이지 노랑색'), (362, '삼색 흰색 회색 갈색'), (363, '노랑색 황색 흰색'), (364, '흰색 갈색 흰색 아이보리'), (365, '흰색 아이보리 흰색 회색'), (366, '흰색 흰색 아이보리 갈색'), (367, '흰색 회색 주황색'), (368, '황색 흰색 흰색'), (369, '검정색 검정색 흰색 갈색 흰색'), (370, '갈색 베이지'), (371, '검정색 고등어'), (372, '갈색 검정색 검정색'), (373, '갈색 주황색 검정색'), (374, '흰색 아이보리 갈색 노랑색'), (375, '아이보리 갈색 흰색'), (376, '흰색 아이보리 주황색 검정색'), (377, '검정색 흰색 주황색'), (378, '주황색 흰색 아이보리 검정색'), (379, '흰색 회색 고등어'), (380, '흰색 황색 갈색 갈색'), (381, '황색 갈색 검정색 흰색'), (382, '흰색 아이보리 갈색 갈색'), (383, '턱시도 흰색'), (384, '흰색 갈색 검정색 삼색'), (385, '갈색 금색'), (386, '갈색 검정색 회색'), (387, '노랑색 검정색 흰색 회색'), (388, '노랑색 흰색 갈색 검정색'), (389, '황색 갈색 흰색 아이보리'), (390, '흰색 흰색 갈색'), (391, '황색 흰색 아이보리 흰색'), (392, '갈색 흰색 아이보리 갈색'), (393, '검정색 회색 고등어'), (394, '황색 검정색 회색'), (395, '검정색 갈색 흰색 노랑색 회색'), (396, '황색 갈색 갈색 검정색'), (397, '베이지 갈색 검정색'), (398, '갈색 노랑색 갈색'), (399, '흰색 아이보리 아이보리'), (400, '흰색 아이보리 주황색 갈색'), (401, '흰색 아이보리 노랑색 갈색'), (402, '아이보리 흰색 갈색 검정색'), (403, '살구색 흰색 갈색'), (404, '흰색 검정색 갈색 회색'), (405, '갈색 회색 노랑색'), (406, '흰색 갈색 회색 삼색'), (407, '흰색 갈색 갈색 노랑색'), (408, '아이보리 흰색 갈색'), (409, '노랑색 흰색 황색'), (410, '갈색 턱시도 턱시도'), (411, '베이지 황색'), (412, '흰색 흰색 아이보리 황색'), (413, '황색 아이보리 회색'), (414, '황색 흰색 아이보리 검정색'), (415, '갈색 아이보리 검정색'), (416, '회색 갈색 흰색 검정색'), (417, '흰색 아이보리 황색 갈색 갈색'), (418, '갈색 황색 갈색'), (419, '흰색 검정색 검정색 황색'), (420, '황색 회색 검정색'), (421, '회색 흰색 황색'), (422, '황색 회색 흰색'), (423, '검정색 흰색 검정색'), (424, '황색 황색 흰색 황색'), (425, '주황색 노랑색'), (426, '흰색 흰색 아이보리 황색 갈색'), (427, '황색 갈색 갈색'), (428, '황색 황색 갈색 흰색 아이보리 흰색'), (429, '갈색 갈색 갈색 흰색'), (430, '황색 갈색 흰색 아이보리 흰색'), (431, '회색 흰색 아이보리 검정색'), (432, '갈색 베이지 검정색'), (433, '갈색 살구색 흰색'), (434, '갈색 흰색 노랑색'), (435, '검정색 황색 회색'), (436, '베이지 갈색 흰색'), (437, '흰색 아이보리 주황색'), (438, '흰색 갈색 검정색 갈색'), (439, '삼색 노랑색 고등어'), (440, '흰색 흰색 아이보리 주황색'), (441, '황색 갈색 황색'), (442, '주황색 흰색 검정색'), (443, '노랑색 회색 검정색'), (444, '황색 갈색 흰색 아이보리 검정색'), (445, '흰색 주황색 흰색 아이보리'), (446, '회색 흰색 아이보리 흰색'), (447, '흰색 주황색 회색'), (448, '흰색 검정색 회색 고등어'), (449, '흰색 노랑색 살구색'), (450, '턱시도 턱시도 삼색 카오스'), (451, '흰색 흰색 아이보리 노랑색 갈색'), (452, '삼색 흰색 검정색 회색'), (453, '주황색 노랑색 흰색'), (454, '흰색 아이보리 베이지 흰색'), (455, '주황색 갈색 흰색 아이보리'), (456, '검정색 황색 갈색 흰색'), (457, '고등어 턱시도 턱시도'), (458, '검정색 노랑색 흰색 갈색'), (459, '삼색 흰색 아이보리 갈색'), (460, '주황색 갈색 흰색'), (461, '회색 흰색 검정색 고등어'), (462, '갈색 검정색 흰색 노랑색'), (463, '고등어 흰색 회색'), (464, '주황색 흰색 아이보리 흰색'), (465, '회색 검정색 황색'), (466, '검정색 갈색 흰색 카오스'), (467, '검정색 베이지 갈색'), (468, '황색 흰색 아이보리 갈색'), (469, '턱시도 턱시도 노랑색'), (470, '턱시도 턱시도 고등어'), (471, '삼색 검정색 황색 흰색'), (472, '회색 회색 갈색'), (473, '삼색 갈색 흰색 검정색'), (474, '회색 황색 흰색'), (475, '갈색 주황색 흰색 아이보리'), (476, '주황색 갈색 검정색'), (477, '갈색 갈색 주황색'), (478, '황색 검정색 검정색'), (479, '황색 갈색 검정색 노랑색'), (480, '황색 갈색 주황색 흰색'), (481, '회색 주황색'), (482, '검정색 갈색 흰색 아이보리 흰색'), (483, '흰색 황색 갈색 검정색'), (484, '흰색 아이보리 노랑색 흰색'), (485, '검정색 회색 흰색 고등어'), (486, '갈색 주황색 흰색 아이보리 흰색'), (487, '삼색 고등어 노랑색'), (488, '황색 금색'), (489, '갈색 갈색 검정색 흰색'), (490, '갈색 갈색 흰색 검정색'), (491, '황색 갈색 갈색 흰색 검정색'), (492, '갈색 황색 갈색 흰색'), (493, '황색 베이지 검정색'), (494, '갈색 검정색 흰색 회색'), (495, '회색 갈색 고등어'), (496, '삼색 노랑색 갈색 흰색 검정색'), (497, '갈색 회색 흰색 검정색'), (498, '카오스 고등어'), (499, '아이보리 갈색 검정색'), (500, '회색 회색 흰색'), (501, '흰색 노랑색 노랑색'), (502, '검정색 회색 고등어 흰색 턱시도 턱시도'), (503, '회색 고등어 흰색 턱시도 턱시도'), (504, '회색 갈색 흰색 아이보리'), (505, '흰색 갈색 아이보리 검정색'), (506, '베이지 갈색 갈색'), (507, '갈색 검정색 아이보리'), (508, '흰색 갈색 베이지'), (509, '흰색 아이보리 황색 검정색'), (510, '황색 갈색 노랑색 흰색'), (511, '검정색 노랑색 검정색 노랑색'), (512, '검정색 노랑색 노랑색'), (513, '검정색 회색 검정색'), (514, '흰색 베이지 회색 검정색'), (515, '흰색 주황색 아이보리'), (516, '갈색 고등어 턱시도 턱시도'), (517, '흰색 검정색 노랑색 검정색'), (518, '검정색 흰색 아이보리 흰색'), (519, '노랑색 아이보리'), (520, '살구색 갈색'), (521, '살구색 회색'), (522, '검정색 흰색 황색 갈색'), (523, '흰색 아이보리 살구색'), (524, '흰색 흰색 흰색 갈색'), (525, '회색 검정색 검정색'), (526, '흰색 주황색 갈색 검정색'), (527, '주황색 황색'), (528, '회색 흰색 아이보리 노랑색'), (529, '검정색 회색 갈색 흰색'), (530, '노랑색 갈색 검정색'), (531, '흰색 노랑색 검정색 카오스'), (532, '갈색 고등어 턱시도 흰색'), (533, '노랑색 회색 흰색'), (534, '흰색 주황색 갈색 갈색'), (535, '흰색 아이보리 노랑색 회색 검정색'), (536, '흰색 회색 검정색 검정색'), (537, '흰색 아이보리 갈색 흰색'), (538, '살구색 흰색 아이보리'), (539, '갈색 흰색 아이보리 흰색 갈색'), (540, '회색 황색 갈색 흰색 검정색'), (541, '아이보리 검정색 회색'), (542, '흰색 고등어 턱시도 턱시도'), (543, '베이지 주황색 갈색'), (544, '검정색 흰색 갈색 황색'), (545, '갈색 갈색 회색 흰색'), (546, '갈색 베이지 흰색'), (547, '갈색 황색 갈색 검정색'), (548, '흰색 베이지 갈색'), (549, '흰색 갈색 흰색 흰색 갈색'), (550, '갈색 회색 베이지'), (551, '베이지 회색 검정색'), (552, '갈색 흰색 검정색 주황색'), (553, '갈색 검정색 노랑색'), (554, '흰색 검정색 흰색'), (555, '황색 갈색 회색 검정색'), (556, '갈색 검정색 회색 흰색'), (557, '노랑색 갈색 갈색'), (558, '주황색 검정색 주황색 검정색 흰색'), (559, '갈색 턱시도'), (560, '검정색 갈색 황색 갈색 흰색'), (561, '황색 갈색 흰색 아이보리 노랑색'), (562, '검정색 황색 갈색 흰색 고등어'), (563, '검정색 황색 갈색 검정색 고등어'), (564, '검정색 노랑색 흰색 아이보리 카오스'), (565, '검정색 갈색 황색 갈색'), (566, '황색 갈색 흰색 검정색 고등어'), (567, '흰색 회색 검정색 노랑색'), (568, '갈색 흰색 검정색 갈색'), (569, '회색 금색 흰색 삼색'), (570, '검정색 흰색 아이보리 주황색'), (571, '노랑색 턱시도 턱시도'), (572, '황색 살구색'), (573, '검정색 갈색 회색 흰색'), (574, '삼색 검정색 흰색 갈색'), (575, '검정색 흰색 아이보리 갈색'), (576, '갈색 황색 갈색 검정색 흰색'), (577, '갈색 검정색 흰색 아이보리 흰색'), (578, '황색 주황색'), (579, '흰색 갈색 주황색 검정색'), (580, '노랑색 금색'), (581, '흰색 살구색 검정색'), (582, '황색 갈색 흰색 아이보리 흰색 검정색'), (583, '황색 황색 흰색'), (584, '황색 갈색 황색 검정색 흰색'), (585, '검정색 갈색 회색 고등어'), (586, '흰색 아이보리 주황색 흰색'), (587, '흰색 노랑색 주황색'), (588, '삼색 황색 갈색'), (589, '갈색 검정색 주황색 흰색'), (590, '흰색 고등어 금색'), (591, '고등어 금색'), (592, '삼색 흰색 노랑색 검정색'), (593, '회색 주황색 흰색 아이보리'), (594, '주황색 흰색 아이보리 흰색 검정색'), (595, '흰색 회색 갈색 검정색'), (596, '베이지 흰색 아이보리'), (597, '노랑색 고등어 턱시도 턱시도'), (598, '회색 카오스'), (599, '주황색 흰색 아이보리 갈색'), (600, '턱시도 턱시도 삼색'), (601, '갈색 검정색 갈색 흰색 아이보리'), (602, '갈색 검정색 갈색 흰색 아이보리 흰색'), (603, '흰색 회색 황색'), (604, '흰색 회색 흰색 아이보리 갈색'), (605, '흰색 황색 흰색 아이보리'), (606, '노랑색 삼색 턱시도 턱시도'), (607, '회색 검정색 베이지'), (608, '노랑색 턱시도 턱시도 고등어'), (609, '삼색 턱시도 턱시도'), (610, '흰색 흰색 아이보리 갈색 검정색'), (611, '회색 삼색'), (612, '노랑색 고등어 흰색 검정색'), (613, '노랑색 카오스 고등어'), (614, '갈색 삼색 노랑색'), (615, '갈색 주황색 황색'), (616, '흰색 노랑색 턱시도 턱시도'), (617, '흰색 검정색 흰색 갈색'), (618, '갈색 황색 노랑색'), (619, '검정색 황색 갈색 흰색 아이보리'), (620, '주황색 황색 갈색'), (621, '흰색 흰색 아이보리 주황색 갈색'), (622, '흰색 아이보리 황색 흰색'), (623, '회색 아이보리 황색'), (624, '삼색 검정색 노랑색 흰색'), (625, '베이지 베이지'), (626, '검정색 주황색 흰색 아이보리'), (627, '검정색 갈색 검정색 갈색 검정색'), (628, '노랑색 삼색 고등어'), (629, '주황색 흰색 황색 갈색'), (630, '갈색 흰색 아이보리 갈색 검정색'), (631, '회색 흰색 고등어'), (632, '삼색 흰색 갈색 검정색'), (633, '노랑색 흰색 턱시도 턱시도'), (634, '고등어 흰색 검정색 갈색'), (635, '검정색 갈색 회색 갈색'), (636, '황색 갈색 검정색 흰색 아이보리'), (637, '흰색 회색 턱시도 턱시도'), (638, '카오스 검정색 갈색'), (639, '아이보리 노랑색'))\n","((0, '광주'), (1, '경기'), (2, '대구'), (3, '인천'), (4, '충남'), (5, '서울'), (6, '전북'), (7, '전남'), (8, '경남'), (9, '부산'), (10, '대전'), (11, '울산'), (12, '강원'), (13, '충북'), (14, '세종'), (15, '경북'), (16, '제주'))\n","((0, '남구'), (1, '광산'), (2, '수원'), (3, '성남'), (4, '안양'), (5, '부천'), (6, '수성'), (7, '광명'), (8, '평택'), (9, '남양주'), (10, '서구'), (11, '안산'), (12, '하남'), (13, '아산'), (14, '용산'), (15, '전주'), (16, '영광'), (17, '함안'), (18, '통영'), (19, '완주'), (20, '동작'), (21, '강북'), (22, '양천'), (23, '영도'), (24, '해운대'), (25, '연제'), (26, '남동'), (27, '동구'), (28, '중구'), (29, '유성'), (30, '달성'), (31, '강릉'), (32, '제천'), (33, '청주'), (34, '서산'), (35, '남원'), (36, '목포'), (37, '창원3'), (38, '세종'), (39, '노원'), (40, '증평'), (41, '순천'), (42, '구미'), (43, '부평'), (44, '원주'), (45, '삼척'), (46, '화성'), (47, '나주'), (48, '밀양'), (49, '상주'), (50, '영주'), (51, '제주'), (52, '창녕'), (53, '강동'), (54, '서초'), (55, '관악'), (56, '북구'), (57, '파주'), (58, '울주'), (59, '고양'), (60, '오산'), (61, '시흥'), (62, '군포'), (63, '용인'), (64, '창원2'), (65, '이천'), (66, '광주'), (67, '횡성'), (68, '정선'), (69, '철원'), (70, '충주'), (71, '보은'), (72, '공주'), (73, '논산'), (74, '예산'), (75, '당진'), (76, '구로'), (77, '정읍'), (78, '음성'), (79, '무주'), (80, '순창'), (81, '고창'), (82, '부안'), (83, '여수'), (84, '광양'), (85, '담양'), (86, '곡성'), (87, '장성'), (88, '영천'), (89, '청도'), (90, '진안'), (91, '진주'), (92, '고성'), (93, '거창'), (94, '성동'), (95, '중랑'), (96, '성북'), (97, '강서'), (98, '군산'), (99, '부산진'), (100, '동래'), (101, '사하'), (102, '금정'), (103, '기장'), (104, '달서'), (105, '계양'), (106, '대덕'), (107, '의정부'), (108, '동두천'), (109, '구리'), (110, '안성'), (111, '김포'), (112, '양주'), (113, '포천'), (114, '춘천'), (115, '울진'), (116, '보령'), (117, '천안'), (118, '영암'), (119, '경주'), (120, '청송'), (121, '경산'), (122, '문경'), (123, '김해'), (124, '거제'), (125, '남해'), (126, '창원1'), (127, '송파'), (128, '은평'), (129, '수영'), (130, '무안'), (131, '포항'), (132, '김천'), (133, '마포'), (134, '금산'), (135, '예천'), (136, '양평'), (137, '영동'), (138, '홍천'), (139, '진천'), (140, '금천'), (141, '태안'), (142, '양산'), (143, '성주'), (144, '함평'), (145, '동대문'), (146, '하동'), (147, '영등포'), (148, '강남'), (149, '칠곡'), (150, '양구'), (151, '해남'), (152, '신안'), (153, '완도'), (154, '옹진'), (155, '홍성'), (156, '울릉'), (157, '양양'), (158, '평창'), (159, '속초'), (160, '화순'), (161, '단양'), (162, '부여'), (163, '인제'), (164, '강진'), (165, '익산'), (166, '진도'), (167, '사상'), (168, '옥천'), (169, '고흥'), (170, '태백'), (171, '종로'), (172, '가평'), (173, '광진'), (174, '연수'), (175, '산청'), (176, '안동'), (177, '강화'), (178, '영월'), (179, '의성'), (180, '영양'), (181, '영덕'), (182, '고령'), (183, '연천'), (184, '청양'), (185, '함양'), (186, '서대문'), (187, '사천'), (188, '임실'), (189, '합천'), (190, '괴산'), (191, '의왕'), (192, '장수'), (193, '계룡'), (194, '의령'), (195, '도봉'), (196, '군위'), (197, '과천'), (198, '동해'), (199, '화천'), (200, '여주'), (201, '서천'), (202, '구례'), (203, '김제'), (204, '보성'), (205, '봉화'), (206, '미추홀'), (207, '장흥'), (208, '개별사업(TNR)'), (209, '서울특별시'))\n","((0, '중형'), (1, '소형'), (2, '대형'), (3, '미상'))\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"5beDCfORePjl","executionInfo":{"status":"ok","timestamp":1625532650621,"user_tz":-540,"elapsed":1880,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"030f3816-ab19-420f-fdc7-aa1f48905a9d"},"source":["# 카테고리 데이터 변환 -> 숫자로\n","spcies_ndarr = np.zeros(trn_df.shape[0])\n","for i,data in enumerate(trn_df['축종']):\n","  spcies_ndarr[i] = spcies_dic[data]\n","\n","loc_ndarr = np.zeros(trn_df.shape[0])\n","for i,data in enumerate(trn_df['지역']):\n","  loc_ndarr[i] = loc_dic[data]\n","\n","kind_ndarr = np.zeros(trn_df.shape[0])\n","for i,data in enumerate(trn_df['품종2']):\n","  kind_ndarr[i] = kind_dic[data]\n","\n","color_ndarr = np.zeros(trn_df.shape[0])\n","for i,data in enumerate(trn_df['털색2']):\n","  color_ndarr[i] = color_dic[data]\n","\n","do_ndarr = np.zeros(trn_df.shape[0])\n","for i,data in enumerate(trn_df['도']):\n","  do_ndarr[i] = do_dic[data]\n","\n","si_ndarr = np.zeros(trn_df.shape[0])\n","for i,data in enumerate(trn_df['시']):\n","  si_ndarr[i] = si_dic[data]\n","\n","size_ndarr = np.zeros(trn_df.shape[0])\n","for i,data in enumerate(trn_df['사이즈']):\n","  size_ndarr[i] = size_dic[data]\n","\n","trn_df['축종'] = spcies_ndarr\n","trn_df['지역'] = loc_ndarr\n","trn_df['품종2'] = kind_ndarr\n","trn_df['털색2'] = color_ndarr\n","trn_df['도'] = do_ndarr\n","trn_df['시'] = si_ndarr\n","trn_df['사이즈'] = size_ndarr\n","\n","trn_df = trn_df.astype({\n","    '축종': 'int',\n","    '지역': 'int',\n","    '품종2': 'int',\n","    '털색2': 'int',\n","    '도' : 'int',\n","    '시' :'int',\n","    '사이즈':'int'\n","})\n","trn_df"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>공고번호</th>\n","      <th>축종</th>\n","      <th>품종</th>\n","      <th>털색</th>\n","      <th>성별</th>\n","      <th>중성화여부</th>\n","      <th>특징</th>\n","      <th>접수일시</th>\n","      <th>구조사유</th>\n","      <th>발생장소</th>\n","      <th>공고기간</th>\n","      <th>관할보호센터명</th>\n","      <th>보호장소</th>\n","      <th>관할기관</th>\n","      <th>상태</th>\n","      <th>gender</th>\n","      <th>neutering</th>\n","      <th>털색2</th>\n","      <th>품종2</th>\n","      <th>지역</th>\n","      <th>성격</th>\n","      <th>건강</th>\n","      <th>나이</th>\n","      <th>입양여부</th>\n","      <th>입양여부2</th>\n","      <th>월</th>\n","      <th>도</th>\n","      <th>시</th>\n","      <th>위도</th>\n","      <th>경도</th>\n","      <th>연</th>\n","      <th>연월</th>\n","      <th>사이즈</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>광주-남구-2018-00001</td>\n","      <td>0</td>\n","      <td>믹스견</td>\n","      <td>흰색</td>\n","      <td>수컷</td>\n","      <td>미상</td>\n","      <td>18-0002콩지,다리부상</td>\n","      <td>2018-01-01</td>\n","      <td>NaN</td>\n","      <td>남구 송하동</td>\n","      <td>10</td>\n","      <td>광주 동물보호소</td>\n","      <td>광주광역시 북구 본촌마을길 25 (본촌동, 건국동사무소)  광주 동물보호소</td>\n","      <td>광주광역시 남구</td>\n","      <td>종료(안락사)</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>35.222932</td>\n","      <td>126.881636</td>\n","      <td>2018</td>\n","      <td>2018-01</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>광주-남구-2018-00002</td>\n","      <td>0</td>\n","      <td>믹스견</td>\n","      <td>흰색</td>\n","      <td>암컷</td>\n","      <td>미상</td>\n","      <td>18-0003콩이</td>\n","      <td>2018-01-01</td>\n","      <td>NaN</td>\n","      <td>남구 송하동</td>\n","      <td>10</td>\n","      <td>광주 동물보호소</td>\n","      <td>광주광역시 북구 본촌마을길 25 (본촌동, 건국동사무소)  광주 동물보호소</td>\n","      <td>광주광역시 남구</td>\n","      <td>종료(입양)</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>35.222932</td>\n","      <td>126.881636</td>\n","      <td>2018</td>\n","      <td>2018-01</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>광주-광산-2018-00001</td>\n","      <td>0</td>\n","      <td>보스턴 테리어</td>\n","      <td>검흰</td>\n","      <td>수컷</td>\n","      <td>아니오</td>\n","      <td>18-0001볼타,스파이크 목줄착용</td>\n","      <td>2018-01-01</td>\n","      <td>NaN</td>\n","      <td>광산구 하남동</td>\n","      <td>10</td>\n","      <td>광주 동물보호소</td>\n","      <td>광주광역시 북구 본촌마을길 25 (본촌동, 건국동사무소)  광주 동물보호소</td>\n","      <td>광주광역시 광산구</td>\n","      <td>종료(자연사)</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>35.222932</td>\n","      <td>126.881636</td>\n","      <td>2018</td>\n","      <td>2018-01</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>경기-수원-2018-00001</td>\n","      <td>0</td>\n","      <td>믹스견</td>\n","      <td>갈색</td>\n","      <td>암컷</td>\n","      <td>아니오</td>\n","      <td>교통사고 = 골반 / 척추 분리 골절 , 대퇴골두 골절 = 진통제 처치</td>\n","      <td>2018-01-01</td>\n","      <td>NaN</td>\n","      <td>세류사거리</td>\n","      <td>7</td>\n","      <td>광교산동물병원</td>\n","      <td>경기도 수원시 장안구 영화동  127-39</td>\n","      <td>경기도 수원시</td>\n","      <td>종료(안락사)</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>37.290757</td>\n","      <td>127.016914</td>\n","      <td>2018</td>\n","      <td>2018-01</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>경기-성남-2018-00001</td>\n","      <td>0</td>\n","      <td>푸들</td>\n","      <td>흑색</td>\n","      <td>수컷</td>\n","      <td>아니오</td>\n","      <td>연두색옷착용.귀염증</td>\n","      <td>2018-01-01</td>\n","      <td>유기견발견후 신고</td>\n","      <td>중원도서관근처</td>\n","      <td>10</td>\n","      <td>펫토피아동물병원</td>\n","      <td>경기도 성남시 분당구 불정로 266 (수내동, 유신제일조합)</td>\n","      <td>경기도 성남시</td>\n","      <td>종료(반환)</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>37.367098</td>\n","      <td>127.127694</td>\n","      <td>2018</td>\n","      <td>2018-01</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>418653</th>\n","      <td>421668</td>\n","      <td>경기-수원-2021-00384</td>\n","      <td>0</td>\n","      <td>잭 러셀 테리어</td>\n","      <td>백갈</td>\n","      <td>수컷</td>\n","      <td>아니오</td>\n","      <td>반환</td>\n","      <td>2021-06-23</td>\n","      <td>NaN</td>\n","      <td>팔달구 장안문</td>\n","      <td>11</td>\n","      <td>수원시 동물보호센터</td>\n","      <td>경기도 수원시 영통구 광교호수로 234 (하동, 수원시 동물보호센터)  하동 40-10</td>\n","      <td>경기도 수원시</td>\n","      <td>종료(반환)</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>37.870098</td>\n","      <td>126.983546</td>\n","      <td>2021</td>\n","      <td>2021-06</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>418654</th>\n","      <td>421671</td>\n","      <td>경기-고양-2021-00579</td>\n","      <td>0</td>\n","      <td>말티즈</td>\n","      <td>흰색</td>\n","      <td>암컷</td>\n","      <td>예</td>\n","      <td>없음</td>\n","      <td>2021-06-23</td>\n","      <td>NaN</td>\n","      <td>대장동285-3부근</td>\n","      <td>11</td>\n","      <td>고양시동물보호센터</td>\n","      <td>경기도 고양시 덕양구 고양대로 1695 (원흥동, 고양시 농업기술센터)  고양시동물...</td>\n","      <td>경기도 고양시</td>\n","      <td>종료(반환)</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>68</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>59</td>\n","      <td>37.649641</td>\n","      <td>126.870267</td>\n","      <td>2021</td>\n","      <td>2021-06</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>418655</th>\n","      <td>421696</td>\n","      <td>강원-원주-2021-00421</td>\n","      <td>0</td>\n","      <td>믹스견</td>\n","      <td>회,갈색</td>\n","      <td>수컷</td>\n","      <td>아니오</td>\n","      <td>목줄착용</td>\n","      <td>2021-06-23</td>\n","      <td>NaN</td>\n","      <td>혁신로</td>\n","      <td>11</td>\n","      <td>원주유기동물보호센터</td>\n","      <td>강원도 원주시 호저면 칠봉로 110-6</td>\n","      <td>강원도 원주시</td>\n","      <td>종료(반환)</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>47</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>12</td>\n","      <td>44</td>\n","      <td>36.578819</td>\n","      <td>126.705485</td>\n","      <td>2021</td>\n","      <td>2021-06</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>418656</th>\n","      <td>421725</td>\n","      <td>경남-창원1-2021-00305</td>\n","      <td>0</td>\n","      <td>푸들</td>\n","      <td>갈색</td>\n","      <td>수컷</td>\n","      <td>아니오</td>\n","      <td>K-6-1-28 갈색</td>\n","      <td>2021-06-23</td>\n","      <td>NaN</td>\n","      <td>성산구 사파동 창원지방검찰청 내</td>\n","      <td>9</td>\n","      <td>창원유기동물보호소</td>\n","      <td>경상남도 창원시 의창구 창이대로 71 (명서동, 창원시농업기술센터)  축산과</td>\n","      <td>경상남도 창원시 의창성산구</td>\n","      <td>종료(반환)</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>136</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>126</td>\n","      <td>35.239026</td>\n","      <td>128.646613</td>\n","      <td>2021</td>\n","      <td>2021-06</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>418657</th>\n","      <td>421726</td>\n","      <td>경남-창원1-2021-00306</td>\n","      <td>0</td>\n","      <td>믹스견</td>\n","      <td>검정색</td>\n","      <td>수컷</td>\n","      <td>아니오</td>\n","      <td>K-6-1-29 ㅠㅠ</td>\n","      <td>2021-06-23</td>\n","      <td>NaN</td>\n","      <td>의창구 서곡길 25번길 23 앞 철거지역</td>\n","      <td>9</td>\n","      <td>창원유기동물보호소</td>\n","      <td>경상남도 창원시 의창구 창이대로 71 (명서동, 창원시농업기술센터)  축산과</td>\n","      <td>경상남도 창원시 의창성산구</td>\n","      <td>종료(안락사)</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>136</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>126</td>\n","      <td>35.239026</td>\n","      <td>128.646613</td>\n","      <td>2021</td>\n","      <td>2021-06</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>418658 rows × 34 columns</p>\n","</div>"],"text/plain":["         index               공고번호  축종        품종  ...          경도     연       연월 사이즈\n","0            0   광주-남구-2018-00001   0       믹스견  ...  126.881636  2018  2018-01   0\n","1            1   광주-남구-2018-00002   0       믹스견  ...  126.881636  2018  2018-01   0\n","2            2   광주-광산-2018-00001   0   보스턴 테리어  ...  126.881636  2018  2018-01   1\n","3            3   경기-수원-2018-00001   0       믹스견  ...  127.016914  2018  2018-01   0\n","4            4   경기-성남-2018-00001   0        푸들  ...  127.127694  2018  2018-01   0\n","...        ...                ...  ..       ...  ...         ...   ...      ...  ..\n","418653  421668   경기-수원-2021-00384   0  잭 러셀 테리어  ...  126.983546  2021  2021-06   1\n","418654  421671   경기-고양-2021-00579   0       말티즈  ...  126.870267  2021  2021-06   1\n","418655  421696   강원-원주-2021-00421   0       믹스견  ...  126.705485  2021  2021-06   0\n","418656  421725  경남-창원1-2021-00305   0        푸들  ...  128.646613  2021  2021-06   0\n","418657  421726  경남-창원1-2021-00306   0       믹스견  ...  128.646613  2021  2021-06   0\n","\n","[418658 rows x 34 columns]"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"92a-O-bw8GUW","executionInfo":{"status":"ok","timestamp":1625532650622,"user_tz":-540,"elapsed":26,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"7246b53f-5fb9-4220-ed9c-7417697f60d1"},"source":["trn_df.columns"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['index', '공고번호', '축종', '품종', '털색', '성별', '중성화여부', '특징', '접수일시', '구조사유',\n","       '발생장소', '공고기간', '관할보호센터명', '보호장소', '관할기관', '상태', 'gender', 'neutering',\n","       '털색2', '품종2', '지역', '성격', '건강', '나이', '입양여부', '입양여부2', '월', '도', '시',\n","       '위도', '경도', '연', '연월', '사이즈'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":422},"id":"tBb3pIKntoK1","executionInfo":{"status":"ok","timestamp":1625532650623,"user_tz":-540,"elapsed":21,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"0c73341d-9d94-47d5-b270-855afdedef96"},"source":["trn_df.drop(columns=['접수일시','index','성별','공고번호','품종','털색','중성화여부','구조사유','특징','관할보호센터명','발생장소','보호장소','관할기관','상태','입양여부2','연','연월'],axis=1,inplace=True)\n","trn_df"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>축종</th>\n","      <th>공고기간</th>\n","      <th>gender</th>\n","      <th>neutering</th>\n","      <th>털색2</th>\n","      <th>품종2</th>\n","      <th>지역</th>\n","      <th>성격</th>\n","      <th>건강</th>\n","      <th>나이</th>\n","      <th>입양여부</th>\n","      <th>월</th>\n","      <th>도</th>\n","      <th>시</th>\n","      <th>위도</th>\n","      <th>경도</th>\n","      <th>사이즈</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>35.222932</td>\n","      <td>126.881636</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>35.222932</td>\n","      <td>126.881636</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>35.222932</td>\n","      <td>126.881636</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>37.290757</td>\n","      <td>127.016914</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>37.367098</td>\n","      <td>127.127694</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>418653</th>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>37.870098</td>\n","      <td>126.983546</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>418654</th>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>68</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>59</td>\n","      <td>37.649641</td>\n","      <td>126.870267</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>418655</th>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>47</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>12</td>\n","      <td>44</td>\n","      <td>36.578819</td>\n","      <td>126.705485</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>418656</th>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>136</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>126</td>\n","      <td>35.239026</td>\n","      <td>128.646613</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>418657</th>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>136</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>126</td>\n","      <td>35.239026</td>\n","      <td>128.646613</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>418658 rows × 17 columns</p>\n","</div>"],"text/plain":["        축종  공고기간  gender  neutering  털색2  ...   도    시         위도          경도  사이즈\n","0        0    10       1          2    0  ...   0    0  35.222932  126.881636    0\n","1        0    10       0          2    0  ...   0    0  35.222932  126.881636    0\n","2        0    10       1          1    1  ...   0    1  35.222932  126.881636    1\n","3        0     7       0          1    2  ...   1    2  37.290757  127.016914    0\n","4        0    10       1          1    3  ...   1    3  37.367098  127.127694    0\n","...     ..   ...     ...        ...  ...  ...  ..  ...        ...         ...  ...\n","418653   0    11       1          1    1  ...   1    2  37.870098  126.983546    1\n","418654   0    11       0          0    0  ...   1   59  37.649641  126.870267    1\n","418655   0    11       1          1   15  ...  12   44  36.578819  126.705485    0\n","418656   0     9       1          1    2  ...   8  126  35.239026  128.646613    0\n","418657   0     9       1          1    3  ...   8  126  35.239026  128.646613    0\n","\n","[418658 rows x 17 columns]"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KDrKgPnDePhP","executionInfo":{"status":"ok","timestamp":1625532650624,"user_tz":-540,"elapsed":20,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"db3376ec-b97d-45ce-9bbc-7e4ce4308b2a"},"source":["# 위도, 경도 nan은 평균 값으로 채워넣기\n","trn_df = trn_df.fillna(trn_df.mean())\n","trn_df.info()"],"execution_count":18,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 418658 entries, 0 to 418657\n","Data columns (total 17 columns):\n"," #   Column     Non-Null Count   Dtype  \n","---  ------     --------------   -----  \n"," 0   축종         418658 non-null  int64  \n"," 1   공고기간       418658 non-null  int64  \n"," 2   gender     418658 non-null  int64  \n"," 3   neutering  418658 non-null  int64  \n"," 4   털색2        418658 non-null  int64  \n"," 5   품종2        418658 non-null  int64  \n"," 6   지역         418658 non-null  int64  \n"," 7   성격         418658 non-null  int64  \n"," 8   건강         418658 non-null  int64  \n"," 9   나이         418658 non-null  int64  \n"," 10  입양여부       418658 non-null  int64  \n"," 11  월          418658 non-null  int64  \n"," 12  도          418658 non-null  int64  \n"," 13  시          418658 non-null  int64  \n"," 14  위도         418658 non-null  float64\n"," 15  경도         418658 non-null  float64\n"," 16  사이즈        418658 non-null  int64  \n","dtypes: float64(2), int64(15)\n","memory usage: 57.5 MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lBTk9p884wP-","executionInfo":{"status":"ok","timestamp":1625532650973,"user_tz":-540,"elapsed":3,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}}},"source":["y = trn_df['입양여부']\n","trn = trn_df.drop(columns='입양여부',axis=1).values"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BULjvssn5W-C","executionInfo":{"status":"ok","timestamp":1625532651432,"user_tz":-540,"elapsed":8,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"1c4e98a5-4f3d-4cfc-aa87-2b204d92dff1"},"source":["y"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         0\n","1         1\n","2         0\n","3         0\n","4         1\n","         ..\n","418653    1\n","418654    1\n","418655    1\n","418656    1\n","418657    0\n","Name: 입양여부, Length: 418658, dtype: int64"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"HeSvPKDaePfE","executionInfo":{"status":"ok","timestamp":1625532657255,"user_tz":-540,"elapsed":4,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}}},"source":["# 데이터 나누기 -> 훈련:검증:테스트 = 7:2:1\n","X_trn, X_val, y_trn, y_val = train_test_split(trn, y, test_size =.33, shuffle=True, random_state=seed)\n","X_val, X_test, y_val, y_test = train_test_split(X_val, y_val, test_size =.33, shuffle=True, random_state=seed)"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tDoVCLvZEoVm","executionInfo":{"status":"ok","timestamp":1625532657660,"user_tz":-540,"elapsed":4,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"83041b98-e969-4b18-a75b-f040d8488ddf"},"source":["X_trn.shape,X_val.shape,y_trn.shape,y_val.shape"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((280500, 16), (92565, 16), (280500,), (92565,))"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"nTmaDF61oVtH"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"mxsfgMwWKSgm"},"source":["# SVC (Support Vector Classifier) 학습"]},{"cell_type":"code","metadata":{"id":"-7EJiHFvKZbm"},"source":["# clf = SVC(kernel='rbf')\n","# clf.fit(X_trn,y_trn)\n","# p_val = clf.predict(X_val)\n","# print('acc: {}'.format(clf.score(y_val,p_val)* 100))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gY3iSdu4odUY"},"source":["# Catboost 학습\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rYZ_Yah2od9I","executionInfo":{"status":"ok","timestamp":1625499374070,"user_tz":-540,"elapsed":241015,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"284bf215-3be6-4104-caec-ae1512e64675"},"source":["# params = {\n","#     'iterations':100,\n","#     'learning_rate':0.01,\n","#     'task_type':'GPU',\n","    \n","# }\n","# search_spaces = {'iterations': Integer(10, 1000),\n","#                  'depth': Integer(1, 8),\n","#                  'learning_rate': Real(0.01, 1.0, 'log-uniform'),\n","#                  'random_strength': Real(1e-9, 10, 'log-uniform'),\n","#                  'bagging_temperature': Real(0.0, 1.0),\n","#                  'border_count': Integer(1, 255),\n","#                  'l2_leaf_reg': Integer(2, 30),\n","#                  'scale_pos_weight':Real(0.01, 1.0, 'uniform')}\n","model = CatBoostClassifier(\n","  iterations=10000,\n","  learning_rate=0.02,\n","  depth=10,\n","  l2_leaf_reg=None,\n","  model_size_reg=None,\n","  max_depth=None,\n","  task_type='GPU',\n",")\n","\n","model.fit(\n","    X_trn, y_trn,\n","    eval_set=(X_val, y_val),\n","    verbose=10\n",")\n","\n","\n","p_val = model.predict(X_val)\n","print(p_val.shape, y_val.shape)\n","loss = log_loss(y_val,p_val)\n","auc = accuracy_score(y_val, p_val)\n","\n","print(f'{accuracy_score(y_val, p_val) * 100:.4f}%')\n","print(f'{precision_score(y_val, p_val) * 100:.4f}%')\n","print(f'{recall_score(y_val, p_val) * 100:.4f}%')\n","print(f'loss: {loss}')\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0:\tlearn: 0.6884998\ttest: 0.6885069\tbest: 0.6885069 (0)\ttotal: 45.7ms\tremaining: 7m 37s\n","10:\tlearn: 0.6517359\ttest: 0.6518644\tbest: 0.6518644 (10)\ttotal: 380ms\tremaining: 5m 44s\n","20:\tlearn: 0.6269116\ttest: 0.6272015\tbest: 0.6272015 (20)\ttotal: 618ms\tremaining: 4m 53s\n","30:\tlearn: 0.6107143\ttest: 0.6111633\tbest: 0.6111633 (30)\ttotal: 842ms\tremaining: 4m 30s\n","40:\tlearn: 0.5988796\ttest: 0.5995114\tbest: 0.5995114 (40)\ttotal: 1.08s\tremaining: 4m 21s\n","50:\tlearn: 0.5901042\ttest: 0.5908954\tbest: 0.5908954 (50)\ttotal: 1.3s\tremaining: 4m 13s\n","60:\tlearn: 0.5838505\ttest: 0.5848460\tbest: 0.5848460 (60)\ttotal: 1.54s\tremaining: 4m 11s\n","70:\tlearn: 0.5789087\ttest: 0.5801197\tbest: 0.5801197 (70)\ttotal: 1.77s\tremaining: 4m 8s\n","80:\tlearn: 0.5750095\ttest: 0.5764177\tbest: 0.5764177 (80)\ttotal: 2s\tremaining: 4m 4s\n","90:\tlearn: 0.5715591\ttest: 0.5731823\tbest: 0.5731823 (90)\ttotal: 2.23s\tremaining: 4m 2s\n","100:\tlearn: 0.5685422\ttest: 0.5703637\tbest: 0.5703637 (100)\ttotal: 2.45s\tremaining: 3m 59s\n","110:\tlearn: 0.5659313\ttest: 0.5679336\tbest: 0.5679336 (110)\ttotal: 2.69s\tremaining: 3m 59s\n","120:\tlearn: 0.5635301\ttest: 0.5657405\tbest: 0.5657405 (120)\ttotal: 2.92s\tremaining: 3m 58s\n","130:\tlearn: 0.5614116\ttest: 0.5637489\tbest: 0.5637489 (130)\ttotal: 3.16s\tremaining: 3m 58s\n","140:\tlearn: 0.5592841\ttest: 0.5618349\tbest: 0.5618349 (140)\ttotal: 3.39s\tremaining: 3m 57s\n","150:\tlearn: 0.5575041\ttest: 0.5602781\tbest: 0.5602781 (150)\ttotal: 3.63s\tremaining: 3m 56s\n","160:\tlearn: 0.5557720\ttest: 0.5587295\tbest: 0.5587295 (160)\ttotal: 3.86s\tremaining: 3m 56s\n","170:\tlearn: 0.5542226\ttest: 0.5573786\tbest: 0.5573786 (170)\ttotal: 4.09s\tremaining: 3m 55s\n","180:\tlearn: 0.5527347\ttest: 0.5561120\tbest: 0.5561120 (180)\ttotal: 4.33s\tremaining: 3m 54s\n","190:\tlearn: 0.5514084\ttest: 0.5549606\tbest: 0.5549606 (190)\ttotal: 4.57s\tremaining: 3m 54s\n","200:\tlearn: 0.5500735\ttest: 0.5538500\tbest: 0.5538500 (200)\ttotal: 4.8s\tremaining: 3m 54s\n","210:\tlearn: 0.5488707\ttest: 0.5528572\tbest: 0.5528572 (210)\ttotal: 5.03s\tremaining: 3m 53s\n","220:\tlearn: 0.5476359\ttest: 0.5518151\tbest: 0.5518151 (220)\ttotal: 5.27s\tremaining: 3m 53s\n","230:\tlearn: 0.5465698\ttest: 0.5509544\tbest: 0.5509544 (230)\ttotal: 5.51s\tremaining: 3m 52s\n","240:\tlearn: 0.5454949\ttest: 0.5501286\tbest: 0.5501286 (240)\ttotal: 5.74s\tremaining: 3m 52s\n","250:\tlearn: 0.5445074\ttest: 0.5493359\tbest: 0.5493359 (250)\ttotal: 5.97s\tremaining: 3m 51s\n","260:\tlearn: 0.5434919\ttest: 0.5485304\tbest: 0.5485304 (260)\ttotal: 6.19s\tremaining: 3m 51s\n","270:\tlearn: 0.5425948\ttest: 0.5478515\tbest: 0.5478515 (270)\ttotal: 6.42s\tremaining: 3m 50s\n","280:\tlearn: 0.5416478\ttest: 0.5471978\tbest: 0.5471978 (280)\ttotal: 6.66s\tremaining: 3m 50s\n","290:\tlearn: 0.5406891\ttest: 0.5464231\tbest: 0.5464231 (290)\ttotal: 6.88s\tremaining: 3m 49s\n","300:\tlearn: 0.5397953\ttest: 0.5457951\tbest: 0.5457951 (300)\ttotal: 7.11s\tremaining: 3m 49s\n","310:\tlearn: 0.5390114\ttest: 0.5452148\tbest: 0.5452148 (310)\ttotal: 7.34s\tremaining: 3m 48s\n","320:\tlearn: 0.5380744\ttest: 0.5445482\tbest: 0.5445482 (320)\ttotal: 7.58s\tremaining: 3m 48s\n","330:\tlearn: 0.5373924\ttest: 0.5440856\tbest: 0.5440856 (330)\ttotal: 7.81s\tremaining: 3m 48s\n","340:\tlearn: 0.5365776\ttest: 0.5435004\tbest: 0.5435004 (340)\ttotal: 8.03s\tremaining: 3m 47s\n","350:\tlearn: 0.5359027\ttest: 0.5431029\tbest: 0.5431029 (350)\ttotal: 8.27s\tremaining: 3m 47s\n","360:\tlearn: 0.5350998\ttest: 0.5425762\tbest: 0.5425762 (360)\ttotal: 8.49s\tremaining: 3m 46s\n","370:\tlearn: 0.5343786\ttest: 0.5420560\tbest: 0.5420560 (370)\ttotal: 8.73s\tremaining: 3m 46s\n","380:\tlearn: 0.5337099\ttest: 0.5416200\tbest: 0.5416200 (380)\ttotal: 8.96s\tremaining: 3m 46s\n","390:\tlearn: 0.5330794\ttest: 0.5412180\tbest: 0.5412180 (390)\ttotal: 9.19s\tremaining: 3m 45s\n","400:\tlearn: 0.5323774\ttest: 0.5407400\tbest: 0.5407400 (400)\ttotal: 9.41s\tremaining: 3m 45s\n","410:\tlearn: 0.5317496\ttest: 0.5403612\tbest: 0.5403612 (410)\ttotal: 9.65s\tremaining: 3m 45s\n","420:\tlearn: 0.5311004\ttest: 0.5399614\tbest: 0.5399614 (420)\ttotal: 9.88s\tremaining: 3m 44s\n","430:\tlearn: 0.5304284\ttest: 0.5395500\tbest: 0.5395500 (430)\ttotal: 10.1s\tremaining: 3m 44s\n","440:\tlearn: 0.5298850\ttest: 0.5392641\tbest: 0.5392641 (440)\ttotal: 10.3s\tremaining: 3m 43s\n","450:\tlearn: 0.5292735\ttest: 0.5388815\tbest: 0.5388815 (450)\ttotal: 10.6s\tremaining: 3m 43s\n","460:\tlearn: 0.5286339\ttest: 0.5384696\tbest: 0.5384696 (460)\ttotal: 10.8s\tremaining: 3m 43s\n","470:\tlearn: 0.5280729\ttest: 0.5381357\tbest: 0.5381357 (470)\ttotal: 11s\tremaining: 3m 43s\n","480:\tlearn: 0.5274850\ttest: 0.5378146\tbest: 0.5378146 (480)\ttotal: 11.3s\tremaining: 3m 42s\n","490:\tlearn: 0.5269644\ttest: 0.5375378\tbest: 0.5375378 (490)\ttotal: 11.5s\tremaining: 3m 42s\n","500:\tlearn: 0.5264259\ttest: 0.5372344\tbest: 0.5372344 (500)\ttotal: 11.7s\tremaining: 3m 42s\n","510:\tlearn: 0.5259183\ttest: 0.5369860\tbest: 0.5369860 (510)\ttotal: 12s\tremaining: 3m 42s\n","520:\tlearn: 0.5253963\ttest: 0.5367342\tbest: 0.5367342 (520)\ttotal: 12.2s\tremaining: 3m 41s\n","530:\tlearn: 0.5249647\ttest: 0.5365271\tbest: 0.5365271 (530)\ttotal: 12.4s\tremaining: 3m 41s\n","540:\tlearn: 0.5244013\ttest: 0.5362343\tbest: 0.5362343 (540)\ttotal: 12.7s\tremaining: 3m 41s\n","550:\tlearn: 0.5239086\ttest: 0.5359418\tbest: 0.5359418 (550)\ttotal: 12.9s\tremaining: 3m 41s\n","560:\tlearn: 0.5233732\ttest: 0.5357050\tbest: 0.5357050 (560)\ttotal: 13.1s\tremaining: 3m 40s\n","570:\tlearn: 0.5229051\ttest: 0.5354692\tbest: 0.5354692 (570)\ttotal: 13.4s\tremaining: 3m 40s\n","580:\tlearn: 0.5224159\ttest: 0.5352521\tbest: 0.5352521 (580)\ttotal: 13.6s\tremaining: 3m 40s\n","590:\tlearn: 0.5219139\ttest: 0.5349984\tbest: 0.5349984 (590)\ttotal: 13.8s\tremaining: 3m 40s\n","600:\tlearn: 0.5214871\ttest: 0.5347391\tbest: 0.5347391 (600)\ttotal: 14.1s\tremaining: 3m 40s\n","610:\tlearn: 0.5210534\ttest: 0.5345348\tbest: 0.5345348 (610)\ttotal: 14.3s\tremaining: 3m 39s\n","620:\tlearn: 0.5205302\ttest: 0.5342819\tbest: 0.5342819 (620)\ttotal: 14.5s\tremaining: 3m 39s\n","630:\tlearn: 0.5200943\ttest: 0.5340369\tbest: 0.5340369 (630)\ttotal: 14.8s\tremaining: 3m 39s\n","640:\tlearn: 0.5196891\ttest: 0.5338595\tbest: 0.5338595 (640)\ttotal: 15s\tremaining: 3m 39s\n","650:\tlearn: 0.5191763\ttest: 0.5336651\tbest: 0.5336651 (650)\ttotal: 15.2s\tremaining: 3m 38s\n","660:\tlearn: 0.5187057\ttest: 0.5334338\tbest: 0.5334338 (660)\ttotal: 15.5s\tremaining: 3m 38s\n","670:\tlearn: 0.5182450\ttest: 0.5332034\tbest: 0.5332034 (670)\ttotal: 15.7s\tremaining: 3m 38s\n","680:\tlearn: 0.5178442\ttest: 0.5330054\tbest: 0.5330054 (680)\ttotal: 15.9s\tremaining: 3m 38s\n","690:\tlearn: 0.5174304\ttest: 0.5328447\tbest: 0.5328447 (690)\ttotal: 16.2s\tremaining: 3m 37s\n","700:\tlearn: 0.5170499\ttest: 0.5326754\tbest: 0.5326754 (700)\ttotal: 16.4s\tremaining: 3m 37s\n","710:\tlearn: 0.5166486\ttest: 0.5324908\tbest: 0.5324908 (710)\ttotal: 16.6s\tremaining: 3m 37s\n","720:\tlearn: 0.5161804\ttest: 0.5323425\tbest: 0.5323425 (720)\ttotal: 16.9s\tremaining: 3m 36s\n","730:\tlearn: 0.5157519\ttest: 0.5321997\tbest: 0.5321997 (730)\ttotal: 17.1s\tremaining: 3m 36s\n","740:\tlearn: 0.5153592\ttest: 0.5320512\tbest: 0.5320512 (740)\ttotal: 17.3s\tremaining: 3m 36s\n","750:\tlearn: 0.5149112\ttest: 0.5318718\tbest: 0.5318718 (750)\ttotal: 17.6s\tremaining: 3m 36s\n","760:\tlearn: 0.5145051\ttest: 0.5317365\tbest: 0.5317365 (760)\ttotal: 17.8s\tremaining: 3m 36s\n","770:\tlearn: 0.5141211\ttest: 0.5315791\tbest: 0.5315791 (770)\ttotal: 18s\tremaining: 3m 35s\n","780:\tlearn: 0.5137449\ttest: 0.5314445\tbest: 0.5314445 (780)\ttotal: 18.3s\tremaining: 3m 35s\n","790:\tlearn: 0.5133730\ttest: 0.5312545\tbest: 0.5312545 (790)\ttotal: 18.5s\tremaining: 3m 35s\n","800:\tlearn: 0.5129688\ttest: 0.5311253\tbest: 0.5311253 (800)\ttotal: 18.7s\tremaining: 3m 35s\n","810:\tlearn: 0.5124964\ttest: 0.5309014\tbest: 0.5309014 (810)\ttotal: 19s\tremaining: 3m 34s\n","820:\tlearn: 0.5121452\ttest: 0.5307815\tbest: 0.5307815 (820)\ttotal: 19.2s\tremaining: 3m 34s\n","830:\tlearn: 0.5117674\ttest: 0.5306595\tbest: 0.5306595 (830)\ttotal: 19.4s\tremaining: 3m 34s\n","840:\tlearn: 0.5114303\ttest: 0.5305266\tbest: 0.5305266 (840)\ttotal: 19.7s\tremaining: 3m 34s\n","850:\tlearn: 0.5110106\ttest: 0.5303877\tbest: 0.5303877 (850)\ttotal: 19.9s\tremaining: 3m 33s\n","860:\tlearn: 0.5106923\ttest: 0.5302870\tbest: 0.5302870 (860)\ttotal: 20.1s\tremaining: 3m 33s\n","870:\tlearn: 0.5103401\ttest: 0.5301634\tbest: 0.5301634 (870)\ttotal: 20.3s\tremaining: 3m 33s\n","880:\tlearn: 0.5099163\ttest: 0.5300410\tbest: 0.5300410 (880)\ttotal: 20.6s\tremaining: 3m 33s\n","890:\tlearn: 0.5095577\ttest: 0.5299157\tbest: 0.5299157 (890)\ttotal: 20.8s\tremaining: 3m 32s\n","900:\tlearn: 0.5091661\ttest: 0.5298148\tbest: 0.5298148 (900)\ttotal: 21.1s\tremaining: 3m 32s\n","910:\tlearn: 0.5087693\ttest: 0.5297171\tbest: 0.5297171 (910)\ttotal: 21.3s\tremaining: 3m 32s\n","920:\tlearn: 0.5084321\ttest: 0.5295757\tbest: 0.5295757 (920)\ttotal: 21.5s\tremaining: 3m 32s\n","930:\tlearn: 0.5080379\ttest: 0.5294746\tbest: 0.5294746 (930)\ttotal: 21.7s\tremaining: 3m 31s\n","940:\tlearn: 0.5076828\ttest: 0.5293959\tbest: 0.5293959 (940)\ttotal: 22s\tremaining: 3m 31s\n","950:\tlearn: 0.5073370\ttest: 0.5293044\tbest: 0.5293044 (950)\ttotal: 22.2s\tremaining: 3m 31s\n","960:\tlearn: 0.5069496\ttest: 0.5291938\tbest: 0.5291938 (960)\ttotal: 22.4s\tremaining: 3m 31s\n","970:\tlearn: 0.5065636\ttest: 0.5291073\tbest: 0.5291073 (970)\ttotal: 22.7s\tremaining: 3m 30s\n","980:\tlearn: 0.5062482\ttest: 0.5290251\tbest: 0.5290251 (980)\ttotal: 22.9s\tremaining: 3m 30s\n","990:\tlearn: 0.5059213\ttest: 0.5288921\tbest: 0.5288921 (990)\ttotal: 23.1s\tremaining: 3m 30s\n","1000:\tlearn: 0.5055258\ttest: 0.5287762\tbest: 0.5287762 (1000)\ttotal: 23.4s\tremaining: 3m 30s\n","1010:\tlearn: 0.5051446\ttest: 0.5286370\tbest: 0.5286370 (1010)\ttotal: 23.6s\tremaining: 3m 29s\n","1020:\tlearn: 0.5047770\ttest: 0.5285323\tbest: 0.5285323 (1020)\ttotal: 23.9s\tremaining: 3m 29s\n","1030:\tlearn: 0.5044482\ttest: 0.5284655\tbest: 0.5284655 (1030)\ttotal: 24.1s\tremaining: 3m 29s\n","1040:\tlearn: 0.5041018\ttest: 0.5283372\tbest: 0.5283372 (1040)\ttotal: 24.3s\tremaining: 3m 29s\n","1050:\tlearn: 0.5037231\ttest: 0.5282188\tbest: 0.5282188 (1050)\ttotal: 24.6s\tremaining: 3m 29s\n","1060:\tlearn: 0.5033622\ttest: 0.5281323\tbest: 0.5281323 (1060)\ttotal: 24.8s\tremaining: 3m 29s\n","1070:\tlearn: 0.5029869\ttest: 0.5280268\tbest: 0.5280268 (1070)\ttotal: 25s\tremaining: 3m 28s\n","1080:\tlearn: 0.5026340\ttest: 0.5279299\tbest: 0.5279299 (1080)\ttotal: 25.3s\tremaining: 3m 28s\n","1090:\tlearn: 0.5022905\ttest: 0.5278388\tbest: 0.5278388 (1090)\ttotal: 25.5s\tremaining: 3m 28s\n","1100:\tlearn: 0.5019791\ttest: 0.5277744\tbest: 0.5277744 (1100)\ttotal: 25.7s\tremaining: 3m 28s\n","1110:\tlearn: 0.5016516\ttest: 0.5276921\tbest: 0.5276921 (1110)\ttotal: 26s\tremaining: 3m 27s\n","1120:\tlearn: 0.5012916\ttest: 0.5276032\tbest: 0.5276032 (1120)\ttotal: 26.2s\tremaining: 3m 27s\n","1130:\tlearn: 0.5009398\ttest: 0.5275468\tbest: 0.5275468 (1130)\ttotal: 26.4s\tremaining: 3m 27s\n","1140:\tlearn: 0.5006091\ttest: 0.5274945\tbest: 0.5274945 (1140)\ttotal: 26.7s\tremaining: 3m 27s\n","1150:\tlearn: 0.5003084\ttest: 0.5274003\tbest: 0.5274003 (1150)\ttotal: 26.9s\tremaining: 3m 27s\n","1160:\tlearn: 0.4999555\ttest: 0.5273251\tbest: 0.5273251 (1160)\ttotal: 27.2s\tremaining: 3m 26s\n","1170:\tlearn: 0.4995937\ttest: 0.5272510\tbest: 0.5272510 (1170)\ttotal: 27.4s\tremaining: 3m 26s\n","1180:\tlearn: 0.4992255\ttest: 0.5271726\tbest: 0.5271726 (1180)\ttotal: 27.6s\tremaining: 3m 26s\n","1190:\tlearn: 0.4989591\ttest: 0.5271147\tbest: 0.5271147 (1190)\ttotal: 27.9s\tremaining: 3m 26s\n","1200:\tlearn: 0.4986454\ttest: 0.5270470\tbest: 0.5270470 (1200)\ttotal: 28.1s\tremaining: 3m 25s\n","1210:\tlearn: 0.4983666\ttest: 0.5269823\tbest: 0.5269823 (1210)\ttotal: 28.3s\tremaining: 3m 25s\n","1220:\tlearn: 0.4979889\ttest: 0.5269069\tbest: 0.5269069 (1220)\ttotal: 28.5s\tremaining: 3m 25s\n","1230:\tlearn: 0.4976375\ttest: 0.5268518\tbest: 0.5268518 (1230)\ttotal: 28.8s\tremaining: 3m 25s\n","1240:\tlearn: 0.4973432\ttest: 0.5267822\tbest: 0.5267822 (1240)\ttotal: 29s\tremaining: 3m 24s\n","1250:\tlearn: 0.4970502\ttest: 0.5267437\tbest: 0.5267437 (1250)\ttotal: 29.3s\tremaining: 3m 24s\n","1260:\tlearn: 0.4967723\ttest: 0.5266752\tbest: 0.5266752 (1260)\ttotal: 29.5s\tremaining: 3m 24s\n","1270:\tlearn: 0.4964118\ttest: 0.5265978\tbest: 0.5265978 (1270)\ttotal: 29.7s\tremaining: 3m 24s\n","1280:\tlearn: 0.4960858\ttest: 0.5265584\tbest: 0.5265535 (1278)\ttotal: 29.9s\tremaining: 3m 23s\n","1290:\tlearn: 0.4957611\ttest: 0.5265162\tbest: 0.5265162 (1290)\ttotal: 30.2s\tremaining: 3m 23s\n","1300:\tlearn: 0.4954623\ttest: 0.5264629\tbest: 0.5264629 (1300)\ttotal: 30.4s\tremaining: 3m 23s\n","1310:\tlearn: 0.4951231\ttest: 0.5264115\tbest: 0.5264115 (1310)\ttotal: 30.6s\tremaining: 3m 23s\n","1320:\tlearn: 0.4947831\ttest: 0.5263556\tbest: 0.5263556 (1320)\ttotal: 30.9s\tremaining: 3m 22s\n","1330:\tlearn: 0.4944406\ttest: 0.5263011\tbest: 0.5263011 (1330)\ttotal: 31.1s\tremaining: 3m 22s\n","1340:\tlearn: 0.4941142\ttest: 0.5262487\tbest: 0.5262487 (1340)\ttotal: 31.3s\tremaining: 3m 22s\n","1350:\tlearn: 0.4938226\ttest: 0.5262083\tbest: 0.5262070 (1349)\ttotal: 31.6s\tremaining: 3m 22s\n","1360:\tlearn: 0.4934841\ttest: 0.5261567\tbest: 0.5261567 (1360)\ttotal: 31.8s\tremaining: 3m 21s\n","1370:\tlearn: 0.4931287\ttest: 0.5260885\tbest: 0.5260870 (1369)\ttotal: 32s\tremaining: 3m 21s\n","1380:\tlearn: 0.4928562\ttest: 0.5260246\tbest: 0.5260246 (1380)\ttotal: 32.3s\tremaining: 3m 21s\n","1390:\tlearn: 0.4925569\ttest: 0.5259678\tbest: 0.5259678 (1390)\ttotal: 32.5s\tremaining: 3m 21s\n","1400:\tlearn: 0.4922049\ttest: 0.5259103\tbest: 0.5259103 (1400)\ttotal: 32.7s\tremaining: 3m 20s\n","1410:\tlearn: 0.4919054\ttest: 0.5258736\tbest: 0.5258730 (1409)\ttotal: 33s\tremaining: 3m 20s\n","1420:\tlearn: 0.4915013\ttest: 0.5257975\tbest: 0.5257975 (1420)\ttotal: 33.2s\tremaining: 3m 20s\n","1430:\tlearn: 0.4912146\ttest: 0.5257390\tbest: 0.5257390 (1430)\ttotal: 33.4s\tremaining: 3m 20s\n","1440:\tlearn: 0.4909435\ttest: 0.5256823\tbest: 0.5256823 (1440)\ttotal: 33.7s\tremaining: 3m 19s\n","1450:\tlearn: 0.4906209\ttest: 0.5256407\tbest: 0.5256407 (1450)\ttotal: 33.9s\tremaining: 3m 19s\n","1460:\tlearn: 0.4902903\ttest: 0.5255940\tbest: 0.5255940 (1460)\ttotal: 34.1s\tremaining: 3m 19s\n","1470:\tlearn: 0.4899310\ttest: 0.5255459\tbest: 0.5255459 (1470)\ttotal: 34.4s\tremaining: 3m 19s\n","1480:\tlearn: 0.4896136\ttest: 0.5254940\tbest: 0.5254940 (1480)\ttotal: 34.6s\tremaining: 3m 19s\n","1490:\tlearn: 0.4892775\ttest: 0.5254551\tbest: 0.5254551 (1490)\ttotal: 34.8s\tremaining: 3m 18s\n","1500:\tlearn: 0.4889625\ttest: 0.5254155\tbest: 0.5254155 (1500)\ttotal: 35.1s\tremaining: 3m 18s\n","1510:\tlearn: 0.4886617\ttest: 0.5253640\tbest: 0.5253623 (1509)\ttotal: 35.3s\tremaining: 3m 18s\n","1520:\tlearn: 0.4883453\ttest: 0.5253205\tbest: 0.5253205 (1520)\ttotal: 35.5s\tremaining: 3m 18s\n","1530:\tlearn: 0.4880072\ttest: 0.5252759\tbest: 0.5252759 (1530)\ttotal: 35.8s\tremaining: 3m 17s\n","1540:\tlearn: 0.4876868\ttest: 0.5252248\tbest: 0.5252248 (1540)\ttotal: 36s\tremaining: 3m 17s\n","1550:\tlearn: 0.4873879\ttest: 0.5251754\tbest: 0.5251754 (1550)\ttotal: 36.2s\tremaining: 3m 17s\n","1560:\tlearn: 0.4870637\ttest: 0.5251449\tbest: 0.5251449 (1560)\ttotal: 36.5s\tremaining: 3m 17s\n","1570:\tlearn: 0.4867674\ttest: 0.5250889\tbest: 0.5250889 (1570)\ttotal: 36.7s\tremaining: 3m 16s\n","1580:\tlearn: 0.4864814\ttest: 0.5250552\tbest: 0.5250552 (1580)\ttotal: 36.9s\tremaining: 3m 16s\n","1590:\tlearn: 0.4861644\ttest: 0.5250289\tbest: 0.5250289 (1590)\ttotal: 37.2s\tremaining: 3m 16s\n","1600:\tlearn: 0.4858943\ttest: 0.5250064\tbest: 0.5250064 (1600)\ttotal: 37.4s\tremaining: 3m 16s\n","1610:\tlearn: 0.4855807\ttest: 0.5249642\tbest: 0.5249642 (1610)\ttotal: 37.6s\tremaining: 3m 15s\n","1620:\tlearn: 0.4852578\ttest: 0.5249159\tbest: 0.5249158 (1618)\ttotal: 37.9s\tremaining: 3m 15s\n","1630:\tlearn: 0.4849563\ttest: 0.5248769\tbest: 0.5248769 (1630)\ttotal: 38.1s\tremaining: 3m 15s\n","1640:\tlearn: 0.4846312\ttest: 0.5248018\tbest: 0.5248018 (1640)\ttotal: 38.3s\tremaining: 3m 15s\n","1650:\tlearn: 0.4843126\ttest: 0.5247662\tbest: 0.5247662 (1650)\ttotal: 38.6s\tremaining: 3m 14s\n","1660:\tlearn: 0.4840308\ttest: 0.5247376\tbest: 0.5247376 (1660)\ttotal: 38.8s\tremaining: 3m 14s\n","1670:\tlearn: 0.4837266\ttest: 0.5246893\tbest: 0.5246893 (1670)\ttotal: 39s\tremaining: 3m 14s\n","1680:\tlearn: 0.4834417\ttest: 0.5246458\tbest: 0.5246458 (1680)\ttotal: 39.3s\tremaining: 3m 14s\n","1690:\tlearn: 0.4831342\ttest: 0.5246051\tbest: 0.5246051 (1690)\ttotal: 39.5s\tremaining: 3m 14s\n","1700:\tlearn: 0.4828497\ttest: 0.5245777\tbest: 0.5245777 (1700)\ttotal: 39.7s\tremaining: 3m 13s\n","1710:\tlearn: 0.4825696\ttest: 0.5245396\tbest: 0.5245396 (1710)\ttotal: 40s\tremaining: 3m 13s\n","1720:\tlearn: 0.4822497\ttest: 0.5245233\tbest: 0.5245233 (1720)\ttotal: 40.2s\tremaining: 3m 13s\n","1730:\tlearn: 0.4819315\ttest: 0.5244680\tbest: 0.5244680 (1730)\ttotal: 40.4s\tremaining: 3m 13s\n","1740:\tlearn: 0.4816019\ttest: 0.5244526\tbest: 0.5244526 (1740)\ttotal: 40.7s\tremaining: 3m 12s\n","1750:\tlearn: 0.4813502\ttest: 0.5244144\tbest: 0.5244144 (1750)\ttotal: 40.9s\tremaining: 3m 12s\n","1760:\tlearn: 0.4810596\ttest: 0.5243891\tbest: 0.5243891 (1760)\ttotal: 41.1s\tremaining: 3m 12s\n","1770:\tlearn: 0.4807844\ttest: 0.5243767\tbest: 0.5243767 (1770)\ttotal: 41.4s\tremaining: 3m 12s\n","1780:\tlearn: 0.4805401\ttest: 0.5243486\tbest: 0.5243481 (1778)\ttotal: 41.6s\tremaining: 3m 11s\n","1790:\tlearn: 0.4802543\ttest: 0.5242984\tbest: 0.5242984 (1790)\ttotal: 41.8s\tremaining: 3m 11s\n","1800:\tlearn: 0.4799821\ttest: 0.5242457\tbest: 0.5242457 (1800)\ttotal: 42s\tremaining: 3m 11s\n","1810:\tlearn: 0.4797057\ttest: 0.5242117\tbest: 0.5242117 (1810)\ttotal: 42.3s\tremaining: 3m 11s\n","1820:\tlearn: 0.4794533\ttest: 0.5241790\tbest: 0.5241790 (1820)\ttotal: 42.5s\tremaining: 3m 10s\n","1830:\tlearn: 0.4791774\ttest: 0.5241643\tbest: 0.5241643 (1830)\ttotal: 42.7s\tremaining: 3m 10s\n","1840:\tlearn: 0.4788856\ttest: 0.5241385\tbest: 0.5241364 (1838)\ttotal: 43s\tremaining: 3m 10s\n","1850:\tlearn: 0.4785914\ttest: 0.5241167\tbest: 0.5241167 (1850)\ttotal: 43.2s\tremaining: 3m 10s\n","1860:\tlearn: 0.4783044\ttest: 0.5240908\tbest: 0.5240908 (1860)\ttotal: 43.4s\tremaining: 3m 9s\n","1870:\tlearn: 0.4780118\ttest: 0.5240618\tbest: 0.5240618 (1870)\ttotal: 43.7s\tremaining: 3m 9s\n","1880:\tlearn: 0.4777587\ttest: 0.5240443\tbest: 0.5240443 (1880)\ttotal: 43.9s\tremaining: 3m 9s\n","1890:\tlearn: 0.4775213\ttest: 0.5240351\tbest: 0.5240331 (1887)\ttotal: 44.1s\tremaining: 3m 9s\n","1900:\tlearn: 0.4772586\ttest: 0.5240159\tbest: 0.5240159 (1900)\ttotal: 44.4s\tremaining: 3m 9s\n","1910:\tlearn: 0.4770169\ttest: 0.5239805\tbest: 0.5239805 (1910)\ttotal: 44.6s\tremaining: 3m 8s\n","1920:\tlearn: 0.4767397\ttest: 0.5239401\tbest: 0.5239401 (1920)\ttotal: 44.9s\tremaining: 3m 8s\n","1930:\tlearn: 0.4764819\ttest: 0.5239090\tbest: 0.5239090 (1930)\ttotal: 45.1s\tremaining: 3m 8s\n","1940:\tlearn: 0.4762006\ttest: 0.5238767\tbest: 0.5238767 (1940)\ttotal: 45.3s\tremaining: 3m 8s\n","1950:\tlearn: 0.4759163\ttest: 0.5238671\tbest: 0.5238671 (1950)\ttotal: 45.6s\tremaining: 3m 7s\n","1960:\tlearn: 0.4756230\ttest: 0.5238407\tbest: 0.5238407 (1960)\ttotal: 45.8s\tremaining: 3m 7s\n","1970:\tlearn: 0.4753289\ttest: 0.5237958\tbest: 0.5237958 (1970)\ttotal: 46s\tremaining: 3m 7s\n","1980:\tlearn: 0.4750764\ttest: 0.5237875\tbest: 0.5237875 (1980)\ttotal: 46.3s\tremaining: 3m 7s\n","1990:\tlearn: 0.4747919\ttest: 0.5237502\tbest: 0.5237495 (1989)\ttotal: 46.5s\tremaining: 3m 7s\n","2000:\tlearn: 0.4745541\ttest: 0.5237073\tbest: 0.5237073 (2000)\ttotal: 46.7s\tremaining: 3m 6s\n","2010:\tlearn: 0.4742767\ttest: 0.5236837\tbest: 0.5236835 (2009)\ttotal: 47s\tremaining: 3m 6s\n","2020:\tlearn: 0.4740336\ttest: 0.5236520\tbest: 0.5236520 (2020)\ttotal: 47.2s\tremaining: 3m 6s\n","2030:\tlearn: 0.4737670\ttest: 0.5236320\tbest: 0.5236320 (2030)\ttotal: 47.4s\tremaining: 3m 6s\n","2040:\tlearn: 0.4735062\ttest: 0.5236253\tbest: 0.5236210 (2034)\ttotal: 47.7s\tremaining: 3m 5s\n","2050:\tlearn: 0.4732467\ttest: 0.5236034\tbest: 0.5236032 (2049)\ttotal: 47.9s\tremaining: 3m 5s\n","2060:\tlearn: 0.4730006\ttest: 0.5235741\tbest: 0.5235741 (2060)\ttotal: 48.1s\tremaining: 3m 5s\n","2070:\tlearn: 0.4727211\ttest: 0.5235539\tbest: 0.5235539 (2070)\ttotal: 48.4s\tremaining: 3m 5s\n","2080:\tlearn: 0.4724919\ttest: 0.5235544\tbest: 0.5235488 (2074)\ttotal: 48.6s\tremaining: 3m 4s\n","2090:\tlearn: 0.4722320\ttest: 0.5235340\tbest: 0.5235340 (2090)\ttotal: 48.8s\tremaining: 3m 4s\n","2100:\tlearn: 0.4719726\ttest: 0.5235173\tbest: 0.5235173 (2100)\ttotal: 49.1s\tremaining: 3m 4s\n","2110:\tlearn: 0.4717162\ttest: 0.5234875\tbest: 0.5234875 (2110)\ttotal: 49.3s\tremaining: 3m 4s\n","2120:\tlearn: 0.4714576\ttest: 0.5234632\tbest: 0.5234632 (2120)\ttotal: 49.5s\tremaining: 3m 3s\n","2130:\tlearn: 0.4712366\ttest: 0.5234574\tbest: 0.5234574 (2130)\ttotal: 49.8s\tremaining: 3m 3s\n","2140:\tlearn: 0.4709981\ttest: 0.5234305\tbest: 0.5234305 (2140)\ttotal: 50s\tremaining: 3m 3s\n","2150:\tlearn: 0.4707282\ttest: 0.5234110\tbest: 0.5234036 (2147)\ttotal: 50.2s\tremaining: 3m 3s\n","2160:\tlearn: 0.4704322\ttest: 0.5234056\tbest: 0.5234036 (2147)\ttotal: 50.5s\tremaining: 3m 3s\n","2170:\tlearn: 0.4701775\ttest: 0.5233890\tbest: 0.5233885 (2167)\ttotal: 50.7s\tremaining: 3m 2s\n","2180:\tlearn: 0.4699229\ttest: 0.5233664\tbest: 0.5233639 (2176)\ttotal: 50.9s\tremaining: 3m 2s\n","2190:\tlearn: 0.4696806\ttest: 0.5233425\tbest: 0.5233406 (2189)\ttotal: 51.2s\tremaining: 3m 2s\n","2200:\tlearn: 0.4694303\ttest: 0.5233222\tbest: 0.5233222 (2200)\ttotal: 51.4s\tremaining: 3m 2s\n","2210:\tlearn: 0.4691626\ttest: 0.5233346\tbest: 0.5233187 (2201)\ttotal: 51.6s\tremaining: 3m 1s\n","2220:\tlearn: 0.4688944\ttest: 0.5233187\tbest: 0.5233176 (2219)\ttotal: 51.9s\tremaining: 3m 1s\n","2230:\tlearn: 0.4686263\ttest: 0.5233164\tbest: 0.5233114 (2227)\ttotal: 52.1s\tremaining: 3m 1s\n","2240:\tlearn: 0.4684166\ttest: 0.5232990\tbest: 0.5232982 (2238)\ttotal: 52.3s\tremaining: 3m 1s\n","2250:\tlearn: 0.4681224\ttest: 0.5232884\tbest: 0.5232847 (2248)\ttotal: 52.6s\tremaining: 3m\n","2260:\tlearn: 0.4678808\ttest: 0.5232655\tbest: 0.5232655 (2260)\ttotal: 52.8s\tremaining: 3m\n","2270:\tlearn: 0.4676047\ttest: 0.5232493\tbest: 0.5232493 (2270)\ttotal: 53s\tremaining: 3m\n","2280:\tlearn: 0.4673269\ttest: 0.5232358\tbest: 0.5232358 (2280)\ttotal: 53.3s\tremaining: 3m\n","2290:\tlearn: 0.4671107\ttest: 0.5232227\tbest: 0.5232209 (2289)\ttotal: 53.5s\tremaining: 3m\n","2300:\tlearn: 0.4668593\ttest: 0.5232122\tbest: 0.5232093 (2297)\ttotal: 53.7s\tremaining: 2m 59s\n","2310:\tlearn: 0.4666112\ttest: 0.5232200\tbest: 0.5232093 (2297)\ttotal: 54s\tremaining: 2m 59s\n","2320:\tlearn: 0.4663540\ttest: 0.5232155\tbest: 0.5232093 (2297)\ttotal: 54.2s\tremaining: 2m 59s\n","2330:\tlearn: 0.4661218\ttest: 0.5231996\tbest: 0.5231979 (2328)\ttotal: 54.4s\tremaining: 2m 59s\n","2340:\tlearn: 0.4658394\ttest: 0.5231934\tbest: 0.5231876 (2336)\ttotal: 54.7s\tremaining: 2m 58s\n","2350:\tlearn: 0.4656103\ttest: 0.5231804\tbest: 0.5231804 (2350)\ttotal: 54.9s\tremaining: 2m 58s\n","2360:\tlearn: 0.4653819\ttest: 0.5231620\tbest: 0.5231620 (2360)\ttotal: 55.2s\tremaining: 2m 58s\n","2370:\tlearn: 0.4651702\ttest: 0.5231639\tbest: 0.5231587 (2366)\ttotal: 55.4s\tremaining: 2m 58s\n","2380:\tlearn: 0.4649169\ttest: 0.5231696\tbest: 0.5231587 (2366)\ttotal: 55.6s\tremaining: 2m 57s\n","2390:\tlearn: 0.4646749\ttest: 0.5231481\tbest: 0.5231481 (2390)\ttotal: 55.9s\tremaining: 2m 57s\n","2400:\tlearn: 0.4644402\ttest: 0.5231278\tbest: 0.5231278 (2400)\ttotal: 56.1s\tremaining: 2m 57s\n","2410:\tlearn: 0.4641696\ttest: 0.5231165\tbest: 0.5231165 (2410)\ttotal: 56.3s\tremaining: 2m 57s\n","2420:\tlearn: 0.4639589\ttest: 0.5230911\tbest: 0.5230911 (2420)\ttotal: 56.5s\tremaining: 2m 57s\n","2430:\tlearn: 0.4636949\ttest: 0.5230905\tbest: 0.5230769 (2423)\ttotal: 56.8s\tremaining: 2m 56s\n","2440:\tlearn: 0.4634601\ttest: 0.5230569\tbest: 0.5230569 (2440)\ttotal: 57s\tremaining: 2m 56s\n","2450:\tlearn: 0.4632418\ttest: 0.5230267\tbest: 0.5230267 (2450)\ttotal: 57.3s\tremaining: 2m 56s\n","2460:\tlearn: 0.4629955\ttest: 0.5229973\tbest: 0.5229973 (2460)\ttotal: 57.5s\tremaining: 2m 56s\n","2470:\tlearn: 0.4627384\ttest: 0.5229967\tbest: 0.5229906 (2469)\ttotal: 57.7s\tremaining: 2m 55s\n","2480:\tlearn: 0.4624722\ttest: 0.5229962\tbest: 0.5229879 (2472)\ttotal: 57.9s\tremaining: 2m 55s\n","2490:\tlearn: 0.4622312\ttest: 0.5229732\tbest: 0.5229732 (2490)\ttotal: 58.2s\tremaining: 2m 55s\n","2500:\tlearn: 0.4620015\ttest: 0.5229418\tbest: 0.5229407 (2499)\ttotal: 58.4s\tremaining: 2m 55s\n","2510:\tlearn: 0.4618127\ttest: 0.5229301\tbest: 0.5229301 (2510)\ttotal: 58.6s\tremaining: 2m 54s\n","2520:\tlearn: 0.4615691\ttest: 0.5229034\tbest: 0.5229034 (2520)\ttotal: 58.9s\tremaining: 2m 54s\n","2530:\tlearn: 0.4613602\ttest: 0.5229052\tbest: 0.5228954 (2529)\ttotal: 59.1s\tremaining: 2m 54s\n","2540:\tlearn: 0.4611547\ttest: 0.5229005\tbest: 0.5228954 (2529)\ttotal: 59.3s\tremaining: 2m 54s\n","2550:\tlearn: 0.4609096\ttest: 0.5228894\tbest: 0.5228855 (2548)\ttotal: 59.6s\tremaining: 2m 53s\n","2560:\tlearn: 0.4606714\ttest: 0.5228901\tbest: 0.5228805 (2555)\ttotal: 59.8s\tremaining: 2m 53s\n","2570:\tlearn: 0.4604323\ttest: 0.5228881\tbest: 0.5228805 (2555)\ttotal: 1m\tremaining: 2m 53s\n","2580:\tlearn: 0.4601791\ttest: 0.5228754\tbest: 0.5228738 (2578)\ttotal: 1m\tremaining: 2m 53s\n","2590:\tlearn: 0.4599342\ttest: 0.5228670\tbest: 0.5228659 (2583)\ttotal: 1m\tremaining: 2m 52s\n","2600:\tlearn: 0.4596796\ttest: 0.5228721\tbest: 0.5228659 (2583)\ttotal: 1m\tremaining: 2m 52s\n","2610:\tlearn: 0.4594189\ttest: 0.5228860\tbest: 0.5228659 (2583)\ttotal: 1m\tremaining: 2m 52s\n","2620:\tlearn: 0.4591745\ttest: 0.5228659\tbest: 0.5228659 (2583)\ttotal: 1m 1s\tremaining: 2m 52s\n","2630:\tlearn: 0.4589482\ttest: 0.5228586\tbest: 0.5228542 (2623)\ttotal: 1m 1s\tremaining: 2m 52s\n","2640:\tlearn: 0.4587385\ttest: 0.5228628\tbest: 0.5228542 (2623)\ttotal: 1m 1s\tremaining: 2m 51s\n","2650:\tlearn: 0.4584955\ttest: 0.5228505\tbest: 0.5228505 (2650)\ttotal: 1m 1s\tremaining: 2m 51s\n","2660:\tlearn: 0.4582527\ttest: 0.5228473\tbest: 0.5228450 (2651)\ttotal: 1m 2s\tremaining: 2m 51s\n","2670:\tlearn: 0.4580338\ttest: 0.5228426\tbest: 0.5228426 (2670)\ttotal: 1m 2s\tremaining: 2m 51s\n","2680:\tlearn: 0.4577650\ttest: 0.5228365\tbest: 0.5228283 (2677)\ttotal: 1m 2s\tremaining: 2m 50s\n","2690:\tlearn: 0.4575478\ttest: 0.5228413\tbest: 0.5228283 (2677)\ttotal: 1m 2s\tremaining: 2m 50s\n","2700:\tlearn: 0.4573550\ttest: 0.5228381\tbest: 0.5228283 (2677)\ttotal: 1m 3s\tremaining: 2m 50s\n","2710:\tlearn: 0.4571468\ttest: 0.5228192\tbest: 0.5228183 (2707)\ttotal: 1m 3s\tremaining: 2m 50s\n","2720:\tlearn: 0.4568971\ttest: 0.5228322\tbest: 0.5228183 (2707)\ttotal: 1m 3s\tremaining: 2m 49s\n","2730:\tlearn: 0.4566731\ttest: 0.5228280\tbest: 0.5228183 (2707)\ttotal: 1m 3s\tremaining: 2m 49s\n","2740:\tlearn: 0.4564503\ttest: 0.5228232\tbest: 0.5228145 (2737)\ttotal: 1m 3s\tremaining: 2m 49s\n","2750:\tlearn: 0.4561966\ttest: 0.5228265\tbest: 0.5228145 (2737)\ttotal: 1m 4s\tremaining: 2m 49s\n","2760:\tlearn: 0.4559251\ttest: 0.5228091\tbest: 0.5228086 (2758)\ttotal: 1m 4s\tremaining: 2m 48s\n","2770:\tlearn: 0.4556791\ttest: 0.5227973\tbest: 0.5227888 (2766)\ttotal: 1m 4s\tremaining: 2m 48s\n","2780:\tlearn: 0.4554268\ttest: 0.5227814\tbest: 0.5227814 (2780)\ttotal: 1m 4s\tremaining: 2m 48s\n","2790:\tlearn: 0.4551699\ttest: 0.5228042\tbest: 0.5227807 (2782)\ttotal: 1m 5s\tremaining: 2m 48s\n","2800:\tlearn: 0.4549338\ttest: 0.5228128\tbest: 0.5227807 (2782)\ttotal: 1m 5s\tremaining: 2m 48s\n","2810:\tlearn: 0.4546972\ttest: 0.5228214\tbest: 0.5227807 (2782)\ttotal: 1m 5s\tremaining: 2m 47s\n","2820:\tlearn: 0.4544814\ttest: 0.5228058\tbest: 0.5227807 (2782)\ttotal: 1m 5s\tremaining: 2m 47s\n","2830:\tlearn: 0.4542733\ttest: 0.5227991\tbest: 0.5227807 (2782)\ttotal: 1m 6s\tremaining: 2m 47s\n","2840:\tlearn: 0.4540638\ttest: 0.5228016\tbest: 0.5227807 (2782)\ttotal: 1m 6s\tremaining: 2m 47s\n","2850:\tlearn: 0.4538127\ttest: 0.5228141\tbest: 0.5227807 (2782)\ttotal: 1m 6s\tremaining: 2m 46s\n","2860:\tlearn: 0.4535824\ttest: 0.5228061\tbest: 0.5227807 (2782)\ttotal: 1m 6s\tremaining: 2m 46s\n","2870:\tlearn: 0.4533657\ttest: 0.5228067\tbest: 0.5227807 (2782)\ttotal: 1m 7s\tremaining: 2m 46s\n","2880:\tlearn: 0.4531550\ttest: 0.5228025\tbest: 0.5227807 (2782)\ttotal: 1m 7s\tremaining: 2m 46s\n","2890:\tlearn: 0.4528962\ttest: 0.5228020\tbest: 0.5227807 (2782)\ttotal: 1m 7s\tremaining: 2m 45s\n","2900:\tlearn: 0.4526444\ttest: 0.5227912\tbest: 0.5227807 (2782)\ttotal: 1m 7s\tremaining: 2m 45s\n","2910:\tlearn: 0.4524281\ttest: 0.5227933\tbest: 0.5227807 (2782)\ttotal: 1m 7s\tremaining: 2m 45s\n","2920:\tlearn: 0.4521965\ttest: 0.5228004\tbest: 0.5227807 (2782)\ttotal: 1m 8s\tremaining: 2m 45s\n","2930:\tlearn: 0.4520021\ttest: 0.5228014\tbest: 0.5227807 (2782)\ttotal: 1m 8s\tremaining: 2m 44s\n","2940:\tlearn: 0.4517873\ttest: 0.5227919\tbest: 0.5227807 (2782)\ttotal: 1m 8s\tremaining: 2m 44s\n","2950:\tlearn: 0.4515697\ttest: 0.5227908\tbest: 0.5227789 (2946)\ttotal: 1m 8s\tremaining: 2m 44s\n","2960:\tlearn: 0.4513736\ttest: 0.5227891\tbest: 0.5227789 (2946)\ttotal: 1m 9s\tremaining: 2m 44s\n","2970:\tlearn: 0.4511583\ttest: 0.5227804\tbest: 0.5227789 (2946)\ttotal: 1m 9s\tremaining: 2m 44s\n","2980:\tlearn: 0.4509807\ttest: 0.5227856\tbest: 0.5227789 (2946)\ttotal: 1m 9s\tremaining: 2m 43s\n","2990:\tlearn: 0.4507471\ttest: 0.5227894\tbest: 0.5227789 (2946)\ttotal: 1m 9s\tremaining: 2m 43s\n","3000:\tlearn: 0.4505597\ttest: 0.5227953\tbest: 0.5227789 (2946)\ttotal: 1m 9s\tremaining: 2m 43s\n","3010:\tlearn: 0.4503568\ttest: 0.5227994\tbest: 0.5227789 (2946)\ttotal: 1m 10s\tremaining: 2m 43s\n","3020:\tlearn: 0.4501209\ttest: 0.5228017\tbest: 0.5227789 (2946)\ttotal: 1m 10s\tremaining: 2m 42s\n","3030:\tlearn: 0.4499113\ttest: 0.5228086\tbest: 0.5227789 (2946)\ttotal: 1m 10s\tremaining: 2m 42s\n","3040:\tlearn: 0.4496766\ttest: 0.5228157\tbest: 0.5227789 (2946)\ttotal: 1m 10s\tremaining: 2m 42s\n","3050:\tlearn: 0.4494472\ttest: 0.5228061\tbest: 0.5227789 (2946)\ttotal: 1m 11s\tremaining: 2m 42s\n","3060:\tlearn: 0.4492041\ttest: 0.5228222\tbest: 0.5227789 (2946)\ttotal: 1m 11s\tremaining: 2m 41s\n","3070:\tlearn: 0.4490140\ttest: 0.5228298\tbest: 0.5227789 (2946)\ttotal: 1m 11s\tremaining: 2m 41s\n","3080:\tlearn: 0.4487792\ttest: 0.5228432\tbest: 0.5227789 (2946)\ttotal: 1m 11s\tremaining: 2m 41s\n","3090:\tlearn: 0.4485795\ttest: 0.5228521\tbest: 0.5227789 (2946)\ttotal: 1m 12s\tremaining: 2m 41s\n","3100:\tlearn: 0.4483657\ttest: 0.5228625\tbest: 0.5227789 (2946)\ttotal: 1m 12s\tremaining: 2m 40s\n","3110:\tlearn: 0.4481603\ttest: 0.5228816\tbest: 0.5227789 (2946)\ttotal: 1m 12s\tremaining: 2m 40s\n","3120:\tlearn: 0.4479526\ttest: 0.5228866\tbest: 0.5227789 (2946)\ttotal: 1m 12s\tremaining: 2m 40s\n","3130:\tlearn: 0.4477365\ttest: 0.5228797\tbest: 0.5227789 (2946)\ttotal: 1m 13s\tremaining: 2m 40s\n","3140:\tlearn: 0.4475110\ttest: 0.5228659\tbest: 0.5227789 (2946)\ttotal: 1m 13s\tremaining: 2m 40s\n","3150:\tlearn: 0.4472647\ttest: 0.5228804\tbest: 0.5227789 (2946)\ttotal: 1m 13s\tremaining: 2m 39s\n","3160:\tlearn: 0.4470654\ttest: 0.5228712\tbest: 0.5227789 (2946)\ttotal: 1m 13s\tremaining: 2m 39s\n","3170:\tlearn: 0.4468470\ttest: 0.5228653\tbest: 0.5227789 (2946)\ttotal: 1m 13s\tremaining: 2m 39s\n","3180:\tlearn: 0.4466538\ttest: 0.5228782\tbest: 0.5227789 (2946)\ttotal: 1m 14s\tremaining: 2m 39s\n","3190:\tlearn: 0.4464352\ttest: 0.5228761\tbest: 0.5227789 (2946)\ttotal: 1m 14s\tremaining: 2m 38s\n","3200:\tlearn: 0.4461991\ttest: 0.5228789\tbest: 0.5227789 (2946)\ttotal: 1m 14s\tremaining: 2m 38s\n","3210:\tlearn: 0.4459690\ttest: 0.5228792\tbest: 0.5227789 (2946)\ttotal: 1m 14s\tremaining: 2m 38s\n","3220:\tlearn: 0.4457362\ttest: 0.5228773\tbest: 0.5227789 (2946)\ttotal: 1m 15s\tremaining: 2m 38s\n","3230:\tlearn: 0.4455435\ttest: 0.5228990\tbest: 0.5227789 (2946)\ttotal: 1m 15s\tremaining: 2m 37s\n","3240:\tlearn: 0.4453522\ttest: 0.5229041\tbest: 0.5227789 (2946)\ttotal: 1m 15s\tremaining: 2m 37s\n","3250:\tlearn: 0.4451098\ttest: 0.5229210\tbest: 0.5227789 (2946)\ttotal: 1m 15s\tremaining: 2m 37s\n","3260:\tlearn: 0.4449174\ttest: 0.5229097\tbest: 0.5227789 (2946)\ttotal: 1m 16s\tremaining: 2m 37s\n","3270:\tlearn: 0.4447106\ttest: 0.5229060\tbest: 0.5227789 (2946)\ttotal: 1m 16s\tremaining: 2m 37s\n","3280:\tlearn: 0.4444748\ttest: 0.5228985\tbest: 0.5227789 (2946)\ttotal: 1m 16s\tremaining: 2m 36s\n","3290:\tlearn: 0.4442390\ttest: 0.5229086\tbest: 0.5227789 (2946)\ttotal: 1m 16s\tremaining: 2m 36s\n","3300:\tlearn: 0.4440505\ttest: 0.5229119\tbest: 0.5227789 (2946)\ttotal: 1m 17s\tremaining: 2m 36s\n","3310:\tlearn: 0.4438412\ttest: 0.5229225\tbest: 0.5227789 (2946)\ttotal: 1m 17s\tremaining: 2m 36s\n","3320:\tlearn: 0.4436309\ttest: 0.5229174\tbest: 0.5227789 (2946)\ttotal: 1m 17s\tremaining: 2m 35s\n","3330:\tlearn: 0.4434541\ttest: 0.5229238\tbest: 0.5227789 (2946)\ttotal: 1m 17s\tremaining: 2m 35s\n","3340:\tlearn: 0.4432628\ttest: 0.5229263\tbest: 0.5227789 (2946)\ttotal: 1m 17s\tremaining: 2m 35s\n","3350:\tlearn: 0.4430320\ttest: 0.5229332\tbest: 0.5227789 (2946)\ttotal: 1m 18s\tremaining: 2m 35s\n","3360:\tlearn: 0.4427847\ttest: 0.5229298\tbest: 0.5227789 (2946)\ttotal: 1m 18s\tremaining: 2m 34s\n","3370:\tlearn: 0.4425750\ttest: 0.5229334\tbest: 0.5227789 (2946)\ttotal: 1m 18s\tremaining: 2m 34s\n","3380:\tlearn: 0.4423871\ttest: 0.5229334\tbest: 0.5227789 (2946)\ttotal: 1m 18s\tremaining: 2m 34s\n","3390:\tlearn: 0.4421637\ttest: 0.5229349\tbest: 0.5227789 (2946)\ttotal: 1m 19s\tremaining: 2m 34s\n","3400:\tlearn: 0.4419542\ttest: 0.5229356\tbest: 0.5227789 (2946)\ttotal: 1m 19s\tremaining: 2m 34s\n","3410:\tlearn: 0.4417546\ttest: 0.5229416\tbest: 0.5227789 (2946)\ttotal: 1m 19s\tremaining: 2m 33s\n","3420:\tlearn: 0.4415488\ttest: 0.5229431\tbest: 0.5227789 (2946)\ttotal: 1m 19s\tremaining: 2m 33s\n","3430:\tlearn: 0.4413728\ttest: 0.5229484\tbest: 0.5227789 (2946)\ttotal: 1m 20s\tremaining: 2m 33s\n","3440:\tlearn: 0.4411645\ttest: 0.5229579\tbest: 0.5227789 (2946)\ttotal: 1m 20s\tremaining: 2m 33s\n","3450:\tlearn: 0.4409635\ttest: 0.5229692\tbest: 0.5227789 (2946)\ttotal: 1m 20s\tremaining: 2m 32s\n","3460:\tlearn: 0.4407461\ttest: 0.5229682\tbest: 0.5227789 (2946)\ttotal: 1m 20s\tremaining: 2m 32s\n","3470:\tlearn: 0.4405615\ttest: 0.5229786\tbest: 0.5227789 (2946)\ttotal: 1m 21s\tremaining: 2m 32s\n","3480:\tlearn: 0.4403607\ttest: 0.5229863\tbest: 0.5227789 (2946)\ttotal: 1m 21s\tremaining: 2m 32s\n","3490:\tlearn: 0.4401389\ttest: 0.5229876\tbest: 0.5227789 (2946)\ttotal: 1m 21s\tremaining: 2m 31s\n","3500:\tlearn: 0.4399654\ttest: 0.5230014\tbest: 0.5227789 (2946)\ttotal: 1m 21s\tremaining: 2m 31s\n","3510:\tlearn: 0.4397166\ttest: 0.5230072\tbest: 0.5227789 (2946)\ttotal: 1m 21s\tremaining: 2m 31s\n","3520:\tlearn: 0.4395161\ttest: 0.5230197\tbest: 0.5227789 (2946)\ttotal: 1m 22s\tremaining: 2m 31s\n","3530:\tlearn: 0.4393353\ttest: 0.5230141\tbest: 0.5227789 (2946)\ttotal: 1m 22s\tremaining: 2m 31s\n","3540:\tlearn: 0.4391266\ttest: 0.5230155\tbest: 0.5227789 (2946)\ttotal: 1m 22s\tremaining: 2m 30s\n","3550:\tlearn: 0.4389183\ttest: 0.5229986\tbest: 0.5227789 (2946)\ttotal: 1m 22s\tremaining: 2m 30s\n","3560:\tlearn: 0.4387148\ttest: 0.5229890\tbest: 0.5227789 (2946)\ttotal: 1m 23s\tremaining: 2m 30s\n","3570:\tlearn: 0.4385084\ttest: 0.5230068\tbest: 0.5227789 (2946)\ttotal: 1m 23s\tremaining: 2m 30s\n","3580:\tlearn: 0.4383168\ttest: 0.5230139\tbest: 0.5227789 (2946)\ttotal: 1m 23s\tremaining: 2m 29s\n","3590:\tlearn: 0.4381191\ttest: 0.5230263\tbest: 0.5227789 (2946)\ttotal: 1m 23s\tremaining: 2m 29s\n","3600:\tlearn: 0.4379300\ttest: 0.5230272\tbest: 0.5227789 (2946)\ttotal: 1m 24s\tremaining: 2m 29s\n","3610:\tlearn: 0.4377474\ttest: 0.5230381\tbest: 0.5227789 (2946)\ttotal: 1m 24s\tremaining: 2m 29s\n","3620:\tlearn: 0.4375710\ttest: 0.5230379\tbest: 0.5227789 (2946)\ttotal: 1m 24s\tremaining: 2m 28s\n","3630:\tlearn: 0.4373675\ttest: 0.5230375\tbest: 0.5227789 (2946)\ttotal: 1m 24s\tremaining: 2m 28s\n","3640:\tlearn: 0.4371530\ttest: 0.5230329\tbest: 0.5227789 (2946)\ttotal: 1m 25s\tremaining: 2m 28s\n","3650:\tlearn: 0.4369535\ttest: 0.5230237\tbest: 0.5227789 (2946)\ttotal: 1m 25s\tremaining: 2m 28s\n","3660:\tlearn: 0.4367435\ttest: 0.5230184\tbest: 0.5227789 (2946)\ttotal: 1m 25s\tremaining: 2m 28s\n","3670:\tlearn: 0.4365250\ttest: 0.5230340\tbest: 0.5227789 (2946)\ttotal: 1m 25s\tremaining: 2m 27s\n","3680:\tlearn: 0.4363262\ttest: 0.5230615\tbest: 0.5227789 (2946)\ttotal: 1m 25s\tremaining: 2m 27s\n","3690:\tlearn: 0.4361248\ttest: 0.5230799\tbest: 0.5227789 (2946)\ttotal: 1m 26s\tremaining: 2m 27s\n","3700:\tlearn: 0.4359306\ttest: 0.5230918\tbest: 0.5227789 (2946)\ttotal: 1m 26s\tremaining: 2m 27s\n","3710:\tlearn: 0.4357455\ttest: 0.5231011\tbest: 0.5227789 (2946)\ttotal: 1m 26s\tremaining: 2m 26s\n","3720:\tlearn: 0.4355627\ttest: 0.5231094\tbest: 0.5227789 (2946)\ttotal: 1m 26s\tremaining: 2m 26s\n","3730:\tlearn: 0.4354134\ttest: 0.5231151\tbest: 0.5227789 (2946)\ttotal: 1m 27s\tremaining: 2m 26s\n","3740:\tlearn: 0.4352252\ttest: 0.5231327\tbest: 0.5227789 (2946)\ttotal: 1m 27s\tremaining: 2m 26s\n","3750:\tlearn: 0.4350184\ttest: 0.5231298\tbest: 0.5227789 (2946)\ttotal: 1m 27s\tremaining: 2m 25s\n","3760:\tlearn: 0.4348197\ttest: 0.5231350\tbest: 0.5227789 (2946)\ttotal: 1m 27s\tremaining: 2m 25s\n","3770:\tlearn: 0.4346486\ttest: 0.5231389\tbest: 0.5227789 (2946)\ttotal: 1m 28s\tremaining: 2m 25s\n","3780:\tlearn: 0.4344743\ttest: 0.5231630\tbest: 0.5227789 (2946)\ttotal: 1m 28s\tremaining: 2m 25s\n","3790:\tlearn: 0.4343011\ttest: 0.5231799\tbest: 0.5227789 (2946)\ttotal: 1m 28s\tremaining: 2m 25s\n","3800:\tlearn: 0.4340848\ttest: 0.5231942\tbest: 0.5227789 (2946)\ttotal: 1m 28s\tremaining: 2m 24s\n","3810:\tlearn: 0.4339010\ttest: 0.5232080\tbest: 0.5227789 (2946)\ttotal: 1m 29s\tremaining: 2m 24s\n","3820:\tlearn: 0.4337095\ttest: 0.5232173\tbest: 0.5227789 (2946)\ttotal: 1m 29s\tremaining: 2m 24s\n","3830:\tlearn: 0.4335231\ttest: 0.5232445\tbest: 0.5227789 (2946)\ttotal: 1m 29s\tremaining: 2m 24s\n","3840:\tlearn: 0.4333170\ttest: 0.5232597\tbest: 0.5227789 (2946)\ttotal: 1m 29s\tremaining: 2m 23s\n","3850:\tlearn: 0.4331205\ttest: 0.5232722\tbest: 0.5227789 (2946)\ttotal: 1m 29s\tremaining: 2m 23s\n","3860:\tlearn: 0.4329008\ttest: 0.5232779\tbest: 0.5227789 (2946)\ttotal: 1m 30s\tremaining: 2m 23s\n","3870:\tlearn: 0.4327448\ttest: 0.5232810\tbest: 0.5227789 (2946)\ttotal: 1m 30s\tremaining: 2m 23s\n","3880:\tlearn: 0.4325533\ttest: 0.5232717\tbest: 0.5227789 (2946)\ttotal: 1m 30s\tremaining: 2m 22s\n","3890:\tlearn: 0.4323456\ttest: 0.5232772\tbest: 0.5227789 (2946)\ttotal: 1m 30s\tremaining: 2m 22s\n","3900:\tlearn: 0.4321267\ttest: 0.5233066\tbest: 0.5227789 (2946)\ttotal: 1m 31s\tremaining: 2m 22s\n","3910:\tlearn: 0.4319252\ttest: 0.5233108\tbest: 0.5227789 (2946)\ttotal: 1m 31s\tremaining: 2m 22s\n","3920:\tlearn: 0.4317354\ttest: 0.5233214\tbest: 0.5227789 (2946)\ttotal: 1m 31s\tremaining: 2m 22s\n","3930:\tlearn: 0.4315385\ttest: 0.5233280\tbest: 0.5227789 (2946)\ttotal: 1m 31s\tremaining: 2m 21s\n","3940:\tlearn: 0.4313670\ttest: 0.5233481\tbest: 0.5227789 (2946)\ttotal: 1m 32s\tremaining: 2m 21s\n","3950:\tlearn: 0.4311989\ttest: 0.5233573\tbest: 0.5227789 (2946)\ttotal: 1m 32s\tremaining: 2m 21s\n","3960:\tlearn: 0.4309975\ttest: 0.5233872\tbest: 0.5227789 (2946)\ttotal: 1m 32s\tremaining: 2m 21s\n","3970:\tlearn: 0.4307999\ttest: 0.5234031\tbest: 0.5227789 (2946)\ttotal: 1m 32s\tremaining: 2m 20s\n","3980:\tlearn: 0.4305964\ttest: 0.5234090\tbest: 0.5227789 (2946)\ttotal: 1m 33s\tremaining: 2m 20s\n","3990:\tlearn: 0.4303957\ttest: 0.5234043\tbest: 0.5227789 (2946)\ttotal: 1m 33s\tremaining: 2m 20s\n","4000:\tlearn: 0.4301986\ttest: 0.5234241\tbest: 0.5227789 (2946)\ttotal: 1m 33s\tremaining: 2m 20s\n","4010:\tlearn: 0.4299730\ttest: 0.5234280\tbest: 0.5227789 (2946)\ttotal: 1m 33s\tremaining: 2m 19s\n","4020:\tlearn: 0.4297839\ttest: 0.5234457\tbest: 0.5227789 (2946)\ttotal: 1m 33s\tremaining: 2m 19s\n","4030:\tlearn: 0.4295952\ttest: 0.5234536\tbest: 0.5227789 (2946)\ttotal: 1m 34s\tremaining: 2m 19s\n","4040:\tlearn: 0.4293854\ttest: 0.5234799\tbest: 0.5227789 (2946)\ttotal: 1m 34s\tremaining: 2m 19s\n","4050:\tlearn: 0.4292023\ttest: 0.5235038\tbest: 0.5227789 (2946)\ttotal: 1m 34s\tremaining: 2m 19s\n","4060:\tlearn: 0.4290057\ttest: 0.5235350\tbest: 0.5227789 (2946)\ttotal: 1m 34s\tremaining: 2m 18s\n","4070:\tlearn: 0.4287954\ttest: 0.5235574\tbest: 0.5227789 (2946)\ttotal: 1m 35s\tremaining: 2m 18s\n","4080:\tlearn: 0.4285717\ttest: 0.5235649\tbest: 0.5227789 (2946)\ttotal: 1m 35s\tremaining: 2m 18s\n","4090:\tlearn: 0.4283767\ttest: 0.5235668\tbest: 0.5227789 (2946)\ttotal: 1m 35s\tremaining: 2m 18s\n","4100:\tlearn: 0.4281711\ttest: 0.5235895\tbest: 0.5227789 (2946)\ttotal: 1m 35s\tremaining: 2m 17s\n","4110:\tlearn: 0.4280075\ttest: 0.5236035\tbest: 0.5227789 (2946)\ttotal: 1m 36s\tremaining: 2m 17s\n","4120:\tlearn: 0.4278310\ttest: 0.5236131\tbest: 0.5227789 (2946)\ttotal: 1m 36s\tremaining: 2m 17s\n","4130:\tlearn: 0.4276563\ttest: 0.5236399\tbest: 0.5227789 (2946)\ttotal: 1m 36s\tremaining: 2m 17s\n","4140:\tlearn: 0.4275135\ttest: 0.5236471\tbest: 0.5227789 (2946)\ttotal: 1m 36s\tremaining: 2m 16s\n","4150:\tlearn: 0.4273139\ttest: 0.5236648\tbest: 0.5227789 (2946)\ttotal: 1m 37s\tremaining: 2m 16s\n","4160:\tlearn: 0.4271394\ttest: 0.5236768\tbest: 0.5227789 (2946)\ttotal: 1m 37s\tremaining: 2m 16s\n","4170:\tlearn: 0.4269661\ttest: 0.5236957\tbest: 0.5227789 (2946)\ttotal: 1m 37s\tremaining: 2m 16s\n","4180:\tlearn: 0.4267813\ttest: 0.5237319\tbest: 0.5227789 (2946)\ttotal: 1m 37s\tremaining: 2m 16s\n","4190:\tlearn: 0.4266192\ttest: 0.5237421\tbest: 0.5227789 (2946)\ttotal: 1m 37s\tremaining: 2m 15s\n","4200:\tlearn: 0.4264340\ttest: 0.5237607\tbest: 0.5227789 (2946)\ttotal: 1m 38s\tremaining: 2m 15s\n","4210:\tlearn: 0.4262210\ttest: 0.5237745\tbest: 0.5227789 (2946)\ttotal: 1m 38s\tremaining: 2m 15s\n","4220:\tlearn: 0.4260166\ttest: 0.5237817\tbest: 0.5227789 (2946)\ttotal: 1m 38s\tremaining: 2m 15s\n","4230:\tlearn: 0.4258330\ttest: 0.5237847\tbest: 0.5227789 (2946)\ttotal: 1m 38s\tremaining: 2m 14s\n","4240:\tlearn: 0.4256456\ttest: 0.5238019\tbest: 0.5227789 (2946)\ttotal: 1m 39s\tremaining: 2m 14s\n","4250:\tlearn: 0.4254717\ttest: 0.5238113\tbest: 0.5227789 (2946)\ttotal: 1m 39s\tremaining: 2m 14s\n","4260:\tlearn: 0.4253065\ttest: 0.5238245\tbest: 0.5227789 (2946)\ttotal: 1m 39s\tremaining: 2m 14s\n","4270:\tlearn: 0.4251048\ttest: 0.5238274\tbest: 0.5227789 (2946)\ttotal: 1m 39s\tremaining: 2m 13s\n","4280:\tlearn: 0.4249466\ttest: 0.5238358\tbest: 0.5227789 (2946)\ttotal: 1m 40s\tremaining: 2m 13s\n","4290:\tlearn: 0.4247429\ttest: 0.5238456\tbest: 0.5227789 (2946)\ttotal: 1m 40s\tremaining: 2m 13s\n","4300:\tlearn: 0.4245458\ttest: 0.5238753\tbest: 0.5227789 (2946)\ttotal: 1m 40s\tremaining: 2m 13s\n","4310:\tlearn: 0.4243611\ttest: 0.5238841\tbest: 0.5227789 (2946)\ttotal: 1m 40s\tremaining: 2m 13s\n","4320:\tlearn: 0.4241906\ttest: 0.5239021\tbest: 0.5227789 (2946)\ttotal: 1m 41s\tremaining: 2m 12s\n","4330:\tlearn: 0.4240439\ttest: 0.5239237\tbest: 0.5227789 (2946)\ttotal: 1m 41s\tremaining: 2m 12s\n","4340:\tlearn: 0.4238313\ttest: 0.5239470\tbest: 0.5227789 (2946)\ttotal: 1m 41s\tremaining: 2m 12s\n","4350:\tlearn: 0.4236221\ttest: 0.5239472\tbest: 0.5227789 (2946)\ttotal: 1m 41s\tremaining: 2m 12s\n","4360:\tlearn: 0.4234179\ttest: 0.5239638\tbest: 0.5227789 (2946)\ttotal: 1m 41s\tremaining: 2m 11s\n","4370:\tlearn: 0.4232449\ttest: 0.5239683\tbest: 0.5227789 (2946)\ttotal: 1m 42s\tremaining: 2m 11s\n","4380:\tlearn: 0.4230650\ttest: 0.5239824\tbest: 0.5227789 (2946)\ttotal: 1m 42s\tremaining: 2m 11s\n","4390:\tlearn: 0.4228588\ttest: 0.5240032\tbest: 0.5227789 (2946)\ttotal: 1m 42s\tremaining: 2m 11s\n","4400:\tlearn: 0.4226569\ttest: 0.5240229\tbest: 0.5227789 (2946)\ttotal: 1m 42s\tremaining: 2m 10s\n","4410:\tlearn: 0.4224937\ttest: 0.5240320\tbest: 0.5227789 (2946)\ttotal: 1m 43s\tremaining: 2m 10s\n","4420:\tlearn: 0.4223249\ttest: 0.5240377\tbest: 0.5227789 (2946)\ttotal: 1m 43s\tremaining: 2m 10s\n","4430:\tlearn: 0.4221206\ttest: 0.5240724\tbest: 0.5227789 (2946)\ttotal: 1m 43s\tremaining: 2m 10s\n","4440:\tlearn: 0.4219410\ttest: 0.5240773\tbest: 0.5227789 (2946)\ttotal: 1m 43s\tremaining: 2m 10s\n","4450:\tlearn: 0.4217695\ttest: 0.5240948\tbest: 0.5227789 (2946)\ttotal: 1m 44s\tremaining: 2m 9s\n","4460:\tlearn: 0.4216120\ttest: 0.5241071\tbest: 0.5227789 (2946)\ttotal: 1m 44s\tremaining: 2m 9s\n","4470:\tlearn: 0.4214444\ttest: 0.5241248\tbest: 0.5227789 (2946)\ttotal: 1m 44s\tremaining: 2m 9s\n","4480:\tlearn: 0.4212650\ttest: 0.5241430\tbest: 0.5227789 (2946)\ttotal: 1m 44s\tremaining: 2m 9s\n","4490:\tlearn: 0.4210811\ttest: 0.5241510\tbest: 0.5227789 (2946)\ttotal: 1m 45s\tremaining: 2m 8s\n","4500:\tlearn: 0.4208870\ttest: 0.5241635\tbest: 0.5227789 (2946)\ttotal: 1m 45s\tremaining: 2m 8s\n","4510:\tlearn: 0.4207051\ttest: 0.5241799\tbest: 0.5227789 (2946)\ttotal: 1m 45s\tremaining: 2m 8s\n","4520:\tlearn: 0.4205223\ttest: 0.5242012\tbest: 0.5227789 (2946)\ttotal: 1m 45s\tremaining: 2m 8s\n","4530:\tlearn: 0.4203588\ttest: 0.5242159\tbest: 0.5227789 (2946)\ttotal: 1m 45s\tremaining: 2m 7s\n","4540:\tlearn: 0.4201749\ttest: 0.5242286\tbest: 0.5227789 (2946)\ttotal: 1m 46s\tremaining: 2m 7s\n","4550:\tlearn: 0.4200173\ttest: 0.5242386\tbest: 0.5227789 (2946)\ttotal: 1m 46s\tremaining: 2m 7s\n","4560:\tlearn: 0.4198505\ttest: 0.5242561\tbest: 0.5227789 (2946)\ttotal: 1m 46s\tremaining: 2m 7s\n","4570:\tlearn: 0.4196840\ttest: 0.5242695\tbest: 0.5227789 (2946)\ttotal: 1m 46s\tremaining: 2m 7s\n","4580:\tlearn: 0.4195043\ttest: 0.5242788\tbest: 0.5227789 (2946)\ttotal: 1m 47s\tremaining: 2m 6s\n","4590:\tlearn: 0.4193338\ttest: 0.5242785\tbest: 0.5227789 (2946)\ttotal: 1m 47s\tremaining: 2m 6s\n","4600:\tlearn: 0.4191527\ttest: 0.5242816\tbest: 0.5227789 (2946)\ttotal: 1m 47s\tremaining: 2m 6s\n","4610:\tlearn: 0.4189643\ttest: 0.5243026\tbest: 0.5227789 (2946)\ttotal: 1m 47s\tremaining: 2m 6s\n","4620:\tlearn: 0.4187836\ttest: 0.5243123\tbest: 0.5227789 (2946)\ttotal: 1m 48s\tremaining: 2m 5s\n","4630:\tlearn: 0.4185805\ttest: 0.5243356\tbest: 0.5227789 (2946)\ttotal: 1m 48s\tremaining: 2m 5s\n","4640:\tlearn: 0.4184040\ttest: 0.5243535\tbest: 0.5227789 (2946)\ttotal: 1m 48s\tremaining: 2m 5s\n","4650:\tlearn: 0.4182338\ttest: 0.5243682\tbest: 0.5227789 (2946)\ttotal: 1m 48s\tremaining: 2m 5s\n","4660:\tlearn: 0.4180531\ttest: 0.5243753\tbest: 0.5227789 (2946)\ttotal: 1m 49s\tremaining: 2m 4s\n","4670:\tlearn: 0.4178497\ttest: 0.5243881\tbest: 0.5227789 (2946)\ttotal: 1m 49s\tremaining: 2m 4s\n","4680:\tlearn: 0.4176886\ttest: 0.5244066\tbest: 0.5227789 (2946)\ttotal: 1m 49s\tremaining: 2m 4s\n","4690:\tlearn: 0.4175070\ttest: 0.5244120\tbest: 0.5227789 (2946)\ttotal: 1m 49s\tremaining: 2m 4s\n","4700:\tlearn: 0.4173528\ttest: 0.5244333\tbest: 0.5227789 (2946)\ttotal: 1m 50s\tremaining: 2m 4s\n","4710:\tlearn: 0.4171781\ttest: 0.5244342\tbest: 0.5227789 (2946)\ttotal: 1m 50s\tremaining: 2m 3s\n","4720:\tlearn: 0.4170208\ttest: 0.5244504\tbest: 0.5227789 (2946)\ttotal: 1m 50s\tremaining: 2m 3s\n","4730:\tlearn: 0.4168429\ttest: 0.5244777\tbest: 0.5227789 (2946)\ttotal: 1m 50s\tremaining: 2m 3s\n","4740:\tlearn: 0.4166807\ttest: 0.5245048\tbest: 0.5227789 (2946)\ttotal: 1m 50s\tremaining: 2m 3s\n","4750:\tlearn: 0.4165244\ttest: 0.5245254\tbest: 0.5227789 (2946)\ttotal: 1m 51s\tremaining: 2m 2s\n","4760:\tlearn: 0.4163432\ttest: 0.5245332\tbest: 0.5227789 (2946)\ttotal: 1m 51s\tremaining: 2m 2s\n","4770:\tlearn: 0.4161726\ttest: 0.5245497\tbest: 0.5227789 (2946)\ttotal: 1m 51s\tremaining: 2m 2s\n","4780:\tlearn: 0.4159871\ttest: 0.5245740\tbest: 0.5227789 (2946)\ttotal: 1m 51s\tremaining: 2m 2s\n","4790:\tlearn: 0.4158391\ttest: 0.5245991\tbest: 0.5227789 (2946)\ttotal: 1m 52s\tremaining: 2m 1s\n","4800:\tlearn: 0.4156812\ttest: 0.5246047\tbest: 0.5227789 (2946)\ttotal: 1m 52s\tremaining: 2m 1s\n","4810:\tlearn: 0.4155093\ttest: 0.5246194\tbest: 0.5227789 (2946)\ttotal: 1m 52s\tremaining: 2m 1s\n","4820:\tlearn: 0.4153363\ttest: 0.5246435\tbest: 0.5227789 (2946)\ttotal: 1m 52s\tremaining: 2m 1s\n","4830:\tlearn: 0.4151671\ttest: 0.5246594\tbest: 0.5227789 (2946)\ttotal: 1m 53s\tremaining: 2m 1s\n","4840:\tlearn: 0.4150104\ttest: 0.5246713\tbest: 0.5227789 (2946)\ttotal: 1m 53s\tremaining: 2m\n","4850:\tlearn: 0.4148427\ttest: 0.5246857\tbest: 0.5227789 (2946)\ttotal: 1m 53s\tremaining: 2m\n","4860:\tlearn: 0.4146518\ttest: 0.5246949\tbest: 0.5227789 (2946)\ttotal: 1m 53s\tremaining: 2m\n","4870:\tlearn: 0.4144977\ttest: 0.5247122\tbest: 0.5227789 (2946)\ttotal: 1m 54s\tremaining: 2m\n","4880:\tlearn: 0.4143298\ttest: 0.5247176\tbest: 0.5227789 (2946)\ttotal: 1m 54s\tremaining: 1m 59s\n","4890:\tlearn: 0.4141449\ttest: 0.5247444\tbest: 0.5227789 (2946)\ttotal: 1m 54s\tremaining: 1m 59s\n","4900:\tlearn: 0.4139767\ttest: 0.5247644\tbest: 0.5227789 (2946)\ttotal: 1m 54s\tremaining: 1m 59s\n","4910:\tlearn: 0.4138205\ttest: 0.5247809\tbest: 0.5227789 (2946)\ttotal: 1m 54s\tremaining: 1m 59s\n","4920:\tlearn: 0.4136687\ttest: 0.5247844\tbest: 0.5227789 (2946)\ttotal: 1m 55s\tremaining: 1m 58s\n","4930:\tlearn: 0.4135077\ttest: 0.5248076\tbest: 0.5227789 (2946)\ttotal: 1m 55s\tremaining: 1m 58s\n","4940:\tlearn: 0.4133489\ttest: 0.5248231\tbest: 0.5227789 (2946)\ttotal: 1m 55s\tremaining: 1m 58s\n","4950:\tlearn: 0.4131952\ttest: 0.5248379\tbest: 0.5227789 (2946)\ttotal: 1m 55s\tremaining: 1m 58s\n","4960:\tlearn: 0.4130134\ttest: 0.5248637\tbest: 0.5227789 (2946)\ttotal: 1m 56s\tremaining: 1m 57s\n","4970:\tlearn: 0.4128488\ttest: 0.5248796\tbest: 0.5227789 (2946)\ttotal: 1m 56s\tremaining: 1m 57s\n","4980:\tlearn: 0.4126721\ttest: 0.5248931\tbest: 0.5227789 (2946)\ttotal: 1m 56s\tremaining: 1m 57s\n","4990:\tlearn: 0.4124930\ttest: 0.5249144\tbest: 0.5227789 (2946)\ttotal: 1m 56s\tremaining: 1m 57s\n","5000:\tlearn: 0.4123203\ttest: 0.5249356\tbest: 0.5227789 (2946)\ttotal: 1m 57s\tremaining: 1m 57s\n","5010:\tlearn: 0.4121588\ttest: 0.5249699\tbest: 0.5227789 (2946)\ttotal: 1m 57s\tremaining: 1m 56s\n","5020:\tlearn: 0.4119816\ttest: 0.5249813\tbest: 0.5227789 (2946)\ttotal: 1m 57s\tremaining: 1m 56s\n","5030:\tlearn: 0.4118025\ttest: 0.5250043\tbest: 0.5227789 (2946)\ttotal: 1m 57s\tremaining: 1m 56s\n","5040:\tlearn: 0.4116388\ttest: 0.5250205\tbest: 0.5227789 (2946)\ttotal: 1m 58s\tremaining: 1m 56s\n","5050:\tlearn: 0.4114959\ttest: 0.5250185\tbest: 0.5227789 (2946)\ttotal: 1m 58s\tremaining: 1m 55s\n","5060:\tlearn: 0.4113510\ttest: 0.5250239\tbest: 0.5227789 (2946)\ttotal: 1m 58s\tremaining: 1m 55s\n","5070:\tlearn: 0.4111887\ttest: 0.5250585\tbest: 0.5227789 (2946)\ttotal: 1m 58s\tremaining: 1m 55s\n","5080:\tlearn: 0.4110353\ttest: 0.5250641\tbest: 0.5227789 (2946)\ttotal: 1m 58s\tremaining: 1m 55s\n","5090:\tlearn: 0.4108675\ttest: 0.5250885\tbest: 0.5227789 (2946)\ttotal: 1m 59s\tremaining: 1m 54s\n","5100:\tlearn: 0.4107101\ttest: 0.5251013\tbest: 0.5227789 (2946)\ttotal: 1m 59s\tremaining: 1m 54s\n","5110:\tlearn: 0.4105691\ttest: 0.5251067\tbest: 0.5227789 (2946)\ttotal: 1m 59s\tremaining: 1m 54s\n","5120:\tlearn: 0.4104266\ttest: 0.5251175\tbest: 0.5227789 (2946)\ttotal: 1m 59s\tremaining: 1m 54s\n","5130:\tlearn: 0.4102727\ttest: 0.5251447\tbest: 0.5227789 (2946)\ttotal: 2m\tremaining: 1m 54s\n","5140:\tlearn: 0.4100863\ttest: 0.5251664\tbest: 0.5227789 (2946)\ttotal: 2m\tremaining: 1m 53s\n","5150:\tlearn: 0.4099239\ttest: 0.5251709\tbest: 0.5227789 (2946)\ttotal: 2m\tremaining: 1m 53s\n","5160:\tlearn: 0.4097525\ttest: 0.5251930\tbest: 0.5227789 (2946)\ttotal: 2m\tremaining: 1m 53s\n","5170:\tlearn: 0.4096024\ttest: 0.5252207\tbest: 0.5227789 (2946)\ttotal: 2m 1s\tremaining: 1m 53s\n","5180:\tlearn: 0.4094390\ttest: 0.5252381\tbest: 0.5227789 (2946)\ttotal: 2m 1s\tremaining: 1m 52s\n","5190:\tlearn: 0.4092673\ttest: 0.5252513\tbest: 0.5227789 (2946)\ttotal: 2m 1s\tremaining: 1m 52s\n","5200:\tlearn: 0.4091157\ttest: 0.5252846\tbest: 0.5227789 (2946)\ttotal: 2m 1s\tremaining: 1m 52s\n","5210:\tlearn: 0.4089515\ttest: 0.5252968\tbest: 0.5227789 (2946)\ttotal: 2m 2s\tremaining: 1m 52s\n","5220:\tlearn: 0.4087881\ttest: 0.5253134\tbest: 0.5227789 (2946)\ttotal: 2m 2s\tremaining: 1m 51s\n","5230:\tlearn: 0.4086610\ttest: 0.5253202\tbest: 0.5227789 (2946)\ttotal: 2m 2s\tremaining: 1m 51s\n","5240:\tlearn: 0.4085176\ttest: 0.5253440\tbest: 0.5227789 (2946)\ttotal: 2m 2s\tremaining: 1m 51s\n","5250:\tlearn: 0.4083313\ttest: 0.5253621\tbest: 0.5227789 (2946)\ttotal: 2m 2s\tremaining: 1m 51s\n","5260:\tlearn: 0.4081526\ttest: 0.5253767\tbest: 0.5227789 (2946)\ttotal: 2m 3s\tremaining: 1m 50s\n","5270:\tlearn: 0.4079822\ttest: 0.5254042\tbest: 0.5227789 (2946)\ttotal: 2m 3s\tremaining: 1m 50s\n","5280:\tlearn: 0.4078262\ttest: 0.5254137\tbest: 0.5227789 (2946)\ttotal: 2m 3s\tremaining: 1m 50s\n","5290:\tlearn: 0.4076401\ttest: 0.5254432\tbest: 0.5227789 (2946)\ttotal: 2m 3s\tremaining: 1m 50s\n","5300:\tlearn: 0.4074742\ttest: 0.5254762\tbest: 0.5227789 (2946)\ttotal: 2m 4s\tremaining: 1m 50s\n","5310:\tlearn: 0.4072977\ttest: 0.5254999\tbest: 0.5227789 (2946)\ttotal: 2m 4s\tremaining: 1m 49s\n","5320:\tlearn: 0.4071425\ttest: 0.5255157\tbest: 0.5227789 (2946)\ttotal: 2m 4s\tremaining: 1m 49s\n","5330:\tlearn: 0.4069878\ttest: 0.5255298\tbest: 0.5227789 (2946)\ttotal: 2m 4s\tremaining: 1m 49s\n","5340:\tlearn: 0.4068593\ttest: 0.5255510\tbest: 0.5227789 (2946)\ttotal: 2m 5s\tremaining: 1m 49s\n","5350:\tlearn: 0.4067068\ttest: 0.5255721\tbest: 0.5227789 (2946)\ttotal: 2m 5s\tremaining: 1m 48s\n","5360:\tlearn: 0.4065362\ttest: 0.5255976\tbest: 0.5227789 (2946)\ttotal: 2m 5s\tremaining: 1m 48s\n","5370:\tlearn: 0.4063992\ttest: 0.5256189\tbest: 0.5227789 (2946)\ttotal: 2m 5s\tremaining: 1m 48s\n","5380:\tlearn: 0.4062052\ttest: 0.5256524\tbest: 0.5227789 (2946)\ttotal: 2m 5s\tremaining: 1m 48s\n","5390:\tlearn: 0.4060465\ttest: 0.5256684\tbest: 0.5227789 (2946)\ttotal: 2m 6s\tremaining: 1m 47s\n","5400:\tlearn: 0.4058896\ttest: 0.5256907\tbest: 0.5227789 (2946)\ttotal: 2m 6s\tremaining: 1m 47s\n","5410:\tlearn: 0.4057237\ttest: 0.5257176\tbest: 0.5227789 (2946)\ttotal: 2m 6s\tremaining: 1m 47s\n","5420:\tlearn: 0.4055522\ttest: 0.5257429\tbest: 0.5227789 (2946)\ttotal: 2m 6s\tremaining: 1m 47s\n","5430:\tlearn: 0.4054119\ttest: 0.5257716\tbest: 0.5227789 (2946)\ttotal: 2m 7s\tremaining: 1m 46s\n","5440:\tlearn: 0.4052539\ttest: 0.5257834\tbest: 0.5227789 (2946)\ttotal: 2m 7s\tremaining: 1m 46s\n","5450:\tlearn: 0.4051196\ttest: 0.5258100\tbest: 0.5227789 (2946)\ttotal: 2m 7s\tremaining: 1m 46s\n","5460:\tlearn: 0.4049304\ttest: 0.5258395\tbest: 0.5227789 (2946)\ttotal: 2m 7s\tremaining: 1m 46s\n","5470:\tlearn: 0.4047655\ttest: 0.5258617\tbest: 0.5227789 (2946)\ttotal: 2m 8s\tremaining: 1m 46s\n","5480:\tlearn: 0.4046143\ttest: 0.5258751\tbest: 0.5227789 (2946)\ttotal: 2m 8s\tremaining: 1m 45s\n","5490:\tlearn: 0.4044509\ttest: 0.5259031\tbest: 0.5227789 (2946)\ttotal: 2m 8s\tremaining: 1m 45s\n","5500:\tlearn: 0.4042978\ttest: 0.5259185\tbest: 0.5227789 (2946)\ttotal: 2m 8s\tremaining: 1m 45s\n","5510:\tlearn: 0.4041456\ttest: 0.5259496\tbest: 0.5227789 (2946)\ttotal: 2m 9s\tremaining: 1m 45s\n","5520:\tlearn: 0.4039710\ttest: 0.5259663\tbest: 0.5227789 (2946)\ttotal: 2m 9s\tremaining: 1m 44s\n","5530:\tlearn: 0.4038060\ttest: 0.5259941\tbest: 0.5227789 (2946)\ttotal: 2m 9s\tremaining: 1m 44s\n","5540:\tlearn: 0.4036500\ttest: 0.5260183\tbest: 0.5227789 (2946)\ttotal: 2m 9s\tremaining: 1m 44s\n","5550:\tlearn: 0.4034944\ttest: 0.5260342\tbest: 0.5227789 (2946)\ttotal: 2m 9s\tremaining: 1m 44s\n","5560:\tlearn: 0.4033361\ttest: 0.5260648\tbest: 0.5227789 (2946)\ttotal: 2m 10s\tremaining: 1m 43s\n","5570:\tlearn: 0.4031774\ttest: 0.5260847\tbest: 0.5227789 (2946)\ttotal: 2m 10s\tremaining: 1m 43s\n","5580:\tlearn: 0.4030375\ttest: 0.5261152\tbest: 0.5227789 (2946)\ttotal: 2m 10s\tremaining: 1m 43s\n","5590:\tlearn: 0.4028952\ttest: 0.5261403\tbest: 0.5227789 (2946)\ttotal: 2m 10s\tremaining: 1m 43s\n","5600:\tlearn: 0.4027367\ttest: 0.5261615\tbest: 0.5227789 (2946)\ttotal: 2m 11s\tremaining: 1m 43s\n","5610:\tlearn: 0.4025756\ttest: 0.5261876\tbest: 0.5227789 (2946)\ttotal: 2m 11s\tremaining: 1m 42s\n","5620:\tlearn: 0.4024259\ttest: 0.5262208\tbest: 0.5227789 (2946)\ttotal: 2m 11s\tremaining: 1m 42s\n","5630:\tlearn: 0.4022638\ttest: 0.5262524\tbest: 0.5227789 (2946)\ttotal: 2m 11s\tremaining: 1m 42s\n","5640:\tlearn: 0.4021087\ttest: 0.5262678\tbest: 0.5227789 (2946)\ttotal: 2m 12s\tremaining: 1m 42s\n","5650:\tlearn: 0.4019621\ttest: 0.5262877\tbest: 0.5227789 (2946)\ttotal: 2m 12s\tremaining: 1m 41s\n","5660:\tlearn: 0.4018061\ttest: 0.5263163\tbest: 0.5227789 (2946)\ttotal: 2m 12s\tremaining: 1m 41s\n","5670:\tlearn: 0.4016353\ttest: 0.5263372\tbest: 0.5227789 (2946)\ttotal: 2m 12s\tremaining: 1m 41s\n","5680:\tlearn: 0.4014776\ttest: 0.5263509\tbest: 0.5227789 (2946)\ttotal: 2m 13s\tremaining: 1m 41s\n","5690:\tlearn: 0.4013239\ttest: 0.5263642\tbest: 0.5227789 (2946)\ttotal: 2m 13s\tremaining: 1m 40s\n","5700:\tlearn: 0.4011745\ttest: 0.5263811\tbest: 0.5227789 (2946)\ttotal: 2m 13s\tremaining: 1m 40s\n","5710:\tlearn: 0.4010096\ttest: 0.5264001\tbest: 0.5227789 (2946)\ttotal: 2m 13s\tremaining: 1m 40s\n","5720:\tlearn: 0.4008528\ttest: 0.5264204\tbest: 0.5227789 (2946)\ttotal: 2m 13s\tremaining: 1m 40s\n","5730:\tlearn: 0.4007056\ttest: 0.5264421\tbest: 0.5227789 (2946)\ttotal: 2m 14s\tremaining: 1m 39s\n","5740:\tlearn: 0.4005702\ttest: 0.5264499\tbest: 0.5227789 (2946)\ttotal: 2m 14s\tremaining: 1m 39s\n","5750:\tlearn: 0.4004073\ttest: 0.5264687\tbest: 0.5227789 (2946)\ttotal: 2m 14s\tremaining: 1m 39s\n","5760:\tlearn: 0.4002450\ttest: 0.5264922\tbest: 0.5227789 (2946)\ttotal: 2m 14s\tremaining: 1m 39s\n","5770:\tlearn: 0.4001046\ttest: 0.5265134\tbest: 0.5227789 (2946)\ttotal: 2m 15s\tremaining: 1m 39s\n","5780:\tlearn: 0.3999459\ttest: 0.5265338\tbest: 0.5227789 (2946)\ttotal: 2m 15s\tremaining: 1m 38s\n","5790:\tlearn: 0.3998023\ttest: 0.5265596\tbest: 0.5227789 (2946)\ttotal: 2m 15s\tremaining: 1m 38s\n","5800:\tlearn: 0.3996410\ttest: 0.5265885\tbest: 0.5227789 (2946)\ttotal: 2m 15s\tremaining: 1m 38s\n","5810:\tlearn: 0.3994810\ttest: 0.5266101\tbest: 0.5227789 (2946)\ttotal: 2m 16s\tremaining: 1m 38s\n","5820:\tlearn: 0.3993248\ttest: 0.5266351\tbest: 0.5227789 (2946)\ttotal: 2m 16s\tremaining: 1m 37s\n","5830:\tlearn: 0.3991734\ttest: 0.5266591\tbest: 0.5227789 (2946)\ttotal: 2m 16s\tremaining: 1m 37s\n","5840:\tlearn: 0.3990176\ttest: 0.5266692\tbest: 0.5227789 (2946)\ttotal: 2m 16s\tremaining: 1m 37s\n","5850:\tlearn: 0.3988524\ttest: 0.5266934\tbest: 0.5227789 (2946)\ttotal: 2m 17s\tremaining: 1m 37s\n","5860:\tlearn: 0.3986901\ttest: 0.5267126\tbest: 0.5227789 (2946)\ttotal: 2m 17s\tremaining: 1m 36s\n","5870:\tlearn: 0.3985594\ttest: 0.5267315\tbest: 0.5227789 (2946)\ttotal: 2m 17s\tremaining: 1m 36s\n","5880:\tlearn: 0.3984177\ttest: 0.5267477\tbest: 0.5227789 (2946)\ttotal: 2m 17s\tremaining: 1m 36s\n","5890:\tlearn: 0.3982936\ttest: 0.5267624\tbest: 0.5227789 (2946)\ttotal: 2m 17s\tremaining: 1m 36s\n","5900:\tlearn: 0.3981456\ttest: 0.5267905\tbest: 0.5227789 (2946)\ttotal: 2m 18s\tremaining: 1m 36s\n","5910:\tlearn: 0.3979917\ttest: 0.5268225\tbest: 0.5227789 (2946)\ttotal: 2m 18s\tremaining: 1m 35s\n","5920:\tlearn: 0.3978366\ttest: 0.5268464\tbest: 0.5227789 (2946)\ttotal: 2m 18s\tremaining: 1m 35s\n","5930:\tlearn: 0.3976798\ttest: 0.5268609\tbest: 0.5227789 (2946)\ttotal: 2m 18s\tremaining: 1m 35s\n","5940:\tlearn: 0.3975263\ttest: 0.5268918\tbest: 0.5227789 (2946)\ttotal: 2m 19s\tremaining: 1m 35s\n","5950:\tlearn: 0.3973790\ttest: 0.5269131\tbest: 0.5227789 (2946)\ttotal: 2m 19s\tremaining: 1m 34s\n","5960:\tlearn: 0.3972343\ttest: 0.5269249\tbest: 0.5227789 (2946)\ttotal: 2m 19s\tremaining: 1m 34s\n","5970:\tlearn: 0.3970683\ttest: 0.5269437\tbest: 0.5227789 (2946)\ttotal: 2m 19s\tremaining: 1m 34s\n","5980:\tlearn: 0.3969191\ttest: 0.5269585\tbest: 0.5227789 (2946)\ttotal: 2m 20s\tremaining: 1m 34s\n","5990:\tlearn: 0.3967656\ttest: 0.5269927\tbest: 0.5227789 (2946)\ttotal: 2m 20s\tremaining: 1m 33s\n","6000:\tlearn: 0.3966058\ttest: 0.5270174\tbest: 0.5227789 (2946)\ttotal: 2m 20s\tremaining: 1m 33s\n","6010:\tlearn: 0.3964698\ttest: 0.5270360\tbest: 0.5227789 (2946)\ttotal: 2m 20s\tremaining: 1m 33s\n","6020:\tlearn: 0.3963212\ttest: 0.5270614\tbest: 0.5227789 (2946)\ttotal: 2m 21s\tremaining: 1m 33s\n","6030:\tlearn: 0.3961507\ttest: 0.5270842\tbest: 0.5227789 (2946)\ttotal: 2m 21s\tremaining: 1m 32s\n","6040:\tlearn: 0.3959954\ttest: 0.5271030\tbest: 0.5227789 (2946)\ttotal: 2m 21s\tremaining: 1m 32s\n","6050:\tlearn: 0.3958608\ttest: 0.5271211\tbest: 0.5227789 (2946)\ttotal: 2m 21s\tremaining: 1m 32s\n","6060:\tlearn: 0.3957032\ttest: 0.5271426\tbest: 0.5227789 (2946)\ttotal: 2m 22s\tremaining: 1m 32s\n","6070:\tlearn: 0.3955597\ttest: 0.5271633\tbest: 0.5227789 (2946)\ttotal: 2m 22s\tremaining: 1m 32s\n","6080:\tlearn: 0.3954081\ttest: 0.5271882\tbest: 0.5227789 (2946)\ttotal: 2m 22s\tremaining: 1m 31s\n","6090:\tlearn: 0.3952738\ttest: 0.5272017\tbest: 0.5227789 (2946)\ttotal: 2m 22s\tremaining: 1m 31s\n","6100:\tlearn: 0.3951472\ttest: 0.5272207\tbest: 0.5227789 (2946)\ttotal: 2m 22s\tremaining: 1m 31s\n","6110:\tlearn: 0.3950094\ttest: 0.5272168\tbest: 0.5227789 (2946)\ttotal: 2m 23s\tremaining: 1m 31s\n","6120:\tlearn: 0.3948493\ttest: 0.5272370\tbest: 0.5227789 (2946)\ttotal: 2m 23s\tremaining: 1m 30s\n","6130:\tlearn: 0.3947046\ttest: 0.5272745\tbest: 0.5227789 (2946)\ttotal: 2m 23s\tremaining: 1m 30s\n","6140:\tlearn: 0.3945436\ttest: 0.5272909\tbest: 0.5227789 (2946)\ttotal: 2m 23s\tremaining: 1m 30s\n","6150:\tlearn: 0.3943819\ttest: 0.5273110\tbest: 0.5227789 (2946)\ttotal: 2m 24s\tremaining: 1m 30s\n","6160:\tlearn: 0.3942402\ttest: 0.5273243\tbest: 0.5227789 (2946)\ttotal: 2m 24s\tremaining: 1m 29s\n","6170:\tlearn: 0.3941043\ttest: 0.5273318\tbest: 0.5227789 (2946)\ttotal: 2m 24s\tremaining: 1m 29s\n","6180:\tlearn: 0.3939619\ttest: 0.5273532\tbest: 0.5227789 (2946)\ttotal: 2m 24s\tremaining: 1m 29s\n","6190:\tlearn: 0.3938275\ttest: 0.5273751\tbest: 0.5227789 (2946)\ttotal: 2m 25s\tremaining: 1m 29s\n","6200:\tlearn: 0.3936753\ttest: 0.5274019\tbest: 0.5227789 (2946)\ttotal: 2m 25s\tremaining: 1m 29s\n","6210:\tlearn: 0.3935275\ttest: 0.5274246\tbest: 0.5227789 (2946)\ttotal: 2m 25s\tremaining: 1m 28s\n","6220:\tlearn: 0.3933910\ttest: 0.5274424\tbest: 0.5227789 (2946)\ttotal: 2m 25s\tremaining: 1m 28s\n","6230:\tlearn: 0.3932630\ttest: 0.5274625\tbest: 0.5227789 (2946)\ttotal: 2m 26s\tremaining: 1m 28s\n","6240:\tlearn: 0.3931153\ttest: 0.5274891\tbest: 0.5227789 (2946)\ttotal: 2m 26s\tremaining: 1m 28s\n","6250:\tlearn: 0.3929763\ttest: 0.5275132\tbest: 0.5227789 (2946)\ttotal: 2m 26s\tremaining: 1m 27s\n","6260:\tlearn: 0.3928383\ttest: 0.5275423\tbest: 0.5227789 (2946)\ttotal: 2m 26s\tremaining: 1m 27s\n","6270:\tlearn: 0.3926832\ttest: 0.5275809\tbest: 0.5227789 (2946)\ttotal: 2m 26s\tremaining: 1m 27s\n","6280:\tlearn: 0.3925558\ttest: 0.5276075\tbest: 0.5227789 (2946)\ttotal: 2m 27s\tremaining: 1m 27s\n","6290:\tlearn: 0.3924260\ttest: 0.5276421\tbest: 0.5227789 (2946)\ttotal: 2m 27s\tremaining: 1m 26s\n","6300:\tlearn: 0.3922899\ttest: 0.5276742\tbest: 0.5227789 (2946)\ttotal: 2m 27s\tremaining: 1m 26s\n","6310:\tlearn: 0.3921366\ttest: 0.5276941\tbest: 0.5227789 (2946)\ttotal: 2m 27s\tremaining: 1m 26s\n","6320:\tlearn: 0.3920015\ttest: 0.5277161\tbest: 0.5227789 (2946)\ttotal: 2m 28s\tremaining: 1m 26s\n","6330:\tlearn: 0.3918560\ttest: 0.5277411\tbest: 0.5227789 (2946)\ttotal: 2m 28s\tremaining: 1m 25s\n","6340:\tlearn: 0.3917132\ttest: 0.5277694\tbest: 0.5227789 (2946)\ttotal: 2m 28s\tremaining: 1m 25s\n","6350:\tlearn: 0.3915573\ttest: 0.5277795\tbest: 0.5227789 (2946)\ttotal: 2m 28s\tremaining: 1m 25s\n","6360:\tlearn: 0.3914171\ttest: 0.5277998\tbest: 0.5227789 (2946)\ttotal: 2m 29s\tremaining: 1m 25s\n","6370:\tlearn: 0.3912735\ttest: 0.5278181\tbest: 0.5227789 (2946)\ttotal: 2m 29s\tremaining: 1m 25s\n","6380:\tlearn: 0.3911281\ttest: 0.5278397\tbest: 0.5227789 (2946)\ttotal: 2m 29s\tremaining: 1m 24s\n","6390:\tlearn: 0.3909694\ttest: 0.5278591\tbest: 0.5227789 (2946)\ttotal: 2m 29s\tremaining: 1m 24s\n","6400:\tlearn: 0.3908171\ttest: 0.5278898\tbest: 0.5227789 (2946)\ttotal: 2m 30s\tremaining: 1m 24s\n","6410:\tlearn: 0.3906512\ttest: 0.5279228\tbest: 0.5227789 (2946)\ttotal: 2m 30s\tremaining: 1m 24s\n","6420:\tlearn: 0.3905349\ttest: 0.5279386\tbest: 0.5227789 (2946)\ttotal: 2m 30s\tremaining: 1m 23s\n","6430:\tlearn: 0.3903871\ttest: 0.5279653\tbest: 0.5227789 (2946)\ttotal: 2m 30s\tremaining: 1m 23s\n","6440:\tlearn: 0.3902291\ttest: 0.5279820\tbest: 0.5227789 (2946)\ttotal: 2m 30s\tremaining: 1m 23s\n","6450:\tlearn: 0.3900743\ttest: 0.5280087\tbest: 0.5227789 (2946)\ttotal: 2m 31s\tremaining: 1m 23s\n","6460:\tlearn: 0.3899255\ttest: 0.5280388\tbest: 0.5227789 (2946)\ttotal: 2m 31s\tremaining: 1m 22s\n","6470:\tlearn: 0.3897998\ttest: 0.5280731\tbest: 0.5227789 (2946)\ttotal: 2m 31s\tremaining: 1m 22s\n","6480:\tlearn: 0.3896630\ttest: 0.5281004\tbest: 0.5227789 (2946)\ttotal: 2m 31s\tremaining: 1m 22s\n","6490:\tlearn: 0.3895339\ttest: 0.5281199\tbest: 0.5227789 (2946)\ttotal: 2m 32s\tremaining: 1m 22s\n","6500:\tlearn: 0.3893992\ttest: 0.5281370\tbest: 0.5227789 (2946)\ttotal: 2m 32s\tremaining: 1m 22s\n","6510:\tlearn: 0.3892627\ttest: 0.5281640\tbest: 0.5227789 (2946)\ttotal: 2m 32s\tremaining: 1m 21s\n","6520:\tlearn: 0.3891204\ttest: 0.5281858\tbest: 0.5227789 (2946)\ttotal: 2m 32s\tremaining: 1m 21s\n","6530:\tlearn: 0.3889728\ttest: 0.5282058\tbest: 0.5227789 (2946)\ttotal: 2m 33s\tremaining: 1m 21s\n","6540:\tlearn: 0.3888353\ttest: 0.5282318\tbest: 0.5227789 (2946)\ttotal: 2m 33s\tremaining: 1m 21s\n","6550:\tlearn: 0.3886899\ttest: 0.5282502\tbest: 0.5227789 (2946)\ttotal: 2m 33s\tremaining: 1m 20s\n","6560:\tlearn: 0.3885370\ttest: 0.5282646\tbest: 0.5227789 (2946)\ttotal: 2m 33s\tremaining: 1m 20s\n","6570:\tlearn: 0.3883862\ttest: 0.5282931\tbest: 0.5227789 (2946)\ttotal: 2m 34s\tremaining: 1m 20s\n","6580:\tlearn: 0.3882504\ttest: 0.5283069\tbest: 0.5227789 (2946)\ttotal: 2m 34s\tremaining: 1m 20s\n","6590:\tlearn: 0.3881024\ttest: 0.5283265\tbest: 0.5227789 (2946)\ttotal: 2m 34s\tremaining: 1m 19s\n","6600:\tlearn: 0.3879748\ttest: 0.5283543\tbest: 0.5227789 (2946)\ttotal: 2m 34s\tremaining: 1m 19s\n","6610:\tlearn: 0.3878509\ttest: 0.5283847\tbest: 0.5227789 (2946)\ttotal: 2m 34s\tremaining: 1m 19s\n","6620:\tlearn: 0.3877127\ttest: 0.5284126\tbest: 0.5227789 (2946)\ttotal: 2m 35s\tremaining: 1m 19s\n","6630:\tlearn: 0.3875615\ttest: 0.5284378\tbest: 0.5227789 (2946)\ttotal: 2m 35s\tremaining: 1m 18s\n","6640:\tlearn: 0.3874237\ttest: 0.5284611\tbest: 0.5227789 (2946)\ttotal: 2m 35s\tremaining: 1m 18s\n","6650:\tlearn: 0.3872972\ttest: 0.5284776\tbest: 0.5227789 (2946)\ttotal: 2m 35s\tremaining: 1m 18s\n","6660:\tlearn: 0.3871537\ttest: 0.5285106\tbest: 0.5227789 (2946)\ttotal: 2m 36s\tremaining: 1m 18s\n","6670:\tlearn: 0.3870486\ttest: 0.5285315\tbest: 0.5227789 (2946)\ttotal: 2m 36s\tremaining: 1m 18s\n","6680:\tlearn: 0.3869277\ttest: 0.5285565\tbest: 0.5227789 (2946)\ttotal: 2m 36s\tremaining: 1m 17s\n","6690:\tlearn: 0.3868085\ttest: 0.5285873\tbest: 0.5227789 (2946)\ttotal: 2m 36s\tremaining: 1m 17s\n","6700:\tlearn: 0.3866757\ttest: 0.5286123\tbest: 0.5227789 (2946)\ttotal: 2m 37s\tremaining: 1m 17s\n","6710:\tlearn: 0.3865392\ttest: 0.5286319\tbest: 0.5227789 (2946)\ttotal: 2m 37s\tremaining: 1m 17s\n","6720:\tlearn: 0.3863953\ttest: 0.5286533\tbest: 0.5227789 (2946)\ttotal: 2m 37s\tremaining: 1m 16s\n","6730:\tlearn: 0.3862624\ttest: 0.5286683\tbest: 0.5227789 (2946)\ttotal: 2m 37s\tremaining: 1m 16s\n","6740:\tlearn: 0.3861218\ttest: 0.5286937\tbest: 0.5227789 (2946)\ttotal: 2m 38s\tremaining: 1m 16s\n","6750:\tlearn: 0.3859571\ttest: 0.5287233\tbest: 0.5227789 (2946)\ttotal: 2m 38s\tremaining: 1m 16s\n","6760:\tlearn: 0.3858165\ttest: 0.5287402\tbest: 0.5227789 (2946)\ttotal: 2m 38s\tremaining: 1m 15s\n","6770:\tlearn: 0.3856782\ttest: 0.5287724\tbest: 0.5227789 (2946)\ttotal: 2m 38s\tremaining: 1m 15s\n","6780:\tlearn: 0.3855710\ttest: 0.5288007\tbest: 0.5227789 (2946)\ttotal: 2m 38s\tremaining: 1m 15s\n","6790:\tlearn: 0.3854319\ttest: 0.5288343\tbest: 0.5227789 (2946)\ttotal: 2m 39s\tremaining: 1m 15s\n","6800:\tlearn: 0.3853034\ttest: 0.5288662\tbest: 0.5227789 (2946)\ttotal: 2m 39s\tremaining: 1m 15s\n","6810:\tlearn: 0.3851793\ttest: 0.5288908\tbest: 0.5227789 (2946)\ttotal: 2m 39s\tremaining: 1m 14s\n","6820:\tlearn: 0.3850392\ttest: 0.5289154\tbest: 0.5227789 (2946)\ttotal: 2m 39s\tremaining: 1m 14s\n","6830:\tlearn: 0.3848965\ttest: 0.5289389\tbest: 0.5227789 (2946)\ttotal: 2m 40s\tremaining: 1m 14s\n","6840:\tlearn: 0.3847699\ttest: 0.5289615\tbest: 0.5227789 (2946)\ttotal: 2m 40s\tremaining: 1m 14s\n","6850:\tlearn: 0.3846421\ttest: 0.5289904\tbest: 0.5227789 (2946)\ttotal: 2m 40s\tremaining: 1m 13s\n","6860:\tlearn: 0.3844787\ttest: 0.5290252\tbest: 0.5227789 (2946)\ttotal: 2m 40s\tremaining: 1m 13s\n","6870:\tlearn: 0.3843436\ttest: 0.5290510\tbest: 0.5227789 (2946)\ttotal: 2m 41s\tremaining: 1m 13s\n","6880:\tlearn: 0.3841862\ttest: 0.5290815\tbest: 0.5227789 (2946)\ttotal: 2m 41s\tremaining: 1m 13s\n","6890:\tlearn: 0.3840627\ttest: 0.5290888\tbest: 0.5227789 (2946)\ttotal: 2m 41s\tremaining: 1m 12s\n","6900:\tlearn: 0.3839078\ttest: 0.5291143\tbest: 0.5227789 (2946)\ttotal: 2m 41s\tremaining: 1m 12s\n","6910:\tlearn: 0.3837693\ttest: 0.5291430\tbest: 0.5227789 (2946)\ttotal: 2m 42s\tremaining: 1m 12s\n","6920:\tlearn: 0.3836185\ttest: 0.5291614\tbest: 0.5227789 (2946)\ttotal: 2m 42s\tremaining: 1m 12s\n","6930:\tlearn: 0.3835050\ttest: 0.5291941\tbest: 0.5227789 (2946)\ttotal: 2m 42s\tremaining: 1m 11s\n","6940:\tlearn: 0.3833704\ttest: 0.5292363\tbest: 0.5227789 (2946)\ttotal: 2m 42s\tremaining: 1m 11s\n","6950:\tlearn: 0.3832417\ttest: 0.5292587\tbest: 0.5227789 (2946)\ttotal: 2m 42s\tremaining: 1m 11s\n","6960:\tlearn: 0.3831135\ttest: 0.5292812\tbest: 0.5227789 (2946)\ttotal: 2m 43s\tremaining: 1m 11s\n","6970:\tlearn: 0.3829785\ttest: 0.5293066\tbest: 0.5227789 (2946)\ttotal: 2m 43s\tremaining: 1m 11s\n","6980:\tlearn: 0.3828504\ttest: 0.5293283\tbest: 0.5227789 (2946)\ttotal: 2m 43s\tremaining: 1m 10s\n","6990:\tlearn: 0.3827226\ttest: 0.5293496\tbest: 0.5227789 (2946)\ttotal: 2m 43s\tremaining: 1m 10s\n","7000:\tlearn: 0.3825778\ttest: 0.5293832\tbest: 0.5227789 (2946)\ttotal: 2m 44s\tremaining: 1m 10s\n","7010:\tlearn: 0.3824491\ttest: 0.5294230\tbest: 0.5227789 (2946)\ttotal: 2m 44s\tremaining: 1m 10s\n","7020:\tlearn: 0.3822827\ttest: 0.5294668\tbest: 0.5227789 (2946)\ttotal: 2m 44s\tremaining: 1m 9s\n","7030:\tlearn: 0.3821681\ttest: 0.5294804\tbest: 0.5227789 (2946)\ttotal: 2m 44s\tremaining: 1m 9s\n","7040:\tlearn: 0.3820250\ttest: 0.5295138\tbest: 0.5227789 (2946)\ttotal: 2m 45s\tremaining: 1m 9s\n","7050:\tlearn: 0.3818850\ttest: 0.5295352\tbest: 0.5227789 (2946)\ttotal: 2m 45s\tremaining: 1m 9s\n","7060:\tlearn: 0.3817609\ttest: 0.5295490\tbest: 0.5227789 (2946)\ttotal: 2m 45s\tremaining: 1m 8s\n","7070:\tlearn: 0.3816336\ttest: 0.5295752\tbest: 0.5227789 (2946)\ttotal: 2m 45s\tremaining: 1m 8s\n","7080:\tlearn: 0.3814901\ttest: 0.5296017\tbest: 0.5227789 (2946)\ttotal: 2m 46s\tremaining: 1m 8s\n","7090:\tlearn: 0.3813520\ttest: 0.5296389\tbest: 0.5227789 (2946)\ttotal: 2m 46s\tremaining: 1m 8s\n","7100:\tlearn: 0.3812413\ttest: 0.5296516\tbest: 0.5227789 (2946)\ttotal: 2m 46s\tremaining: 1m 7s\n","7110:\tlearn: 0.3810934\ttest: 0.5296708\tbest: 0.5227789 (2946)\ttotal: 2m 46s\tremaining: 1m 7s\n","7120:\tlearn: 0.3809739\ttest: 0.5296959\tbest: 0.5227789 (2946)\ttotal: 2m 47s\tremaining: 1m 7s\n","7130:\tlearn: 0.3808382\ttest: 0.5297160\tbest: 0.5227789 (2946)\ttotal: 2m 47s\tremaining: 1m 7s\n","7140:\tlearn: 0.3806966\ttest: 0.5297391\tbest: 0.5227789 (2946)\ttotal: 2m 47s\tremaining: 1m 7s\n","7150:\tlearn: 0.3805583\ttest: 0.5297779\tbest: 0.5227789 (2946)\ttotal: 2m 47s\tremaining: 1m 6s\n","7160:\tlearn: 0.3804352\ttest: 0.5297975\tbest: 0.5227789 (2946)\ttotal: 2m 47s\tremaining: 1m 6s\n","7170:\tlearn: 0.3803016\ttest: 0.5298237\tbest: 0.5227789 (2946)\ttotal: 2m 48s\tremaining: 1m 6s\n","7180:\tlearn: 0.3801694\ttest: 0.5298325\tbest: 0.5227789 (2946)\ttotal: 2m 48s\tremaining: 1m 6s\n","7190:\tlearn: 0.3800492\ttest: 0.5298539\tbest: 0.5227789 (2946)\ttotal: 2m 48s\tremaining: 1m 5s\n","7200:\tlearn: 0.3799150\ttest: 0.5298854\tbest: 0.5227789 (2946)\ttotal: 2m 48s\tremaining: 1m 5s\n","7210:\tlearn: 0.3797828\ttest: 0.5299118\tbest: 0.5227789 (2946)\ttotal: 2m 49s\tremaining: 1m 5s\n","7220:\tlearn: 0.3796535\ttest: 0.5299301\tbest: 0.5227789 (2946)\ttotal: 2m 49s\tremaining: 1m 5s\n","7230:\tlearn: 0.3795207\ttest: 0.5299616\tbest: 0.5227789 (2946)\ttotal: 2m 49s\tremaining: 1m 4s\n","7240:\tlearn: 0.3793836\ttest: 0.5299929\tbest: 0.5227789 (2946)\ttotal: 2m 49s\tremaining: 1m 4s\n","7250:\tlearn: 0.3792532\ttest: 0.5300070\tbest: 0.5227789 (2946)\ttotal: 2m 50s\tremaining: 1m 4s\n","7260:\tlearn: 0.3791325\ttest: 0.5300340\tbest: 0.5227789 (2946)\ttotal: 2m 50s\tremaining: 1m 4s\n","7270:\tlearn: 0.3790170\ttest: 0.5300603\tbest: 0.5227789 (2946)\ttotal: 2m 50s\tremaining: 1m 4s\n","7280:\tlearn: 0.3788966\ttest: 0.5300932\tbest: 0.5227789 (2946)\ttotal: 2m 50s\tremaining: 1m 3s\n","7290:\tlearn: 0.3787691\ttest: 0.5300996\tbest: 0.5227789 (2946)\ttotal: 2m 51s\tremaining: 1m 3s\n","7300:\tlearn: 0.3786364\ttest: 0.5301298\tbest: 0.5227789 (2946)\ttotal: 2m 51s\tremaining: 1m 3s\n","7310:\tlearn: 0.3785127\ttest: 0.5301528\tbest: 0.5227789 (2946)\ttotal: 2m 51s\tremaining: 1m 3s\n","7320:\tlearn: 0.3783853\ttest: 0.5301747\tbest: 0.5227789 (2946)\ttotal: 2m 51s\tremaining: 1m 2s\n","7330:\tlearn: 0.3782436\ttest: 0.5302010\tbest: 0.5227789 (2946)\ttotal: 2m 51s\tremaining: 1m 2s\n","7340:\tlearn: 0.3781164\ttest: 0.5302174\tbest: 0.5227789 (2946)\ttotal: 2m 52s\tremaining: 1m 2s\n","7350:\tlearn: 0.3779792\ttest: 0.5302478\tbest: 0.5227789 (2946)\ttotal: 2m 52s\tremaining: 1m 2s\n","7360:\tlearn: 0.3778464\ttest: 0.5302792\tbest: 0.5227789 (2946)\ttotal: 2m 52s\tremaining: 1m 1s\n","7370:\tlearn: 0.3777057\ttest: 0.5303051\tbest: 0.5227789 (2946)\ttotal: 2m 52s\tremaining: 1m 1s\n","7380:\tlearn: 0.3775803\ttest: 0.5303281\tbest: 0.5227789 (2946)\ttotal: 2m 53s\tremaining: 1m 1s\n","7390:\tlearn: 0.3774405\ttest: 0.5303546\tbest: 0.5227789 (2946)\ttotal: 2m 53s\tremaining: 1m 1s\n","7400:\tlearn: 0.3773126\ttest: 0.5303798\tbest: 0.5227789 (2946)\ttotal: 2m 53s\tremaining: 1m\n","7410:\tlearn: 0.3771795\ttest: 0.5304071\tbest: 0.5227789 (2946)\ttotal: 2m 53s\tremaining: 1m\n","7420:\tlearn: 0.3770388\ttest: 0.5304295\tbest: 0.5227789 (2946)\ttotal: 2m 54s\tremaining: 1m\n","7430:\tlearn: 0.3769072\ttest: 0.5304688\tbest: 0.5227789 (2946)\ttotal: 2m 54s\tremaining: 1m\n","7440:\tlearn: 0.3767714\ttest: 0.5304959\tbest: 0.5227789 (2946)\ttotal: 2m 54s\tremaining: 1m\n","7450:\tlearn: 0.3766549\ttest: 0.5305184\tbest: 0.5227789 (2946)\ttotal: 2m 54s\tremaining: 59.8s\n","7460:\tlearn: 0.3765536\ttest: 0.5305257\tbest: 0.5227789 (2946)\ttotal: 2m 55s\tremaining: 59.6s\n","7470:\tlearn: 0.3764265\ttest: 0.5305442\tbest: 0.5227789 (2946)\ttotal: 2m 55s\tremaining: 59.3s\n","7480:\tlearn: 0.3762880\ttest: 0.5305800\tbest: 0.5227789 (2946)\ttotal: 2m 55s\tremaining: 59.1s\n","7490:\tlearn: 0.3761606\ttest: 0.5306155\tbest: 0.5227789 (2946)\ttotal: 2m 55s\tremaining: 58.9s\n","7500:\tlearn: 0.3760241\ttest: 0.5306457\tbest: 0.5227789 (2946)\ttotal: 2m 56s\tremaining: 58.6s\n","7510:\tlearn: 0.3759090\ttest: 0.5306852\tbest: 0.5227789 (2946)\ttotal: 2m 56s\tremaining: 58.4s\n","7520:\tlearn: 0.3757946\ttest: 0.5307005\tbest: 0.5227789 (2946)\ttotal: 2m 56s\tremaining: 58.2s\n","7530:\tlearn: 0.3756635\ttest: 0.5307297\tbest: 0.5227789 (2946)\ttotal: 2m 56s\tremaining: 57.9s\n","7540:\tlearn: 0.3755309\ttest: 0.5307595\tbest: 0.5227789 (2946)\ttotal: 2m 56s\tremaining: 57.7s\n","7550:\tlearn: 0.3754271\ttest: 0.5307686\tbest: 0.5227789 (2946)\ttotal: 2m 57s\tremaining: 57.5s\n","7560:\tlearn: 0.3752946\ttest: 0.5308037\tbest: 0.5227789 (2946)\ttotal: 2m 57s\tremaining: 57.2s\n","7570:\tlearn: 0.3751801\ttest: 0.5308238\tbest: 0.5227789 (2946)\ttotal: 2m 57s\tremaining: 57s\n","7580:\tlearn: 0.3750655\ttest: 0.5308516\tbest: 0.5227789 (2946)\ttotal: 2m 57s\tremaining: 56.8s\n","7590:\tlearn: 0.3749517\ttest: 0.5308750\tbest: 0.5227789 (2946)\ttotal: 2m 58s\tremaining: 56.5s\n","7600:\tlearn: 0.3748267\ttest: 0.5309017\tbest: 0.5227789 (2946)\ttotal: 2m 58s\tremaining: 56.3s\n","7610:\tlearn: 0.3747028\ttest: 0.5309239\tbest: 0.5227789 (2946)\ttotal: 2m 58s\tremaining: 56.1s\n","7620:\tlearn: 0.3745801\ttest: 0.5309543\tbest: 0.5227789 (2946)\ttotal: 2m 58s\tremaining: 55.8s\n","7630:\tlearn: 0.3744645\ttest: 0.5309805\tbest: 0.5227789 (2946)\ttotal: 2m 59s\tremaining: 55.6s\n","7640:\tlearn: 0.3743473\ttest: 0.5309984\tbest: 0.5227789 (2946)\ttotal: 2m 59s\tremaining: 55.4s\n","7650:\tlearn: 0.3742172\ttest: 0.5310325\tbest: 0.5227789 (2946)\ttotal: 2m 59s\tremaining: 55.1s\n","7660:\tlearn: 0.3740768\ttest: 0.5310636\tbest: 0.5227789 (2946)\ttotal: 2m 59s\tremaining: 54.9s\n","7670:\tlearn: 0.3739467\ttest: 0.5310881\tbest: 0.5227789 (2946)\ttotal: 3m\tremaining: 54.7s\n","7680:\tlearn: 0.3738040\ttest: 0.5311252\tbest: 0.5227789 (2946)\ttotal: 3m\tremaining: 54.4s\n","7690:\tlearn: 0.3736782\ttest: 0.5311535\tbest: 0.5227789 (2946)\ttotal: 3m\tremaining: 54.2s\n","7700:\tlearn: 0.3735634\ttest: 0.5311881\tbest: 0.5227789 (2946)\ttotal: 3m\tremaining: 54s\n","7710:\tlearn: 0.3734358\ttest: 0.5312141\tbest: 0.5227789 (2946)\ttotal: 3m\tremaining: 53.7s\n","7720:\tlearn: 0.3733104\ttest: 0.5312490\tbest: 0.5227789 (2946)\ttotal: 3m 1s\tremaining: 53.5s\n","7730:\tlearn: 0.3731793\ttest: 0.5312727\tbest: 0.5227789 (2946)\ttotal: 3m 1s\tremaining: 53.3s\n","7740:\tlearn: 0.3730544\ttest: 0.5312888\tbest: 0.5227789 (2946)\ttotal: 3m 1s\tremaining: 53s\n","7750:\tlearn: 0.3729402\ttest: 0.5313125\tbest: 0.5227789 (2946)\ttotal: 3m 1s\tremaining: 52.8s\n","7760:\tlearn: 0.3728288\ttest: 0.5313345\tbest: 0.5227789 (2946)\ttotal: 3m 2s\tremaining: 52.5s\n","7770:\tlearn: 0.3727194\ttest: 0.5313583\tbest: 0.5227789 (2946)\ttotal: 3m 2s\tremaining: 52.3s\n","7780:\tlearn: 0.3725816\ttest: 0.5313884\tbest: 0.5227789 (2946)\ttotal: 3m 2s\tremaining: 52.1s\n","7790:\tlearn: 0.3724421\ttest: 0.5314115\tbest: 0.5227789 (2946)\ttotal: 3m 2s\tremaining: 51.8s\n","7800:\tlearn: 0.3723278\ttest: 0.5314483\tbest: 0.5227789 (2946)\ttotal: 3m 3s\tremaining: 51.6s\n","7810:\tlearn: 0.3722109\ttest: 0.5314833\tbest: 0.5227789 (2946)\ttotal: 3m 3s\tremaining: 51.4s\n","7820:\tlearn: 0.3720737\ttest: 0.5315162\tbest: 0.5227789 (2946)\ttotal: 3m 3s\tremaining: 51.1s\n","7830:\tlearn: 0.3719371\ttest: 0.5315481\tbest: 0.5227789 (2946)\ttotal: 3m 3s\tremaining: 50.9s\n","7840:\tlearn: 0.3718372\ttest: 0.5315694\tbest: 0.5227789 (2946)\ttotal: 3m 4s\tremaining: 50.7s\n","7850:\tlearn: 0.3717286\ttest: 0.5315878\tbest: 0.5227789 (2946)\ttotal: 3m 4s\tremaining: 50.4s\n","7860:\tlearn: 0.3715956\ttest: 0.5316183\tbest: 0.5227789 (2946)\ttotal: 3m 4s\tremaining: 50.2s\n","7870:\tlearn: 0.3714854\ttest: 0.5316479\tbest: 0.5227789 (2946)\ttotal: 3m 4s\tremaining: 50s\n","7880:\tlearn: 0.3713460\ttest: 0.5316787\tbest: 0.5227789 (2946)\ttotal: 3m 4s\tremaining: 49.7s\n","7890:\tlearn: 0.3712205\ttest: 0.5317077\tbest: 0.5227789 (2946)\ttotal: 3m 5s\tremaining: 49.5s\n","7900:\tlearn: 0.3710902\ttest: 0.5317411\tbest: 0.5227789 (2946)\ttotal: 3m 5s\tremaining: 49.3s\n","7910:\tlearn: 0.3709789\ttest: 0.5317661\tbest: 0.5227789 (2946)\ttotal: 3m 5s\tremaining: 49s\n","7920:\tlearn: 0.3708538\ttest: 0.5317939\tbest: 0.5227789 (2946)\ttotal: 3m 5s\tremaining: 48.8s\n","7930:\tlearn: 0.3707426\ttest: 0.5318278\tbest: 0.5227789 (2946)\ttotal: 3m 6s\tremaining: 48.6s\n","7940:\tlearn: 0.3706176\ttest: 0.5318589\tbest: 0.5227789 (2946)\ttotal: 3m 6s\tremaining: 48.3s\n","7950:\tlearn: 0.3705061\ttest: 0.5318900\tbest: 0.5227789 (2946)\ttotal: 3m 6s\tremaining: 48.1s\n","7960:\tlearn: 0.3703970\ttest: 0.5319234\tbest: 0.5227789 (2946)\ttotal: 3m 6s\tremaining: 47.9s\n","7970:\tlearn: 0.3702804\ttest: 0.5319493\tbest: 0.5227789 (2946)\ttotal: 3m 7s\tremaining: 47.6s\n","7980:\tlearn: 0.3701461\ttest: 0.5319733\tbest: 0.5227789 (2946)\ttotal: 3m 7s\tremaining: 47.4s\n","7990:\tlearn: 0.3700082\ttest: 0.5319920\tbest: 0.5227789 (2946)\ttotal: 3m 7s\tremaining: 47.2s\n","8000:\tlearn: 0.3698904\ttest: 0.5320018\tbest: 0.5227789 (2946)\ttotal: 3m 7s\tremaining: 46.9s\n","8010:\tlearn: 0.3697575\ttest: 0.5320342\tbest: 0.5227789 (2946)\ttotal: 3m 8s\tremaining: 46.7s\n","8020:\tlearn: 0.3696501\ttest: 0.5320536\tbest: 0.5227789 (2946)\ttotal: 3m 8s\tremaining: 46.4s\n","8030:\tlearn: 0.3695130\ttest: 0.5320865\tbest: 0.5227789 (2946)\ttotal: 3m 8s\tremaining: 46.2s\n","8040:\tlearn: 0.3694087\ttest: 0.5321108\tbest: 0.5227789 (2946)\ttotal: 3m 8s\tremaining: 46s\n","8050:\tlearn: 0.3692785\ttest: 0.5321512\tbest: 0.5227789 (2946)\ttotal: 3m 8s\tremaining: 45.7s\n","8060:\tlearn: 0.3691531\ttest: 0.5321778\tbest: 0.5227789 (2946)\ttotal: 3m 9s\tremaining: 45.5s\n","8070:\tlearn: 0.3690264\ttest: 0.5322035\tbest: 0.5227789 (2946)\ttotal: 3m 9s\tremaining: 45.3s\n","8080:\tlearn: 0.3689061\ttest: 0.5322286\tbest: 0.5227789 (2946)\ttotal: 3m 9s\tremaining: 45s\n","8090:\tlearn: 0.3687762\ttest: 0.5322603\tbest: 0.5227789 (2946)\ttotal: 3m 9s\tremaining: 44.8s\n","8100:\tlearn: 0.3686527\ttest: 0.5323000\tbest: 0.5227789 (2946)\ttotal: 3m 10s\tremaining: 44.6s\n","8110:\tlearn: 0.3685463\ttest: 0.5323285\tbest: 0.5227789 (2946)\ttotal: 3m 10s\tremaining: 44.4s\n","8120:\tlearn: 0.3684358\ttest: 0.5323566\tbest: 0.5227789 (2946)\ttotal: 3m 10s\tremaining: 44.1s\n","8130:\tlearn: 0.3683187\ttest: 0.5323899\tbest: 0.5227789 (2946)\ttotal: 3m 10s\tremaining: 43.9s\n","8140:\tlearn: 0.3681940\ttest: 0.5324366\tbest: 0.5227789 (2946)\ttotal: 3m 11s\tremaining: 43.6s\n","8150:\tlearn: 0.3680714\ttest: 0.5324662\tbest: 0.5227789 (2946)\ttotal: 3m 11s\tremaining: 43.4s\n","8160:\tlearn: 0.3679392\ttest: 0.5324892\tbest: 0.5227789 (2946)\ttotal: 3m 11s\tremaining: 43.2s\n","8170:\tlearn: 0.3678191\ttest: 0.5325082\tbest: 0.5227789 (2946)\ttotal: 3m 11s\tremaining: 42.9s\n","8180:\tlearn: 0.3677030\ttest: 0.5325304\tbest: 0.5227789 (2946)\ttotal: 3m 12s\tremaining: 42.7s\n","8190:\tlearn: 0.3675845\ttest: 0.5325719\tbest: 0.5227789 (2946)\ttotal: 3m 12s\tremaining: 42.5s\n","8200:\tlearn: 0.3674580\ttest: 0.5326104\tbest: 0.5227789 (2946)\ttotal: 3m 12s\tremaining: 42.3s\n","8210:\tlearn: 0.3673351\ttest: 0.5326399\tbest: 0.5227789 (2946)\ttotal: 3m 12s\tremaining: 42s\n","8220:\tlearn: 0.3672186\ttest: 0.5326649\tbest: 0.5227789 (2946)\ttotal: 3m 13s\tremaining: 41.8s\n","8230:\tlearn: 0.3670836\ttest: 0.5326985\tbest: 0.5227789 (2946)\ttotal: 3m 13s\tremaining: 41.6s\n","8240:\tlearn: 0.3669847\ttest: 0.5327158\tbest: 0.5227789 (2946)\ttotal: 3m 13s\tremaining: 41.3s\n","8250:\tlearn: 0.3668643\ttest: 0.5327493\tbest: 0.5227789 (2946)\ttotal: 3m 13s\tremaining: 41.1s\n","8260:\tlearn: 0.3667488\ttest: 0.5327693\tbest: 0.5227789 (2946)\ttotal: 3m 14s\tremaining: 40.9s\n","8270:\tlearn: 0.3666278\ttest: 0.5327922\tbest: 0.5227789 (2946)\ttotal: 3m 14s\tremaining: 40.6s\n","8280:\tlearn: 0.3664952\ttest: 0.5328291\tbest: 0.5227789 (2946)\ttotal: 3m 14s\tremaining: 40.4s\n","8290:\tlearn: 0.3663739\ttest: 0.5328507\tbest: 0.5227789 (2946)\ttotal: 3m 14s\tremaining: 40.1s\n","8300:\tlearn: 0.3662612\ttest: 0.5328745\tbest: 0.5227789 (2946)\ttotal: 3m 15s\tremaining: 39.9s\n","8310:\tlearn: 0.3661349\ttest: 0.5328898\tbest: 0.5227789 (2946)\ttotal: 3m 15s\tremaining: 39.7s\n","8320:\tlearn: 0.3660203\ttest: 0.5329193\tbest: 0.5227789 (2946)\ttotal: 3m 15s\tremaining: 39.4s\n","8330:\tlearn: 0.3659191\ttest: 0.5329370\tbest: 0.5227789 (2946)\ttotal: 3m 15s\tremaining: 39.2s\n","8340:\tlearn: 0.3657968\ttest: 0.5329593\tbest: 0.5227789 (2946)\ttotal: 3m 15s\tremaining: 39s\n","8350:\tlearn: 0.3656742\ttest: 0.5329855\tbest: 0.5227789 (2946)\ttotal: 3m 16s\tremaining: 38.7s\n","8360:\tlearn: 0.3655382\ttest: 0.5330037\tbest: 0.5227789 (2946)\ttotal: 3m 16s\tremaining: 38.5s\n","8370:\tlearn: 0.3654294\ttest: 0.5330274\tbest: 0.5227789 (2946)\ttotal: 3m 16s\tremaining: 38.3s\n","8380:\tlearn: 0.3652979\ttest: 0.5330684\tbest: 0.5227789 (2946)\ttotal: 3m 16s\tremaining: 38s\n","8390:\tlearn: 0.3651692\ttest: 0.5330950\tbest: 0.5227789 (2946)\ttotal: 3m 17s\tremaining: 37.8s\n","8400:\tlearn: 0.3650453\ttest: 0.5331237\tbest: 0.5227789 (2946)\ttotal: 3m 17s\tremaining: 37.6s\n","8410:\tlearn: 0.3649352\ttest: 0.5331574\tbest: 0.5227789 (2946)\ttotal: 3m 17s\tremaining: 37.3s\n","8420:\tlearn: 0.3648217\ttest: 0.5331888\tbest: 0.5227789 (2946)\ttotal: 3m 17s\tremaining: 37.1s\n","8430:\tlearn: 0.3647009\ttest: 0.5332130\tbest: 0.5227789 (2946)\ttotal: 3m 18s\tremaining: 36.9s\n","8440:\tlearn: 0.3645819\ttest: 0.5332491\tbest: 0.5227789 (2946)\ttotal: 3m 18s\tremaining: 36.6s\n","8450:\tlearn: 0.3644556\ttest: 0.5332710\tbest: 0.5227789 (2946)\ttotal: 3m 18s\tremaining: 36.4s\n","8460:\tlearn: 0.3643370\ttest: 0.5332904\tbest: 0.5227789 (2946)\ttotal: 3m 18s\tremaining: 36.2s\n","8470:\tlearn: 0.3642115\ttest: 0.5333151\tbest: 0.5227789 (2946)\ttotal: 3m 19s\tremaining: 35.9s\n","8480:\tlearn: 0.3640932\ttest: 0.5333441\tbest: 0.5227789 (2946)\ttotal: 3m 19s\tremaining: 35.7s\n","8490:\tlearn: 0.3639776\ttest: 0.5333779\tbest: 0.5227789 (2946)\ttotal: 3m 19s\tremaining: 35.5s\n","8500:\tlearn: 0.3638566\ttest: 0.5334185\tbest: 0.5227789 (2946)\ttotal: 3m 19s\tremaining: 35.2s\n","8510:\tlearn: 0.3637383\ttest: 0.5334488\tbest: 0.5227789 (2946)\ttotal: 3m 19s\tremaining: 35s\n","8520:\tlearn: 0.3636267\ttest: 0.5334826\tbest: 0.5227789 (2946)\ttotal: 3m 20s\tremaining: 34.8s\n","8530:\tlearn: 0.3635030\ttest: 0.5335057\tbest: 0.5227789 (2946)\ttotal: 3m 20s\tremaining: 34.5s\n","8540:\tlearn: 0.3633993\ttest: 0.5335320\tbest: 0.5227789 (2946)\ttotal: 3m 20s\tremaining: 34.3s\n","8550:\tlearn: 0.3632889\ttest: 0.5335544\tbest: 0.5227789 (2946)\ttotal: 3m 20s\tremaining: 34.1s\n","8560:\tlearn: 0.3631925\ttest: 0.5335779\tbest: 0.5227789 (2946)\ttotal: 3m 21s\tremaining: 33.8s\n","8570:\tlearn: 0.3630746\ttest: 0.5335983\tbest: 0.5227789 (2946)\ttotal: 3m 21s\tremaining: 33.6s\n","8580:\tlearn: 0.3629652\ttest: 0.5336200\tbest: 0.5227789 (2946)\ttotal: 3m 21s\tremaining: 33.3s\n","8590:\tlearn: 0.3628364\ttest: 0.5336463\tbest: 0.5227789 (2946)\ttotal: 3m 21s\tremaining: 33.1s\n","8600:\tlearn: 0.3627146\ttest: 0.5336757\tbest: 0.5227789 (2946)\ttotal: 3m 22s\tremaining: 32.9s\n","8610:\tlearn: 0.3626171\ttest: 0.5336925\tbest: 0.5227789 (2946)\ttotal: 3m 22s\tremaining: 32.6s\n","8620:\tlearn: 0.3625059\ttest: 0.5337169\tbest: 0.5227789 (2946)\ttotal: 3m 22s\tremaining: 32.4s\n","8630:\tlearn: 0.3624030\ttest: 0.5337455\tbest: 0.5227789 (2946)\ttotal: 3m 22s\tremaining: 32.2s\n","8640:\tlearn: 0.3622914\ttest: 0.5337708\tbest: 0.5227789 (2946)\ttotal: 3m 23s\tremaining: 31.9s\n","8650:\tlearn: 0.3621877\ttest: 0.5337989\tbest: 0.5227789 (2946)\ttotal: 3m 23s\tremaining: 31.7s\n","8660:\tlearn: 0.3620849\ttest: 0.5338264\tbest: 0.5227789 (2946)\ttotal: 3m 23s\tremaining: 31.5s\n","8670:\tlearn: 0.3619728\ttest: 0.5338565\tbest: 0.5227789 (2946)\ttotal: 3m 23s\tremaining: 31.2s\n","8680:\tlearn: 0.3618400\ttest: 0.5339035\tbest: 0.5227789 (2946)\ttotal: 3m 24s\tremaining: 31s\n","8690:\tlearn: 0.3617220\ttest: 0.5339365\tbest: 0.5227789 (2946)\ttotal: 3m 24s\tremaining: 30.8s\n","8700:\tlearn: 0.3616150\ttest: 0.5339681\tbest: 0.5227789 (2946)\ttotal: 3m 24s\tremaining: 30.5s\n","8710:\tlearn: 0.3615083\ttest: 0.5339878\tbest: 0.5227789 (2946)\ttotal: 3m 24s\tremaining: 30.3s\n","8720:\tlearn: 0.3613978\ttest: 0.5340120\tbest: 0.5227789 (2946)\ttotal: 3m 24s\tremaining: 30.1s\n","8730:\tlearn: 0.3612685\ttest: 0.5340404\tbest: 0.5227789 (2946)\ttotal: 3m 25s\tremaining: 29.8s\n","8740:\tlearn: 0.3611538\ttest: 0.5340704\tbest: 0.5227789 (2946)\ttotal: 3m 25s\tremaining: 29.6s\n","8750:\tlearn: 0.3610482\ttest: 0.5340979\tbest: 0.5227789 (2946)\ttotal: 3m 25s\tremaining: 29.4s\n","8760:\tlearn: 0.3609282\ttest: 0.5341261\tbest: 0.5227789 (2946)\ttotal: 3m 25s\tremaining: 29.1s\n","8770:\tlearn: 0.3608293\ttest: 0.5341435\tbest: 0.5227789 (2946)\ttotal: 3m 26s\tremaining: 28.9s\n","8780:\tlearn: 0.3607096\ttest: 0.5341691\tbest: 0.5227789 (2946)\ttotal: 3m 26s\tremaining: 28.7s\n","8790:\tlearn: 0.3605878\ttest: 0.5342025\tbest: 0.5227789 (2946)\ttotal: 3m 26s\tremaining: 28.4s\n","8800:\tlearn: 0.3604801\ttest: 0.5342309\tbest: 0.5227789 (2946)\ttotal: 3m 26s\tremaining: 28.2s\n","8810:\tlearn: 0.3603502\ttest: 0.5342559\tbest: 0.5227789 (2946)\ttotal: 3m 27s\tremaining: 28s\n","8820:\tlearn: 0.3602363\ttest: 0.5342916\tbest: 0.5227789 (2946)\ttotal: 3m 27s\tremaining: 27.7s\n","8830:\tlearn: 0.3601158\ttest: 0.5343198\tbest: 0.5227789 (2946)\ttotal: 3m 27s\tremaining: 27.5s\n","8840:\tlearn: 0.3599945\ttest: 0.5343538\tbest: 0.5227789 (2946)\ttotal: 3m 27s\tremaining: 27.2s\n","8850:\tlearn: 0.3598799\ttest: 0.5343777\tbest: 0.5227789 (2946)\ttotal: 3m 28s\tremaining: 27s\n","8860:\tlearn: 0.3597647\ttest: 0.5344070\tbest: 0.5227789 (2946)\ttotal: 3m 28s\tremaining: 26.8s\n","8870:\tlearn: 0.3596534\ttest: 0.5344353\tbest: 0.5227789 (2946)\ttotal: 3m 28s\tremaining: 26.5s\n","8880:\tlearn: 0.3595477\ttest: 0.5344601\tbest: 0.5227789 (2946)\ttotal: 3m 28s\tremaining: 26.3s\n","8890:\tlearn: 0.3594421\ttest: 0.5344806\tbest: 0.5227789 (2946)\ttotal: 3m 29s\tremaining: 26.1s\n","8900:\tlearn: 0.3593110\ttest: 0.5345170\tbest: 0.5227789 (2946)\ttotal: 3m 29s\tremaining: 25.8s\n","8910:\tlearn: 0.3592202\ttest: 0.5345456\tbest: 0.5227789 (2946)\ttotal: 3m 29s\tremaining: 25.6s\n","8920:\tlearn: 0.3591070\ttest: 0.5345805\tbest: 0.5227789 (2946)\ttotal: 3m 29s\tremaining: 25.4s\n","8930:\tlearn: 0.3590001\ttest: 0.5346139\tbest: 0.5227789 (2946)\ttotal: 3m 29s\tremaining: 25.1s\n","8940:\tlearn: 0.3588774\ttest: 0.5346627\tbest: 0.5227789 (2946)\ttotal: 3m 30s\tremaining: 24.9s\n","8950:\tlearn: 0.3587594\ttest: 0.5346753\tbest: 0.5227789 (2946)\ttotal: 3m 30s\tremaining: 24.7s\n","8960:\tlearn: 0.3586448\ttest: 0.5347003\tbest: 0.5227789 (2946)\ttotal: 3m 30s\tremaining: 24.4s\n","8970:\tlearn: 0.3585184\ttest: 0.5347384\tbest: 0.5227789 (2946)\ttotal: 3m 30s\tremaining: 24.2s\n","8980:\tlearn: 0.3583982\ttest: 0.5347751\tbest: 0.5227789 (2946)\ttotal: 3m 31s\tremaining: 24s\n","8990:\tlearn: 0.3582931\ttest: 0.5348038\tbest: 0.5227789 (2946)\ttotal: 3m 31s\tremaining: 23.7s\n","9000:\tlearn: 0.3581818\ttest: 0.5348194\tbest: 0.5227789 (2946)\ttotal: 3m 31s\tremaining: 23.5s\n","9010:\tlearn: 0.3580738\ttest: 0.5348529\tbest: 0.5227789 (2946)\ttotal: 3m 31s\tremaining: 23.3s\n","9020:\tlearn: 0.3579670\ttest: 0.5348749\tbest: 0.5227789 (2946)\ttotal: 3m 32s\tremaining: 23s\n","9030:\tlearn: 0.3578683\ttest: 0.5348984\tbest: 0.5227789 (2946)\ttotal: 3m 32s\tremaining: 22.8s\n","9040:\tlearn: 0.3577558\ttest: 0.5349317\tbest: 0.5227789 (2946)\ttotal: 3m 32s\tremaining: 22.5s\n","9050:\tlearn: 0.3576296\ttest: 0.5349709\tbest: 0.5227789 (2946)\ttotal: 3m 32s\tremaining: 22.3s\n","9060:\tlearn: 0.3575065\ttest: 0.5350034\tbest: 0.5227789 (2946)\ttotal: 3m 33s\tremaining: 22.1s\n","9070:\tlearn: 0.3573993\ttest: 0.5350299\tbest: 0.5227789 (2946)\ttotal: 3m 33s\tremaining: 21.8s\n","9080:\tlearn: 0.3573085\ttest: 0.5350493\tbest: 0.5227789 (2946)\ttotal: 3m 33s\tremaining: 21.6s\n","9090:\tlearn: 0.3572003\ttest: 0.5350815\tbest: 0.5227789 (2946)\ttotal: 3m 33s\tremaining: 21.4s\n","9100:\tlearn: 0.3570883\ttest: 0.5351190\tbest: 0.5227789 (2946)\ttotal: 3m 34s\tremaining: 21.1s\n","9110:\tlearn: 0.3569672\ttest: 0.5351554\tbest: 0.5227789 (2946)\ttotal: 3m 34s\tremaining: 20.9s\n","9120:\tlearn: 0.3568529\ttest: 0.5351947\tbest: 0.5227789 (2946)\ttotal: 3m 34s\tremaining: 20.7s\n","9130:\tlearn: 0.3567541\ttest: 0.5352188\tbest: 0.5227789 (2946)\ttotal: 3m 34s\tremaining: 20.4s\n","9140:\tlearn: 0.3566613\ttest: 0.5352482\tbest: 0.5227789 (2946)\ttotal: 3m 34s\tremaining: 20.2s\n","9150:\tlearn: 0.3565522\ttest: 0.5352688\tbest: 0.5227789 (2946)\ttotal: 3m 35s\tremaining: 20s\n","9160:\tlearn: 0.3564599\ttest: 0.5353026\tbest: 0.5227789 (2946)\ttotal: 3m 35s\tremaining: 19.7s\n","9170:\tlearn: 0.3563482\ttest: 0.5353337\tbest: 0.5227789 (2946)\ttotal: 3m 35s\tremaining: 19.5s\n","9180:\tlearn: 0.3562416\ttest: 0.5353673\tbest: 0.5227789 (2946)\ttotal: 3m 35s\tremaining: 19.3s\n","9190:\tlearn: 0.3561340\ttest: 0.5353985\tbest: 0.5227789 (2946)\ttotal: 3m 36s\tremaining: 19s\n","9200:\tlearn: 0.3560291\ttest: 0.5354195\tbest: 0.5227789 (2946)\ttotal: 3m 36s\tremaining: 18.8s\n","9210:\tlearn: 0.3559193\ttest: 0.5354375\tbest: 0.5227789 (2946)\ttotal: 3m 36s\tremaining: 18.6s\n","9220:\tlearn: 0.3557982\ttest: 0.5354699\tbest: 0.5227789 (2946)\ttotal: 3m 36s\tremaining: 18.3s\n","9230:\tlearn: 0.3556962\ttest: 0.5354899\tbest: 0.5227789 (2946)\ttotal: 3m 37s\tremaining: 18.1s\n","9240:\tlearn: 0.3555933\ttest: 0.5354983\tbest: 0.5227789 (2946)\ttotal: 3m 37s\tremaining: 17.8s\n","9250:\tlearn: 0.3554811\ttest: 0.5355347\tbest: 0.5227789 (2946)\ttotal: 3m 37s\tremaining: 17.6s\n","9260:\tlearn: 0.3553846\ttest: 0.5355467\tbest: 0.5227789 (2946)\ttotal: 3m 37s\tremaining: 17.4s\n","9270:\tlearn: 0.3552615\ttest: 0.5355768\tbest: 0.5227789 (2946)\ttotal: 3m 38s\tremaining: 17.1s\n","9280:\tlearn: 0.3551526\ttest: 0.5355990\tbest: 0.5227789 (2946)\ttotal: 3m 38s\tremaining: 16.9s\n","9290:\tlearn: 0.3550298\ttest: 0.5356264\tbest: 0.5227789 (2946)\ttotal: 3m 38s\tremaining: 16.7s\n","9300:\tlearn: 0.3549150\ttest: 0.5356540\tbest: 0.5227789 (2946)\ttotal: 3m 38s\tremaining: 16.4s\n","9310:\tlearn: 0.3548114\ttest: 0.5356743\tbest: 0.5227789 (2946)\ttotal: 3m 38s\tremaining: 16.2s\n","9320:\tlearn: 0.3546994\ttest: 0.5357176\tbest: 0.5227789 (2946)\ttotal: 3m 39s\tremaining: 16s\n","9330:\tlearn: 0.3545952\ttest: 0.5357436\tbest: 0.5227789 (2946)\ttotal: 3m 39s\tremaining: 15.7s\n","9340:\tlearn: 0.3544843\ttest: 0.5357836\tbest: 0.5227789 (2946)\ttotal: 3m 39s\tremaining: 15.5s\n","9350:\tlearn: 0.3543880\ttest: 0.5358194\tbest: 0.5227789 (2946)\ttotal: 3m 39s\tremaining: 15.3s\n","9360:\tlearn: 0.3542788\ttest: 0.5358409\tbest: 0.5227789 (2946)\ttotal: 3m 40s\tremaining: 15s\n","9370:\tlearn: 0.3541807\ttest: 0.5358700\tbest: 0.5227789 (2946)\ttotal: 3m 40s\tremaining: 14.8s\n","9380:\tlearn: 0.3540667\ttest: 0.5358999\tbest: 0.5227789 (2946)\ttotal: 3m 40s\tremaining: 14.6s\n","9390:\tlearn: 0.3539605\ttest: 0.5359217\tbest: 0.5227789 (2946)\ttotal: 3m 40s\tremaining: 14.3s\n","9400:\tlearn: 0.3538438\ttest: 0.5359611\tbest: 0.5227789 (2946)\ttotal: 3m 41s\tremaining: 14.1s\n","9410:\tlearn: 0.3537270\ttest: 0.5359925\tbest: 0.5227789 (2946)\ttotal: 3m 41s\tremaining: 13.9s\n","9420:\tlearn: 0.3536324\ttest: 0.5360235\tbest: 0.5227789 (2946)\ttotal: 3m 41s\tremaining: 13.6s\n","9430:\tlearn: 0.3535280\ttest: 0.5360464\tbest: 0.5227789 (2946)\ttotal: 3m 41s\tremaining: 13.4s\n","9440:\tlearn: 0.3534240\ttest: 0.5360768\tbest: 0.5227789 (2946)\ttotal: 3m 42s\tremaining: 13.1s\n","9450:\tlearn: 0.3533084\ttest: 0.5361066\tbest: 0.5227789 (2946)\ttotal: 3m 42s\tremaining: 12.9s\n","9460:\tlearn: 0.3532028\ttest: 0.5361352\tbest: 0.5227789 (2946)\ttotal: 3m 42s\tremaining: 12.7s\n","9470:\tlearn: 0.3530838\ttest: 0.5361723\tbest: 0.5227789 (2946)\ttotal: 3m 42s\tremaining: 12.4s\n","9480:\tlearn: 0.3529682\ttest: 0.5362127\tbest: 0.5227789 (2946)\ttotal: 3m 42s\tremaining: 12.2s\n","9490:\tlearn: 0.3528590\ttest: 0.5362519\tbest: 0.5227789 (2946)\ttotal: 3m 43s\tremaining: 12s\n","9500:\tlearn: 0.3527710\ttest: 0.5362824\tbest: 0.5227789 (2946)\ttotal: 3m 43s\tremaining: 11.7s\n","9510:\tlearn: 0.3526697\ttest: 0.5363030\tbest: 0.5227789 (2946)\ttotal: 3m 43s\tremaining: 11.5s\n","9520:\tlearn: 0.3525727\ttest: 0.5363208\tbest: 0.5227789 (2946)\ttotal: 3m 43s\tremaining: 11.3s\n","9530:\tlearn: 0.3524711\ttest: 0.5363525\tbest: 0.5227789 (2946)\ttotal: 3m 44s\tremaining: 11s\n","9540:\tlearn: 0.3523438\ttest: 0.5363910\tbest: 0.5227789 (2946)\ttotal: 3m 44s\tremaining: 10.8s\n","9550:\tlearn: 0.3522277\ttest: 0.5364120\tbest: 0.5227789 (2946)\ttotal: 3m 44s\tremaining: 10.6s\n","9560:\tlearn: 0.3521202\ttest: 0.5364339\tbest: 0.5227789 (2946)\ttotal: 3m 44s\tremaining: 10.3s\n","9570:\tlearn: 0.3520157\ttest: 0.5364503\tbest: 0.5227789 (2946)\ttotal: 3m 45s\tremaining: 10.1s\n","9580:\tlearn: 0.3519174\ttest: 0.5364767\tbest: 0.5227789 (2946)\ttotal: 3m 45s\tremaining: 9.86s\n","9590:\tlearn: 0.3518006\ttest: 0.5365232\tbest: 0.5227789 (2946)\ttotal: 3m 45s\tremaining: 9.62s\n","9600:\tlearn: 0.3516902\ttest: 0.5365498\tbest: 0.5227789 (2946)\ttotal: 3m 45s\tremaining: 9.39s\n","9610:\tlearn: 0.3515810\ttest: 0.5366004\tbest: 0.5227789 (2946)\ttotal: 3m 46s\tremaining: 9.15s\n","9620:\tlearn: 0.3514941\ttest: 0.5366306\tbest: 0.5227789 (2946)\ttotal: 3m 46s\tremaining: 8.91s\n","9630:\tlearn: 0.3513779\ttest: 0.5366541\tbest: 0.5227789 (2946)\ttotal: 3m 46s\tremaining: 8.68s\n","9640:\tlearn: 0.3512701\ttest: 0.5366801\tbest: 0.5227789 (2946)\ttotal: 3m 46s\tremaining: 8.45s\n","9650:\tlearn: 0.3511657\ttest: 0.5367122\tbest: 0.5227789 (2946)\ttotal: 3m 47s\tremaining: 8.21s\n","9660:\tlearn: 0.3510637\ttest: 0.5367364\tbest: 0.5227789 (2946)\ttotal: 3m 47s\tremaining: 7.97s\n","9670:\tlearn: 0.3509619\ttest: 0.5367663\tbest: 0.5227789 (2946)\ttotal: 3m 47s\tremaining: 7.74s\n","9680:\tlearn: 0.3508626\ttest: 0.5367968\tbest: 0.5227789 (2946)\ttotal: 3m 47s\tremaining: 7.5s\n","9690:\tlearn: 0.3507545\ttest: 0.5368258\tbest: 0.5227789 (2946)\ttotal: 3m 47s\tremaining: 7.27s\n","9700:\tlearn: 0.3506552\ttest: 0.5368472\tbest: 0.5227789 (2946)\ttotal: 3m 48s\tremaining: 7.03s\n","9710:\tlearn: 0.3505368\ttest: 0.5368777\tbest: 0.5227789 (2946)\ttotal: 3m 48s\tremaining: 6.8s\n","9720:\tlearn: 0.3504334\ttest: 0.5369089\tbest: 0.5227789 (2946)\ttotal: 3m 48s\tremaining: 6.56s\n","9730:\tlearn: 0.3503287\ttest: 0.5369395\tbest: 0.5227789 (2946)\ttotal: 3m 48s\tremaining: 6.33s\n","9740:\tlearn: 0.3502248\ttest: 0.5369723\tbest: 0.5227789 (2946)\ttotal: 3m 49s\tremaining: 6.09s\n","9750:\tlearn: 0.3501188\ttest: 0.5370033\tbest: 0.5227789 (2946)\ttotal: 3m 49s\tremaining: 5.86s\n","9760:\tlearn: 0.3500029\ttest: 0.5370337\tbest: 0.5227789 (2946)\ttotal: 3m 49s\tremaining: 5.62s\n","9770:\tlearn: 0.3499183\ttest: 0.5370532\tbest: 0.5227789 (2946)\ttotal: 3m 49s\tremaining: 5.39s\n","9780:\tlearn: 0.3498111\ttest: 0.5370776\tbest: 0.5227789 (2946)\ttotal: 3m 50s\tremaining: 5.15s\n","9790:\tlearn: 0.3497122\ttest: 0.5371102\tbest: 0.5227789 (2946)\ttotal: 3m 50s\tremaining: 4.92s\n","9800:\tlearn: 0.3496257\ttest: 0.5371316\tbest: 0.5227789 (2946)\ttotal: 3m 50s\tremaining: 4.68s\n","9810:\tlearn: 0.3495337\ttest: 0.5371653\tbest: 0.5227789 (2946)\ttotal: 3m 50s\tremaining: 4.45s\n","9820:\tlearn: 0.3494403\ttest: 0.5371873\tbest: 0.5227789 (2946)\ttotal: 3m 51s\tremaining: 4.21s\n","9830:\tlearn: 0.3493266\ttest: 0.5372252\tbest: 0.5227789 (2946)\ttotal: 3m 51s\tremaining: 3.98s\n","9840:\tlearn: 0.3492304\ttest: 0.5372472\tbest: 0.5227789 (2946)\ttotal: 3m 51s\tremaining: 3.74s\n","9850:\tlearn: 0.3491295\ttest: 0.5372772\tbest: 0.5227789 (2946)\ttotal: 3m 51s\tremaining: 3.5s\n","9860:\tlearn: 0.3490224\ttest: 0.5373078\tbest: 0.5227789 (2946)\ttotal: 3m 52s\tremaining: 3.27s\n","9870:\tlearn: 0.3489088\ttest: 0.5373415\tbest: 0.5227789 (2946)\ttotal: 3m 52s\tremaining: 3.04s\n","9880:\tlearn: 0.3488181\ttest: 0.5373660\tbest: 0.5227789 (2946)\ttotal: 3m 52s\tremaining: 2.8s\n","9890:\tlearn: 0.3487154\ttest: 0.5374047\tbest: 0.5227789 (2946)\ttotal: 3m 52s\tremaining: 2.56s\n","9900:\tlearn: 0.3486036\ttest: 0.5374340\tbest: 0.5227789 (2946)\ttotal: 3m 52s\tremaining: 2.33s\n","9910:\tlearn: 0.3484935\ttest: 0.5374692\tbest: 0.5227789 (2946)\ttotal: 3m 53s\tremaining: 2.09s\n","9920:\tlearn: 0.3483774\ttest: 0.5374951\tbest: 0.5227789 (2946)\ttotal: 3m 53s\tremaining: 1.86s\n","9930:\tlearn: 0.3482781\ttest: 0.5375281\tbest: 0.5227789 (2946)\ttotal: 3m 53s\tremaining: 1.62s\n","9940:\tlearn: 0.3481846\ttest: 0.5375368\tbest: 0.5227789 (2946)\ttotal: 3m 53s\tremaining: 1.39s\n","9950:\tlearn: 0.3480756\ttest: 0.5375576\tbest: 0.5227789 (2946)\ttotal: 3m 54s\tremaining: 1.15s\n","9960:\tlearn: 0.3479822\ttest: 0.5375854\tbest: 0.5227789 (2946)\ttotal: 3m 54s\tremaining: 918ms\n","9970:\tlearn: 0.3478868\ttest: 0.5376124\tbest: 0.5227789 (2946)\ttotal: 3m 54s\tremaining: 682ms\n","9980:\tlearn: 0.3477890\ttest: 0.5376333\tbest: 0.5227789 (2946)\ttotal: 3m 54s\tremaining: 447ms\n","9990:\tlearn: 0.3476871\ttest: 0.5376613\tbest: 0.5227789 (2946)\ttotal: 3m 55s\tremaining: 212ms\n","9999:\tlearn: 0.3475812\ttest: 0.5376923\tbest: 0.5227789 (2946)\ttotal: 3m 55s\tremaining: 0us\n","bestTest = 0.5227789256\n","bestIteration = 2946\n","Shrink model to first 2947 iterations.\n","(92565,) (92565,)\n","74.3672%\n","73.4577%\n","67.6236%\n","loss: 8.853343136323893\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LlSgmKyCSvOq","executionInfo":{"status":"ok","timestamp":1625499374660,"user_tz":-540,"elapsed":598,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"17250478-3cb3-4735-fe83-363bb939609f"},"source":["p_val = model.predict(X_test)\n","auc = accuracy_score(y_test, p_val)\n","print(auc)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0.74689097010506\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"qhLH4QanoWxB"},"source":["# LGBM 학습"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P7VDLDpVOAHR","executionInfo":{"status":"ok","timestamp":1625509699943,"user_tz":-540,"elapsed":2223839,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"b0386977-fd36-4e0c-ea67-5435a19cdace"},"source":["n_class = 2\n","on_gpu=1\n","param = {'learning_rate': 0.02, 'n_estimators': 1000, 'num_leaves': 400, 'max_depth': 30, 'min_child_samples': 10, 'subsample': 0.65, 'colsample_bytree': 0.7, 'boosting_type': 'dart',\"objective\" :\"multiclass\",'metric':  'multi_logloss',\n","           'num_class': n_class}\n","\n","if on_gpu==1:\n","    print('Use_GPU')\n","    gpu={'device': 'gpu'}\n","    param.update(gpu)\n","print(param)\n","\n","dtrain = lgb.Dataset(X_trn, label=y_trn)\n","dvalid = lgb.Dataset(X_val, label=y_val)\n","\n","# pruning_callback = optuna.integration.LightGBMPruningCallback(trial, '')\n","clf = lgb.train(param,\n","                dtrain,\n","                valid_sets=[dvalid],\n","                early_stopping_rounds=100,\n","                verbose_eval = 10\n","                )\n","\n","p_val = clf.predict(X_val)\n","print(p_val.shape, y_val.shape)\n","loss = log_loss(y_val,np.argmax(p_val, axis=1))\n","auc = accuracy_score(y_val, np.argmax(p_val, axis=1))\n","print('best_score', clf.best_score)\n","print(f'{accuracy_score(y_val, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","print(f'{precision_score(y_val, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","print(f'{recall_score(y_val, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","print(f'loss: {loss}')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Use_GPU\n","{'learning_rate': 0.02, 'n_estimators': 1000, 'num_leaves': 400, 'max_depth': 30, 'min_child_samples': 10, 'subsample': 0.65, 'colsample_bytree': 0.7, 'boosting_type': 'dart', 'objective': 'multiclass', 'metric': 'multi_logloss', 'num_class': 2, 'device': 'gpu'}\n","[LightGBM] [Info] This is the GPU trainer!!\n","[LightGBM] [Info] Total Bins 1242\n","[LightGBM] [Info] Number of data points in the train set: 280500, number of used features: 16\n","[LightGBM] [Info] Using GPU Device: Tesla T4, Vendor: NVIDIA Corporation\n","[LightGBM] [Info] Compiling OpenCL Kernel with 256 bins...\n","[LightGBM] [Info] GPU programs have been built\n","[LightGBM] [Info] Size of histogram bin entry: 8\n","[LightGBM] [Info] 11 dense feature groups (3.21 MB) transferred to GPU in 0.006448 secs. 1 sparse feature groups\n","[LightGBM] [Info] Start training from score -0.606064\n","[LightGBM] [Info] Start training from score -0.788544\n","[10]\tvalid_0's multi_logloss: 0.650843\n","[20]\tvalid_0's multi_logloss: 0.624589\n","[30]\tvalid_0's multi_logloss: 0.606035\n","[40]\tvalid_0's multi_logloss: 0.595335\n","[50]\tvalid_0's multi_logloss: 0.594181\n","[60]\tvalid_0's multi_logloss: 0.588504\n","[70]\tvalid_0's multi_logloss: 0.585155\n","[80]\tvalid_0's multi_logloss: 0.580108\n","[90]\tvalid_0's multi_logloss: 0.5818\n","[100]\tvalid_0's multi_logloss: 0.578159\n","[110]\tvalid_0's multi_logloss: 0.581514\n","[120]\tvalid_0's multi_logloss: 0.573269\n","[130]\tvalid_0's multi_logloss: 0.570227\n","[140]\tvalid_0's multi_logloss: 0.56773\n","[150]\tvalid_0's multi_logloss: 0.567025\n","[160]\tvalid_0's multi_logloss: 0.569915\n","[170]\tvalid_0's multi_logloss: 0.561761\n","[180]\tvalid_0's multi_logloss: 0.55959\n","[190]\tvalid_0's multi_logloss: 0.555137\n","[200]\tvalid_0's multi_logloss: 0.553489\n","[210]\tvalid_0's multi_logloss: 0.554605\n","[220]\tvalid_0's multi_logloss: 0.550671\n","[230]\tvalid_0's multi_logloss: 0.550396\n","[240]\tvalid_0's multi_logloss: 0.545962\n","[250]\tvalid_0's multi_logloss: 0.545173\n","[260]\tvalid_0's multi_logloss: 0.543273\n","[270]\tvalid_0's multi_logloss: 0.540826\n","[280]\tvalid_0's multi_logloss: 0.540167\n","[290]\tvalid_0's multi_logloss: 0.538092\n","[300]\tvalid_0's multi_logloss: 0.538373\n","[310]\tvalid_0's multi_logloss: 0.539258\n","[320]\tvalid_0's multi_logloss: 0.537187\n","[330]\tvalid_0's multi_logloss: 0.536743\n","[340]\tvalid_0's multi_logloss: 0.537619\n","[350]\tvalid_0's multi_logloss: 0.535774\n","[360]\tvalid_0's multi_logloss: 0.534672\n","[370]\tvalid_0's multi_logloss: 0.534225\n","[380]\tvalid_0's multi_logloss: 0.533264\n","[390]\tvalid_0's multi_logloss: 0.531773\n","[400]\tvalid_0's multi_logloss: 0.530189\n","[410]\tvalid_0's multi_logloss: 0.529524\n","[420]\tvalid_0's multi_logloss: 0.529391\n","[430]\tvalid_0's multi_logloss: 0.528453\n","[440]\tvalid_0's multi_logloss: 0.527964\n","[450]\tvalid_0's multi_logloss: 0.526783\n","[460]\tvalid_0's multi_logloss: 0.527044\n","[470]\tvalid_0's multi_logloss: 0.526847\n","[480]\tvalid_0's multi_logloss: 0.526412\n","[490]\tvalid_0's multi_logloss: 0.525373\n","[500]\tvalid_0's multi_logloss: 0.525044\n","[510]\tvalid_0's multi_logloss: 0.524439\n","[520]\tvalid_0's multi_logloss: 0.524342\n","[530]\tvalid_0's multi_logloss: 0.524295\n","[540]\tvalid_0's multi_logloss: 0.524216\n","[550]\tvalid_0's multi_logloss: 0.523882\n","[560]\tvalid_0's multi_logloss: 0.523594\n","[570]\tvalid_0's multi_logloss: 0.52398\n","[580]\tvalid_0's multi_logloss: 0.52443\n","[590]\tvalid_0's multi_logloss: 0.52451\n","[600]\tvalid_0's multi_logloss: 0.524579\n","[610]\tvalid_0's multi_logloss: 0.524276\n","[620]\tvalid_0's multi_logloss: 0.523377\n","[630]\tvalid_0's multi_logloss: 0.523243\n","[640]\tvalid_0's multi_logloss: 0.522916\n","[650]\tvalid_0's multi_logloss: 0.522795\n","[660]\tvalid_0's multi_logloss: 0.522689\n","[670]\tvalid_0's multi_logloss: 0.522912\n","[680]\tvalid_0's multi_logloss: 0.522282\n","[690]\tvalid_0's multi_logloss: 0.522178\n","[700]\tvalid_0's multi_logloss: 0.521821\n","[710]\tvalid_0's multi_logloss: 0.521698\n","[720]\tvalid_0's multi_logloss: 0.521944\n","[730]\tvalid_0's multi_logloss: 0.521466\n","[740]\tvalid_0's multi_logloss: 0.52137\n","[750]\tvalid_0's multi_logloss: 0.521081\n","[760]\tvalid_0's multi_logloss: 0.521008\n","[770]\tvalid_0's multi_logloss: 0.520882\n","[780]\tvalid_0's multi_logloss: 0.520915\n","[790]\tvalid_0's multi_logloss: 0.520803\n","[800]\tvalid_0's multi_logloss: 0.520886\n","[810]\tvalid_0's multi_logloss: 0.520828\n","[820]\tvalid_0's multi_logloss: 0.520665\n","[830]\tvalid_0's multi_logloss: 0.520181\n","[840]\tvalid_0's multi_logloss: 0.519836\n","[850]\tvalid_0's multi_logloss: 0.519722\n","[860]\tvalid_0's multi_logloss: 0.519612\n","[870]\tvalid_0's multi_logloss: 0.519357\n","[880]\tvalid_0's multi_logloss: 0.519534\n","[890]\tvalid_0's multi_logloss: 0.519178\n","[900]\tvalid_0's multi_logloss: 0.519101\n","[910]\tvalid_0's multi_logloss: 0.519162\n","[920]\tvalid_0's multi_logloss: 0.51931\n","[930]\tvalid_0's multi_logloss: 0.519164\n","[940]\tvalid_0's multi_logloss: 0.519091\n","[950]\tvalid_0's multi_logloss: 0.518832\n","[960]\tvalid_0's multi_logloss: 0.518617\n","[970]\tvalid_0's multi_logloss: 0.518547\n","[980]\tvalid_0's multi_logloss: 0.518479\n","[990]\tvalid_0's multi_logloss: 0.518643\n","[1000]\tvalid_0's multi_logloss: 0.518392\n","(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5183919310822397)])})\n","74.7766%\n","73.9761%\n","68.0283%\n","loss: 8.711925060710739\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":560},"id":"pK-PJdgbavXQ","executionInfo":{"status":"ok","timestamp":1625509699945,"user_tz":-540,"elapsed":18,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"48e4bc2a-47e3-456d-805a-f4b4306b91be"},"source":["imp = pd.DataFrame({'feature': trn_df.drop(columns='입양여부',axis=1).columns, 'importance': clf.feature_importance()})\n","imp = imp.sort_values('importance').set_index('feature')\n","imp.plot(kind='barh')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f1f52bcdd90>"]},"metadata":{"tags":[]},"execution_count":17},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 1080x648 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p6stueqUVF8G","executionInfo":{"status":"ok","timestamp":1625509703890,"user_tz":-540,"elapsed":3955,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"9367e354-2318-4a26-f95e-a0764a3626c8"},"source":["joblib.dump(clf,'/content/drive/MyDrive/TwoPs/lgbm_model2.pkl')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content/drive/MyDrive/TwoPs/lgbm_model2.pkl']"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fq2DGBGlTjq9","executionInfo":{"status":"ok","timestamp":1625533081850,"user_tz":-540,"elapsed":18785,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"}},"outputId":"a08fadd3-71b7-45e5-d7a9-800764e1c838"},"source":["clf = joblib.load('/content/drive/MyDrive/TwoPs/lgbm_model2.pkl')\n","p_val = clf.predict(X_test)\n","print(f'{accuracy_score(y_test, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","print(f'{precision_score(y_test, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","# print(f'{recall_score(y_test, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","print(f'{f1_score(y_test, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","print(f'{roc_auc_score(y_test, np.argmax(p_val, axis=1)) * 100:.4f}%')"],"execution_count":26,"outputs":[{"output_type":"stream","text":["75.2374%\n","74.8706%\n","68.4488%\n","71.5158%\n","74.6672%\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UU9eF3in6bhO"},"source":["def objective(trial ,rounds):\n","    n_class = 2\n","    on_gpu=0\n","    param = {\n","        #     \"reg_lambda\",\n","        #     \"reg_alpha\",\n","           \"random_state\":seed,\n","           \"objective\" :\"multiclass\",\n","           'learning_rate' : trial.suggest_loguniform('learning_rate',1e-3,1e-1),\n","           'n_estimators': trial.suggest_int('n_estimators',100,1000),\n","           'num_leaves': trial.suggest_int('num_leaves', 31, 512),\n","           'max_depth': trial.suggest_int('max_depth',5,20),\n","           'min_child_samples': trial.suggest_int('min_child_samples',5,20),\n","           'subsample' : trial.suggest_loguniform('subsample', .5, .9),\n","           'colsample_bytree': trial.suggest_loguniform('colsample_bytree',.5, .9),\n","           'boosting_type':trial.suggest_categorical(\"boosting_type\", ['gbdt','dart']),\n","           'metric':  'multi_logloss',\n","           'num_class': n_class,\n","           'verbose':-1\n","    }\n","        \n","    if on_gpu==1:\n","        print('Use_GPU')\n","        gpu={'device': 'gpu'}\n","        param.update(gpu)\n","    print(param)\n","\n","    dtrain = lgb.Dataset(X_trn, label=y_trn)\n","    dvalid = lgb.Dataset(X_val, label=y_val)\n","    \n","    # pruning_callback = optuna.integration.LightGBMPruningCallback(trial, '')\n","    clf = lgb.train(param,\n","                    dtrain,\n","                    valid_sets=[dvalid],\n","                    early_stopping_rounds=rounds,\n","    #                  callbacks=[pruning_callback],\n","                    verbose_eval = 100\n","                    )\n","\n","    p_val = clf.predict(X_val)\n","    print(p_val.shape, y_val.shape)\n","    loss = log_loss(y_val,np.argmax(p_val, axis=1))\n","    ac_score = accuracy_score(y_val, np.argmax(p_val, axis=1)) \n","    print('best_score', clf.best_score)\n","    print(f'{accuracy_score(y_val, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","    print(f'{precision_score(y_val, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","    print(f'{recall_score(y_val, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","    print(f'loss: {loss}')\n","    \n","    return ac_score"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FmFx6eaxePbI","executionInfo":{"elapsed":10727926,"status":"ok","timestamp":1625315513852,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"},"user_tz":-540},"outputId":"a2b26d82-8f44-4544-9341-27e9788a8042"},"source":["study0 = optuna.create_study(direction=\"maximize\")\n","study0.optimize(lambda trial: objective(trial,100), n_trials=30)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 09:33:05,575]\u001b[0m A new study created in memory with name: no-name-e6f11e76-ebdc-4694-983d-148e553b2d6e\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.0019073349968346514, 'n_estimators': 982, 'num_leaves': 401, 'max_depth': 6, 'min_child_samples': 7, 'subsample': 0.6941397736903213, 'colsample_bytree': 0.5850447370346471, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.663519\n","[200]\tvalid_0's multi_logloss: 0.643584\n","[300]\tvalid_0's multi_logloss: 0.627924\n","[400]\tvalid_0's multi_logloss: 0.61574\n","[500]\tvalid_0's multi_logloss: 0.605785\n","[600]\tvalid_0's multi_logloss: 0.597483\n","[700]\tvalid_0's multi_logloss: 0.590777\n","[800]\tvalid_0's multi_logloss: 0.585158\n","[900]\tvalid_0's multi_logloss: 0.58046\n","Did not meet early stopping. Best iteration is:\n","[982]\tvalid_0's multi_logloss: 0.577359\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 09:34:35,524]\u001b[0m Trial 0 finished with value: 0.7137470966347972 and parameters: {'learning_rate': 0.0019073349968346514, 'n_estimators': 982, 'num_leaves': 401, 'max_depth': 6, 'min_child_samples': 7, 'subsample': 0.6941397736903213, 'colsample_bytree': 0.5850447370346471, 'boosting_type': 'gbdt'}. Best is trial 0 with value: 0.7137470966347972.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5773593928103383)])})\n","71.3747%\n","73.9761%\n","56.3965%\n","loss: 9.886896598068978\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.002712082040758747, 'n_estimators': 524, 'num_leaves': 492, 'max_depth': 20, 'min_child_samples': 15, 'subsample': 0.5130950956864143, 'colsample_bytree': 0.6769135421409899, 'boosting_type': 'dart', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","[100]\tvalid_0's multi_logloss: 0.670722\n","[200]\tvalid_0's multi_logloss: 0.654892\n","[300]\tvalid_0's multi_logloss: 0.649367\n","[400]\tvalid_0's multi_logloss: 0.641695\n","[500]\tvalid_0's multi_logloss: 0.632701\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 09:53:02,441]\u001b[0m Trial 1 finished with value: 0.7395667909036893 and parameters: {'learning_rate': 0.002712082040758747, 'n_estimators': 524, 'num_leaves': 492, 'max_depth': 20, 'min_child_samples': 15, 'subsample': 0.5130950956864143, 'colsample_bytree': 0.6769135421409899, 'boosting_type': 'dart'}. Best is trial 1 with value: 0.7395667909036893.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.6313931750651193)])})\n","73.9567%\n","73.7812%\n","65.5860%\n","loss: 8.995128459282638\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.05665887291323465, 'n_estimators': 329, 'num_leaves': 288, 'max_depth': 12, 'min_child_samples': 15, 'subsample': 0.8209906926070758, 'colsample_bytree': 0.7257752581227879, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.523393\n","[200]\tvalid_0's multi_logloss: 0.519\n","[300]\tvalid_0's multi_logloss: 0.5173\n","Did not meet early stopping. Best iteration is:\n","[329]\tvalid_0's multi_logloss: 0.516881\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 09:53:42,222]\u001b[0m Trial 2 finished with value: 0.747345108842435 and parameters: {'learning_rate': 0.05665887291323465, 'n_estimators': 329, 'num_leaves': 288, 'max_depth': 12, 'min_child_samples': 15, 'subsample': 0.8209906926070758, 'colsample_bytree': 0.7257752581227879, 'boosting_type': 'gbdt'}. Best is trial 2 with value: 0.747345108842435.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5168808339827674)])})\n","74.7345%\n","73.7774%\n","68.2677%\n","loss: 8.72647833055835\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.009339245559513838, 'n_estimators': 838, 'num_leaves': 383, 'max_depth': 20, 'min_child_samples': 19, 'subsample': 0.6888283578569957, 'colsample_bytree': 0.7892755469685662, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.569203\n","[200]\tvalid_0's multi_logloss: 0.538544\n","[300]\tvalid_0's multi_logloss: 0.528588\n","[400]\tvalid_0's multi_logloss: 0.524302\n","[500]\tvalid_0's multi_logloss: 0.521894\n","[600]\tvalid_0's multi_logloss: 0.520194\n","[700]\tvalid_0's multi_logloss: 0.518899\n","[800]\tvalid_0's multi_logloss: 0.518032\n","Did not meet early stopping. Best iteration is:\n","[838]\tvalid_0's multi_logloss: 0.517754\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 09:55:52,184]\u001b[0m Trial 3 finished with value: 0.7461027386161077 and parameters: {'learning_rate': 0.009339245559513838, 'n_estimators': 838, 'num_leaves': 383, 'max_depth': 20, 'min_child_samples': 19, 'subsample': 0.6888283578569957, 'colsample_bytree': 0.7892755469685662, 'boosting_type': 'gbdt'}. Best is trial 2 with value: 0.747345108842435.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5177538748691645)])})\n","74.6103%\n","73.5658%\n","68.2533%\n","loss: 8.769389219571853\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.04255095646898164, 'n_estimators': 875, 'num_leaves': 191, 'max_depth': 13, 'min_child_samples': 10, 'subsample': 0.5466782761016005, 'colsample_bytree': 0.6095013665478021, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.528253\n","[200]\tvalid_0's multi_logloss: 0.521888\n","[300]\tvalid_0's multi_logloss: 0.519665\n","[400]\tvalid_0's multi_logloss: 0.51821\n","[500]\tvalid_0's multi_logloss: 0.517401\n","[600]\tvalid_0's multi_logloss: 0.516851\n","[700]\tvalid_0's multi_logloss: 0.516405\n","[800]\tvalid_0's multi_logloss: 0.516148\n","Did not meet early stopping. Best iteration is:\n","[875]\tvalid_0's multi_logloss: 0.516049\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 09:57:11,846]\u001b[0m Trial 4 finished with value: 0.7469994058229352 and parameters: {'learning_rate': 0.04255095646898164, 'n_estimators': 875, 'num_leaves': 191, 'max_depth': 13, 'min_child_samples': 10, 'subsample': 0.5466782761016005, 'colsample_bytree': 0.6095013665478021, 'boosting_type': 'gbdt'}. Best is trial 2 with value: 0.747345108842435.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5160487437273261)])})\n","74.6999%\n","73.7766%\n","68.1504%\n","loss: 8.738418342998052\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.00539924993098777, 'n_estimators': 746, 'num_leaves': 190, 'max_depth': 19, 'min_child_samples': 15, 'subsample': 0.6193659972034243, 'colsample_bytree': 0.8698737571914185, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.604183\n","[200]\tvalid_0's multi_logloss: 0.568258\n","[300]\tvalid_0's multi_logloss: 0.551176\n","[400]\tvalid_0's multi_logloss: 0.542239\n","[500]\tvalid_0's multi_logloss: 0.537023\n","[600]\tvalid_0's multi_logloss: 0.533576\n","[700]\tvalid_0's multi_logloss: 0.531079\n","Did not meet early stopping. Best iteration is:\n","[746]\tvalid_0's multi_logloss: 0.530123\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 09:58:57,099]\u001b[0m Trial 5 finished with value: 0.7391346621293146 and parameters: {'learning_rate': 0.00539924993098777, 'n_estimators': 746, 'num_leaves': 190, 'max_depth': 19, 'min_child_samples': 15, 'subsample': 0.6193659972034243, 'colsample_bytree': 0.8698737571914185, 'boosting_type': 'gbdt'}. Best is trial 2 with value: 0.747345108842435.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5301233432410347)])})\n","73.9135%\n","73.0421%\n","66.8598%\n","loss: 9.010058599460098\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.07529038952767664, 'n_estimators': 103, 'num_leaves': 447, 'max_depth': 13, 'min_child_samples': 10, 'subsample': 0.895252053004211, 'colsample_bytree': 0.5742215280371863, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.517788\n","Did not meet early stopping. Best iteration is:\n","[103]\tvalid_0's multi_logloss: 0.517738\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 09:59:13,254]\u001b[0m Trial 6 finished with value: 0.7458434613514827 and parameters: {'learning_rate': 0.07529038952767664, 'n_estimators': 103, 'num_leaves': 447, 'max_depth': 13, 'min_child_samples': 10, 'subsample': 0.895252053004211, 'colsample_bytree': 0.5742215280371863, 'boosting_type': 'gbdt'}. Best is trial 2 with value: 0.747345108842435.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5177376072647109)])})\n","74.5843%\n","73.7543%\n","67.7960%\n","loss: 8.778342896455197\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.0014019214730621957, 'n_estimators': 370, 'num_leaves': 267, 'max_depth': 18, 'min_child_samples': 14, 'subsample': 0.5054675054541607, 'colsample_bytree': 0.50760724598563, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.663204\n","[200]\tvalid_0's multi_logloss: 0.642281\n","[300]\tvalid_0's multi_logloss: 0.624509\n","Did not meet early stopping. Best iteration is:\n","[370]\tvalid_0's multi_logloss: 0.614268\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 10:00:12,464]\u001b[0m Trial 7 finished with value: 0.7241722033165884 and parameters: {'learning_rate': 0.0014019214730621957, 'n_estimators': 370, 'num_leaves': 267, 'max_depth': 18, 'min_child_samples': 14, 'subsample': 0.5054675054541607, 'colsample_bytree': 0.50760724598563, 'boosting_type': 'gbdt'}. Best is trial 2 with value: 0.747345108842435.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.6142680508218352)])})\n","72.4172%\n","78.2775%\n","53.7962%\n","loss: 9.52680845249108\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.01741758777260155, 'n_estimators': 457, 'num_leaves': 450, 'max_depth': 11, 'min_child_samples': 5, 'subsample': 0.5700231802941527, 'colsample_bytree': 0.5171155437336401, 'boosting_type': 'dart', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","[100]\tvalid_0's multi_logloss: 0.613354\n","[200]\tvalid_0's multi_logloss: 0.577578\n","[300]\tvalid_0's multi_logloss: 0.569372\n","[400]\tvalid_0's multi_logloss: 0.559612\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 10:13:18,516]\u001b[0m Trial 8 finished with value: 0.7404742613298763 and parameters: {'learning_rate': 0.01741758777260155, 'n_estimators': 457, 'num_leaves': 450, 'max_depth': 11, 'min_child_samples': 5, 'subsample': 0.5700231802941527, 'colsample_bytree': 0.5171155437336401, 'boosting_type': 'dart'}. Best is trial 2 with value: 0.747345108842435.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5541637786896562)])})\n","74.0474%\n","73.5793%\n","66.2804%\n","loss: 8.963787320622217\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.09124794866015166, 'n_estimators': 986, 'num_leaves': 375, 'max_depth': 20, 'min_child_samples': 6, 'subsample': 0.6545093678858893, 'colsample_bytree': 0.6979424020487736, 'boosting_type': 'dart', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","[100]\tvalid_0's multi_logloss: 0.531391\n","[200]\tvalid_0's multi_logloss: 0.520919\n","[300]\tvalid_0's multi_logloss: 0.519614\n","[400]\tvalid_0's multi_logloss: 0.517762\n","[500]\tvalid_0's multi_logloss: 0.516383\n","[600]\tvalid_0's multi_logloss: 0.51598\n","[700]\tvalid_0's multi_logloss: 0.515148\n","[800]\tvalid_0's multi_logloss: 0.514488\n","[900]\tvalid_0's multi_logloss: 0.514116\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 10:48:33,616]\u001b[0m Trial 9 finished with value: 0.7488683627721061 and parameters: {'learning_rate': 0.09124794866015166, 'n_estimators': 986, 'num_leaves': 375, 'max_depth': 20, 'min_child_samples': 6, 'subsample': 0.6545093678858893, 'colsample_bytree': 0.6979424020487736, 'boosting_type': 'dart'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5140491780392887)])})\n","74.8868%\n","73.7783%\n","68.7897%\n","loss: 8.673867668832209\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.02487761003187, 'n_estimators': 716, 'num_leaves': 40, 'max_depth': 16, 'min_child_samples': 6, 'subsample': 0.7672292441774825, 'colsample_bytree': 0.8965127829816801, 'boosting_type': 'dart', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","[100]\tvalid_0's multi_logloss: 0.604755\n","[200]\tvalid_0's multi_logloss: 0.577218\n","[300]\tvalid_0's multi_logloss: 0.572574\n","[400]\tvalid_0's multi_logloss: 0.566314\n","[500]\tvalid_0's multi_logloss: 0.560452\n","[600]\tvalid_0's multi_logloss: 0.556443\n","[700]\tvalid_0's multi_logloss: 0.55011\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:04:42,518]\u001b[0m Trial 10 finished with value: 0.7289688327121482 and parameters: {'learning_rate': 0.02487761003187, 'n_estimators': 716, 'num_leaves': 40, 'max_depth': 16, 'min_child_samples': 6, 'subsample': 0.7672292441774825, 'colsample_bytree': 0.8965127829816801, 'boosting_type': 'dart'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5496356671809585)])})\n","72.8969%\n","72.6966%\n","63.9483%\n","loss: 9.361171533056138\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.083237860808383, 'n_estimators': 234, 'num_leaves': 299, 'max_depth': 9, 'min_child_samples': 19, 'subsample': 0.8492724100210064, 'colsample_bytree': 0.7312566336514559, 'boosting_type': 'dart', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","[100]\tvalid_0's multi_logloss: 0.545958\n","[200]\tvalid_0's multi_logloss: 0.531329\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:07:54,968]\u001b[0m Trial 11 finished with value: 0.7390158267163615 and parameters: {'learning_rate': 0.083237860808383, 'n_estimators': 234, 'num_leaves': 299, 'max_depth': 9, 'min_child_samples': 19, 'subsample': 0.8492724100210064, 'colsample_bytree': 0.7312566336514559, 'boosting_type': 'dart'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5314266095129869)])})\n","73.9016%\n","73.5835%\n","65.7680%\n","loss: 9.014159185205115\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.09921576811964165, 'n_estimators': 309, 'num_leaves': 328, 'max_depth': 15, 'min_child_samples': 17, 'subsample': 0.7845003109561067, 'colsample_bytree': 0.7555459411639225, 'boosting_type': 'dart', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","[100]\tvalid_0's multi_logloss: 0.530799\n","[200]\tvalid_0's multi_logloss: 0.521339\n","[300]\tvalid_0's multi_logloss: 0.520354\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:13:53,968]\u001b[0m Trial 12 finished with value: 0.7462971965645763 and parameters: {'learning_rate': 0.09921576811964165, 'n_estimators': 309, 'num_leaves': 328, 'max_depth': 15, 'min_child_samples': 17, 'subsample': 0.7845003109561067, 'colsample_bytree': 0.7555459411639225, 'boosting_type': 'dart'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5194653327382084)])})\n","74.6297%\n","73.5586%\n","68.3347%\n","loss: 8.762673018183103\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.044346166426715974, 'n_estimators': 150, 'num_leaves': 194, 'max_depth': 7, 'min_child_samples': 11, 'subsample': 0.6375215732529574, 'colsample_bytree': 0.69844766784105, 'boosting_type': 'dart', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","[100]\tvalid_0's multi_logloss: 0.582125\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:14:56,283]\u001b[0m Trial 13 finished with value: 0.7231567006968076 and parameters: {'learning_rate': 0.044346166426715974, 'n_estimators': 150, 'num_leaves': 194, 'max_depth': 7, 'min_child_samples': 11, 'subsample': 0.6375215732529574, 'colsample_bytree': 0.69844766784105, 'boosting_type': 'dart'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5668447032429896)])})\n","72.3157%\n","73.7947%\n","59.9210%\n","loss: 9.561905578980646\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.04024513189412697, 'n_estimators': 609, 'num_leaves': 245, 'max_depth': 10, 'min_child_samples': 8, 'subsample': 0.8035698175160586, 'colsample_bytree': 0.823039904968547, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.531756\n","[200]\tvalid_0's multi_logloss: 0.5231\n","[300]\tvalid_0's multi_logloss: 0.520401\n","[400]\tvalid_0's multi_logloss: 0.518833\n","[500]\tvalid_0's multi_logloss: 0.518095\n","[600]\tvalid_0's multi_logloss: 0.517745\n","Did not meet early stopping. Best iteration is:\n","[586]\tvalid_0's multi_logloss: 0.51773\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:16:02,953]\u001b[0m Trial 14 finished with value: 0.746610489925998 and parameters: {'learning_rate': 0.04024513189412697, 'n_estimators': 609, 'num_leaves': 245, 'max_depth': 10, 'min_child_samples': 8, 'subsample': 0.8035698175160586, 'colsample_bytree': 0.823039904968547, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5177302958830086)])})\n","74.6610%\n","73.6649%\n","68.2342%\n","loss: 8.751851635512871\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.096463155977932, 'n_estimators': 413, 'num_leaves': 79, 'max_depth': 16, 'min_child_samples': 13, 'subsample': 0.7275012915445441, 'colsample_bytree': 0.6356358667673087, 'boosting_type': 'dart', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","[100]\tvalid_0's multi_logloss: 0.546821\n","[200]\tvalid_0's multi_logloss: 0.53358\n","[300]\tvalid_0's multi_logloss: 0.531586\n","[400]\tvalid_0's multi_logloss: 0.528654\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:23:11,798]\u001b[0m Trial 15 finished with value: 0.739880084265111 and parameters: {'learning_rate': 0.096463155977932, 'n_estimators': 413, 'num_leaves': 79, 'max_depth': 16, 'min_child_samples': 13, 'subsample': 0.7275012915445441, 'colsample_bytree': 0.6356358667673087, 'boosting_type': 'dart'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5279952954530726)])})\n","73.9880%\n","73.0438%\n","67.1184%\n","loss: 8.984312967882838\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.01848016031469345, 'n_estimators': 245, 'num_leaves': 350, 'max_depth': 8, 'min_child_samples': 17, 'subsample': 0.620121336029672, 'colsample_bytree': 0.6520548985339096, 'boosting_type': 'dart', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","[100]\tvalid_0's multi_logloss: 0.615139\n","[200]\tvalid_0's multi_logloss: 0.583368\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:26:17,326]\u001b[0m Trial 16 finished with value: 0.7260735699238373 and parameters: {'learning_rate': 0.01848016031469345, 'n_estimators': 245, 'num_leaves': 350, 'max_depth': 8, 'min_child_samples': 17, 'subsample': 0.620121336029672, 'colsample_bytree': 0.6520548985339096, 'boosting_type': 'dart'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5811328572687806)])})\n","72.6074%\n","73.6666%\n","61.1469%\n","loss: 9.461162575425869\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.05382282611342913, 'n_estimators': 989, 'num_leaves': 142, 'max_depth': 12, 'min_child_samples': 12, 'subsample': 0.8877571624752519, 'colsample_bytree': 0.709785748855221, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.528826\n","[200]\tvalid_0's multi_logloss: 0.522756\n","[300]\tvalid_0's multi_logloss: 0.520517\n","[400]\tvalid_0's multi_logloss: 0.519288\n","[500]\tvalid_0's multi_logloss: 0.518413\n","[600]\tvalid_0's multi_logloss: 0.518013\n","[700]\tvalid_0's multi_logloss: 0.517704\n","[800]\tvalid_0's multi_logloss: 0.517483\n","[900]\tvalid_0's multi_logloss: 0.517381\n","Did not meet early stopping. Best iteration is:\n","[989]\tvalid_0's multi_logloss: 0.517286\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:27:35,885]\u001b[0m Trial 17 finished with value: 0.7465780802679198 and parameters: {'learning_rate': 0.05382282611342913, 'n_estimators': 989, 'num_leaves': 142, 'max_depth': 12, 'min_child_samples': 12, 'subsample': 0.8877571624752519, 'colsample_bytree': 0.709785748855221, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5172863786300462)])})\n","74.6578%\n","73.5824%\n","68.3850%\n","loss: 8.752971595569212\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.028455256044361138, 'n_estimators': 621, 'num_leaves': 361, 'max_depth': 14, 'min_child_samples': 17, 'subsample': 0.6530241208308101, 'colsample_bytree': 0.7726312117753418, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.529723\n","[200]\tvalid_0's multi_logloss: 0.521132\n","[300]\tvalid_0's multi_logloss: 0.518498\n","[400]\tvalid_0's multi_logloss: 0.517153\n","[500]\tvalid_0's multi_logloss: 0.51642\n","[600]\tvalid_0's multi_logloss: 0.516125\n","Did not meet early stopping. Best iteration is:\n","[621]\tvalid_0's multi_logloss: 0.516058\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:28:57,566]\u001b[0m Trial 18 finished with value: 0.7477772376168098 and parameters: {'learning_rate': 0.028455256044361138, 'n_estimators': 621, 'num_leaves': 361, 'max_depth': 14, 'min_child_samples': 17, 'subsample': 0.6530241208308101, 'colsample_bytree': 0.7726312117753418, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.51605841342397)])})\n","74.7777%\n","73.7272%\n","68.5143%\n","loss: 8.711553675654681\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.025224302417452667, 'n_estimators': 603, 'num_leaves': 502, 'max_depth': 18, 'min_child_samples': 20, 'subsample': 0.5790634552415274, 'colsample_bytree': 0.8197400655407368, 'boosting_type': 'dart', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","[100]\tvalid_0's multi_logloss: 0.578025\n","[200]\tvalid_0's multi_logloss: 0.545638\n","[300]\tvalid_0's multi_logloss: 0.541016\n","[400]\tvalid_0's multi_logloss: 0.534677\n","[500]\tvalid_0's multi_logloss: 0.529073\n","[600]\tvalid_0's multi_logloss: 0.526499\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:53:09,706]\u001b[0m Trial 19 finished with value: 0.7450008102414519 and parameters: {'learning_rate': 0.025224302417452667, 'n_estimators': 603, 'num_leaves': 502, 'max_depth': 18, 'min_child_samples': 20, 'subsample': 0.5790634552415274, 'colsample_bytree': 0.8197400655407368, 'boosting_type': 'dart'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5258769647300678)])})\n","74.5001%\n","73.4209%\n","68.1575%\n","loss: 8.807449012877328\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.00909900024174245, 'n_estimators': 883, 'num_leaves': 418, 'max_depth': 15, 'min_child_samples': 17, 'subsample': 0.6508790903133591, 'colsample_bytree': 0.7683990099414776, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.570377\n","[200]\tvalid_0's multi_logloss: 0.539171\n","[300]\tvalid_0's multi_logloss: 0.528889\n","[400]\tvalid_0's multi_logloss: 0.524488\n","[500]\tvalid_0's multi_logloss: 0.522067\n","[600]\tvalid_0's multi_logloss: 0.520402\n","[700]\tvalid_0's multi_logloss: 0.519024\n","[800]\tvalid_0's multi_logloss: 0.518099\n","Did not meet early stopping. Best iteration is:\n","[883]\tvalid_0's multi_logloss: 0.517605\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:55:33,378]\u001b[0m Trial 20 finished with value: 0.746642899584076 and parameters: {'learning_rate': 0.00909900024174245, 'n_estimators': 883, 'num_leaves': 418, 'max_depth': 15, 'min_child_samples': 17, 'subsample': 0.6508790903133591, 'colsample_bytree': 0.7683990099414776, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5176053671243958)])})\n","74.6643%\n","73.6339%\n","68.3060%\n","loss: 8.750732478811592\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.05873930038887354, 'n_estimators': 517, 'num_leaves': 348, 'max_depth': 14, 'min_child_samples': 16, 'subsample': 0.7296985143347676, 'colsample_bytree': 0.7315167490350003, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.520669\n","[200]\tvalid_0's multi_logloss: 0.517099\n","[300]\tvalid_0's multi_logloss: 0.516151\n","[400]\tvalid_0's multi_logloss: 0.516169\n","Early stopping, best iteration is:\n","[341]\tvalid_0's multi_logloss: 0.516025\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:56:24,960]\u001b[0m Trial 21 finished with value: 0.747345108842435 and parameters: {'learning_rate': 0.05873930038887354, 'n_estimators': 517, 'num_leaves': 348, 'max_depth': 14, 'min_child_samples': 16, 'subsample': 0.7296985143347676, 'colsample_bytree': 0.7315167490350003, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5160249230111033)])})\n","74.7345%\n","73.7050%\n","68.4090%\n","loss: 8.726478840213712\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.03307411482376265, 'n_estimators': 505, 'num_leaves': 355, 'max_depth': 14, 'min_child_samples': 18, 'subsample': 0.7270327422163481, 'colsample_bytree': 0.808518906124034, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.527142\n","[200]\tvalid_0's multi_logloss: 0.519903\n","[300]\tvalid_0's multi_logloss: 0.51777\n","[400]\tvalid_0's multi_logloss: 0.516888\n","[500]\tvalid_0's multi_logloss: 0.516157\n","Did not meet early stopping. Best iteration is:\n","[503]\tvalid_0's multi_logloss: 0.516141\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:57:31,060]\u001b[0m Trial 22 finished with value: 0.7473126991843569 and parameters: {'learning_rate': 0.03307411482376265, 'n_estimators': 505, 'num_leaves': 355, 'max_depth': 14, 'min_child_samples': 18, 'subsample': 0.7270327422163481, 'colsample_bytree': 0.808518906124034, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5161413167116743)])})\n","74.7313%\n","73.7091%\n","68.3898%\n","loss: 8.727598186955975\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.015787203100717885, 'n_estimators': 685, 'num_leaves': 298, 'max_depth': 11, 'min_child_samples': 14, 'subsample': 0.5969646929363522, 'colsample_bytree': 0.6810327106631533, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.552658\n","[200]\tvalid_0's multi_logloss: 0.53167\n","[300]\tvalid_0's multi_logloss: 0.525331\n","[400]\tvalid_0's multi_logloss: 0.522622\n","[500]\tvalid_0's multi_logloss: 0.520885\n","[600]\tvalid_0's multi_logloss: 0.519804\n","Did not meet early stopping. Best iteration is:\n","[685]\tvalid_0's multi_logloss: 0.519003\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:59:05,806]\u001b[0m Trial 23 finished with value: 0.7452384810673581 and parameters: {'learning_rate': 0.015787203100717885, 'n_estimators': 685, 'num_leaves': 298, 'max_depth': 11, 'min_child_samples': 14, 'subsample': 0.5969646929363522, 'colsample_bytree': 0.6810327106631533, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5190034399182505)])})\n","74.5238%\n","73.6579%\n","67.7745%\n","loss: 8.79923858120855\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.06652806536296223, 'n_estimators': 304, 'num_leaves': 233, 'max_depth': 5, 'min_child_samples': 15, 'subsample': 0.6688223404361991, 'colsample_bytree': 0.7363520987617131, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.552193\n","[200]\tvalid_0's multi_logloss: 0.538419\n","[300]\tvalid_0's multi_logloss: 0.533357\n","Did not meet early stopping. Best iteration is:\n","[304]\tvalid_0's multi_logloss: 0.533188\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:59:27,316]\u001b[0m Trial 24 finished with value: 0.7358936963215038 and parameters: {'learning_rate': 0.06652806536296223, 'n_estimators': 304, 'num_leaves': 233, 'max_depth': 5, 'min_child_samples': 15, 'subsample': 0.6688223404361991, 'colsample_bytree': 0.7363520987617131, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5331882706999864)])})\n","73.5894%\n","73.2070%\n","65.4017%\n","loss: 9.121994923587653\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.02929673470438949, 'n_estimators': 168, 'num_leaves': 304, 'max_depth': 17, 'min_child_samples': 13, 'subsample': 0.6699823319212244, 'colsample_bytree': 0.8631133980280636, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.530725\n","Did not meet early stopping. Best iteration is:\n","[168]\tvalid_0's multi_logloss: 0.523638\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 11:59:53,461]\u001b[0m Trial 25 finished with value: 0.7434019337762653 and parameters: {'learning_rate': 0.02929673470438949, 'n_estimators': 168, 'num_leaves': 304, 'max_depth': 17, 'min_child_samples': 13, 'subsample': 0.6699823319212244, 'colsample_bytree': 0.8631133980280636, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5236380192869026)])})\n","74.3402%\n","73.3541%\n","67.7337%\n","loss: 8.862671999082929\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.014361817735862032, 'n_estimators': 599, 'num_leaves': 384, 'max_depth': 11, 'min_child_samples': 9, 'subsample': 0.8374054213335829, 'colsample_bytree': 0.6499722143282978, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.555532\n","[200]\tvalid_0's multi_logloss: 0.532282\n","[300]\tvalid_0's multi_logloss: 0.525233\n","[400]\tvalid_0's multi_logloss: 0.52223\n","[500]\tvalid_0's multi_logloss: 0.520475\n","Did not meet early stopping. Best iteration is:\n","[599]\tvalid_0's multi_logloss: 0.519335\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 12:01:24,344]\u001b[0m Trial 26 finished with value: 0.7447955490736239 and parameters: {'learning_rate': 0.014361817735862032, 'n_estimators': 599, 'num_leaves': 384, 'max_depth': 11, 'min_child_samples': 9, 'subsample': 0.8374054213335829, 'colsample_bytree': 0.6499722143282978, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5193349005519602)])})\n","74.4796%\n","73.6557%\n","67.6260%\n","loss: 8.814536728895531\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.0531672569333618, 'n_estimators': 812, 'num_leaves': 447, 'max_depth': 9, 'min_child_samples': 16, 'subsample': 0.6960928415962302, 'colsample_bytree': 0.7747026742319728, 'boosting_type': 'dart', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","[100]\tvalid_0's multi_logloss: 0.559482\n","[200]\tvalid_0's multi_logloss: 0.54025\n","[300]\tvalid_0's multi_logloss: 0.53738\n","[400]\tvalid_0's multi_logloss: 0.533548\n","[500]\tvalid_0's multi_logloss: 0.53002\n","[600]\tvalid_0's multi_logloss: 0.528027\n","[700]\tvalid_0's multi_logloss: 0.524675\n","[800]\tvalid_0's multi_logloss: 0.523309\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 12:29:15,170]\u001b[0m Trial 27 finished with value: 0.7426349052017501 and parameters: {'learning_rate': 0.0531672569333618, 'n_estimators': 812, 'num_leaves': 447, 'max_depth': 9, 'min_child_samples': 16, 'subsample': 0.6960928415962302, 'colsample_bytree': 0.7747026742319728, 'boosting_type': 'dart'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5231517168815619)])})\n","74.2635%\n","73.6303%\n","66.9292%\n","loss: 8.88916193837661\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.08599914930638229, 'n_estimators': 368, 'num_leaves': 271, 'max_depth': 12, 'min_child_samples': 20, 'subsample': 0.6132870134948704, 'colsample_bytree': 0.7176562968682552, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.520754\n","[200]\tvalid_0's multi_logloss: 0.517511\n","[300]\tvalid_0's multi_logloss: 0.516939\n","Did not meet early stopping. Best iteration is:\n","[335]\tvalid_0's multi_logloss: 0.516757\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 12:29:55,990]\u001b[0m Trial 28 finished with value: 0.7468157510938259 and parameters: {'learning_rate': 0.08599914930638229, 'n_estimators': 368, 'num_leaves': 271, 'max_depth': 12, 'min_child_samples': 20, 'subsample': 0.6132870134948704, 'colsample_bytree': 0.7176562968682552, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5167572600015364)])})\n","74.6816%\n","73.5126%\n","68.6053%\n","loss: 8.744763340733497\n","{'random_state': 8282, 'objective': 'multiclass', 'learning_rate': 0.004397514502618535, 'n_estimators': 656, 'num_leaves': 394, 'max_depth': 14, 'min_child_samples': 12, 'subsample': 0.6990274903741687, 'colsample_bytree': 0.5644225922485626, 'boosting_type': 'gbdt', 'metric': 'multi_logloss', 'num_class': 2, 'verbose': -1}\n","Training until validation scores don't improve for 100 rounds\n","[100]\tvalid_0's multi_logloss: 0.621938\n","[200]\tvalid_0's multi_logloss: 0.583959\n","[300]\tvalid_0's multi_logloss: 0.560875\n","[400]\tvalid_0's multi_logloss: 0.547387\n","[500]\tvalid_0's multi_logloss: 0.538525\n","[600]\tvalid_0's multi_logloss: 0.532536\n","Did not meet early stopping. Best iteration is:\n","[656]\tvalid_0's multi_logloss: 0.530097\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 12:31:53,375]\u001b[0m Trial 29 finished with value: 0.7429049856857344 and parameters: {'learning_rate': 0.004397514502618535, 'n_estimators': 656, 'num_leaves': 394, 'max_depth': 14, 'min_child_samples': 12, 'subsample': 0.6990274903741687, 'colsample_bytree': 0.5644225922485626, 'boosting_type': 'gbdt'}. Best is trial 9 with value: 0.7488683627721061.\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["(92565, 2) (92565,)\n","best_score defaultdict(<class 'collections.OrderedDict'>, {'valid_0': OrderedDict([('multi_logloss', 0.5300971847506192)])})\n","74.2905%\n","73.5336%\n","67.2094%\n","loss: 8.879834483648482\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0k5jTcmeePYz","executionInfo":{"elapsed":400,"status":"ok","timestamp":1625278209159,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"},"user_tz":-540},"outputId":"c9875eb1-5cd0-45a4-bd23-55990f80c685"},"source":["print(study0.best_trial.params)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'learning_rate': 0.028098046992081824, 'n_estimators': 686, 'num_leaves': 477, 'max_depth': 18, 'min_child_samples': 18, 'subsample': 0.7783008804468268, 'colsample_bytree': 0.8280216760390802, 'boosting_type': 'gbdt'}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tiE_aMWwePXG"},"source":["x_trn.shape,y_trn.shape,"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"vI9UsFn7ePVN"},"source":["def objective(trial ,rounds):\n","    n_class = 2\n","    param = {\n","          \"objective\":\"multi:softmax\",\n","          \"n_estimators\": trial.suggest_int('n_estimators', 100, 20000),\n","          \"max_depth\":  trial.suggest_int('max_depth', 3, 20),\n","          'eta': trial.suggest_loguniform('eta',1e-3,1e-1),\n","          'sub_sample':trial.suggest_uniform(\"sub_sample\", 0.5, 1.0),\n","          # 'reg_alpha': trial.suggest_int('reg_alpha', 0, 5),\n","          # 'reg_lambda': trial.suggest_int('reg_lambda', 0, 5),\n","          'min_child_weight': trial.suggest_int('min_child_weight', 0,5),\n","          'gamma': trial.suggest_uniform(\"gamma\", 0.1, 1.0),\n","          'colsample_bytree':trial.suggest_discrete_uniform('colsample_bytree',0.1,1,0.01),\n","          'booster': trial.suggest_categorical('booster',['gbtree','dart']),\n","          'num_class': n_class,\n","          'eval_metric':'auc',\n","          # 'predictor': 'auto',#cpu_predicagor, auto\n","    }\n","    p_val = np.zeros((X_trn.shape[0], n_class))\n","    print(param)\n","    dtrain = xgb.DMatrix(X_trn,y_trn)\n","    dvalid = xgb.DMatrix(X_val,y_val)\n","    \n","    clf = xgb.train(param,\n","                  dtrain,\n","                  evals=[(dvalid,'eval')],\n","                  early_stopping_rounds=rounds,\n","                \n","    #                  callbacks=[pruning_callback],\n","                  )\n","\n","    p_val = clf.predict(X_val)\n","    print(p_val.shape, y_val.shape)\n","    loss = log_loss(y_val,np.argmax(p_val, axis=1))\n","    ac_score = accuracy_score(y_val, np.argmax(p_val, axis=1)) \n","    print('best_score', clf.best_score)\n","    print(f'{accuracy_score(y_val, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","    print(f'{precision_score(y_val, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","    print(f'{recall_score(y_val, np.argmax(p_val, axis=1)) * 100:.4f}%')\n","    print(f'loss: {loss}')\n","    return ac_score"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"owpP88p4ePSk","executionInfo":{"elapsed":1054,"status":"error","timestamp":1625304728329,"user":{"displayName":"박정희","photoUrl":"","userId":"05227393621831349056"},"user_tz":-540},"outputId":"5d76f33a-7a0d-4a31-d512-5f2279bcf0db"},"source":["study0 = optuna.create_study(pruner=optuna.pruners.MedianPruner(n_warmup_steps=5),direction=\"maximize\")\n","study0.optimize(lambda trial: objective(trial,100), n_trials=30)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\u001b[32m[I 2021-07-03 09:32:06,903]\u001b[0m A new study created in memory with name: no-name-205deb97-d727-4476-8549-100b1f5091c0\u001b[0m\n"],"name":"stderr"},{"output_type":"stream","text":["{'objective': 'multi:softmax', 'n_estimators': 1909, 'max_depth': 6, 'eta': 0.0017493173517199882, 'sub_sample': 0.9098176823439975, 'min_child_weight': 5, 'gamma': 0.32811101329646064, 'colsample_bytree': 0.36, 'booster': 'dart', 'num_class': 2, 'eval_metric': 'auc'}\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[33m[W 2021-07-03 09:32:07,664]\u001b[0m Trial 0 failed because of the following error: XGBoostError('[09:32:07] /workspace/src/metric/rank_metric.cc:150: Check failed: preds.Size() == info.labels_.Size() (185130 vs. 92565) : label size predict size not match\\nStack trace:\\n  [bt] (0) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x24) [0x7f0313d6acb4]\\n  [bt] (1) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(+0x1be51d) [0x7f0313e2851d]\\n  [bt] (2) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(xgboost::LearnerImpl::EvalOneIter(int, std::vector<xgboost::DMatrix*, std::allocator<xgboost::DMatrix*> > const&, std::vector<std::string, std::allocator<std::string> > const&)+0x3c9) [0x7f0313e04d99]\\n  [bt] (3) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(XGBoosterEvalOneIter+0x371) [0x7f0313d67651]\\n  [bt] (4) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call_unix64+0x4c) [0x7f0351ef9dae]\\n  [bt] (5) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call+0x22f) [0x7f0351ef971f]\\n  [bt] (6) /usr/lib/python3.7/lib-dynload/_ctypes.cpython-37m-x86_64-linux-gnu.so(_ctypes_callproc+0x28c) [0x7f035210d5bc]\\n  [bt] (7) /usr/lib/python3.7/lib-dynload/_ctypes.cpython-37m-x86_64-linux-gnu.so(+0x109e3) [0x7f035210c9e3]\\n  [bt] (8) /usr/bin/python3(_PyObject_FastCallKeywords+0x92) [0x5650bddb7462]\\n\\n')\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.7/dist-packages/optuna/_optimize.py\", line 216, in _run_trial\n","    value_or_values = func(trial)\n","  File \"<ipython-input-32-2dd6c83ba434>\", line 2, in <lambda>\n","    study0.optimize(lambda trial: objective(trial,100), n_trials=30)\n","  File \"<ipython-input-31-30908113186f>\", line 27, in objective\n","    early_stopping_rounds=rounds,\n","  File \"/usr/local/lib/python3.7/dist-packages/xgboost/training.py\", line 216, in train\n","    xgb_model=xgb_model, callbacks=callbacks)\n","  File \"/usr/local/lib/python3.7/dist-packages/xgboost/training.py\", line 84, in _train_internal\n","    bst_eval_set = bst.eval_set(evals, i, feval)\n","  File \"/usr/local/lib/python3.7/dist-packages/xgboost/core.py\", line 1172, in eval_set\n","    ctypes.byref(msg)))\n","  File \"/usr/local/lib/python3.7/dist-packages/xgboost/core.py\", line 176, in _check_call\n","    raise XGBoostError(py_str(_LIB.XGBGetLastError()))\n","xgboost.core.XGBoostError: [09:32:07] /workspace/src/metric/rank_metric.cc:150: Check failed: preds.Size() == info.labels_.Size() (185130 vs. 92565) : label size predict size not match\n","Stack trace:\n","  [bt] (0) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x24) [0x7f0313d6acb4]\n","  [bt] (1) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(+0x1be51d) [0x7f0313e2851d]\n","  [bt] (2) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(xgboost::LearnerImpl::EvalOneIter(int, std::vector<xgboost::DMatrix*, std::allocator<xgboost::DMatrix*> > const&, std::vector<std::string, std::allocator<std::string> > const&)+0x3c9) [0x7f0313e04d99]\n","  [bt] (3) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(XGBoosterEvalOneIter+0x371) [0x7f0313d67651]\n","  [bt] (4) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call_unix64+0x4c) [0x7f0351ef9dae]\n","  [bt] (5) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call+0x22f) [0x7f0351ef971f]\n","  [bt] (6) /usr/lib/python3.7/lib-dynload/_ctypes.cpython-37m-x86_64-linux-gnu.so(_ctypes_callproc+0x28c) [0x7f035210d5bc]\n","  [bt] (7) /usr/lib/python3.7/lib-dynload/_ctypes.cpython-37m-x86_64-linux-gnu.so(+0x109e3) [0x7f035210c9e3]\n","  [bt] (8) /usr/bin/python3(_PyObject_FastCallKeywords+0x92) [0x5650bddb7462]\n","\n","\u001b[0m\n"],"name":"stderr"},{"output_type":"error","ename":"XGBoostError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mXGBoostError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-32-2dd6c83ba434>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mstudy0\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0moptuna\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_study\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpruner\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0moptuna\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpruners\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mMedianPruner\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_warmup_steps\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdirection\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"maximize\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mstudy0\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptimize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mtrial\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mobjective\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrial\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_trials\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/optuna/study.py\u001b[0m in \u001b[0;36moptimize\u001b[0;34m(self, func, n_trials, timeout, n_jobs, catch, callbacks, gc_after_trial, show_progress_bar)\u001b[0m\n\u001b[1;32m    408\u001b[0m             \u001b[0mcallbacks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcallbacks\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    409\u001b[0m             \u001b[0mgc_after_trial\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mgc_after_trial\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 410\u001b[0;31m             \u001b[0mshow_progress_bar\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mshow_progress_bar\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    411\u001b[0m         )\n\u001b[1;32m    412\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/optuna/_optimize.py\u001b[0m in \u001b[0;36m_optimize\u001b[0;34m(study, func, n_trials, timeout, n_jobs, catch, callbacks, gc_after_trial, show_progress_bar)\u001b[0m\n\u001b[1;32m     73\u001b[0m                 \u001b[0mreseed_sampler_rng\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     74\u001b[0m                 \u001b[0mtime_start\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 75\u001b[0;31m                 \u001b[0mprogress_bar\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mprogress_bar\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     76\u001b[0m             )\n\u001b[1;32m     77\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/optuna/_optimize.py\u001b[0m in \u001b[0;36m_optimize_sequential\u001b[0;34m(study, func, n_trials, timeout, catch, callbacks, gc_after_trial, reseed_sampler_rng, time_start, progress_bar)\u001b[0m\n\u001b[1;32m    160\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    161\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 162\u001b[0;31m             \u001b[0mtrial\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_run_trial\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstudy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcatch\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    163\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    164\u001b[0m             \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/optuna/_optimize.py\u001b[0m in \u001b[0;36m_run_trial\u001b[0;34m(study, func, catch)\u001b[0m\n\u001b[1;32m    265\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    266\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mstate\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mTrialState\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mFAIL\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mfunc_err\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc_err\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcatch\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 267\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mfunc_err\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    268\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mtrial\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    269\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/optuna/_optimize.py\u001b[0m in \u001b[0;36m_run_trial\u001b[0;34m(study, func, catch)\u001b[0m\n\u001b[1;32m    214\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 216\u001b[0;31m         \u001b[0mvalue_or_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrial\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    217\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mexceptions\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTrialPruned\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    218\u001b[0m         \u001b[0;31m# TODO(mamu): Handle multi-objective cases.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-32-2dd6c83ba434>\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(trial)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mstudy0\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0moptuna\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_study\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpruner\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0moptuna\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpruners\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mMedianPruner\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_warmup_steps\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdirection\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"maximize\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mstudy0\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptimize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mtrial\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mobjective\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrial\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_trials\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-31-30908113186f>\u001b[0m in \u001b[0;36mobjective\u001b[0;34m(trial, rounds)\u001b[0m\n\u001b[1;32m     25\u001b[0m                   \u001b[0mdtrain\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m                   \u001b[0mevals\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdvalid\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'eval'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 27\u001b[0;31m                   \u001b[0mearly_stopping_rounds\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrounds\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     28\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m     \u001b[0;31m#                  callbacks=[pruning_callback],\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/xgboost/training.py\u001b[0m in \u001b[0;36mtrain\u001b[0;34m(params, dtrain, num_boost_round, evals, obj, feval, maximize, early_stopping_rounds, evals_result, verbose_eval, xgb_model, callbacks, learning_rates)\u001b[0m\n\u001b[1;32m    214\u001b[0m                            \u001b[0mevals\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mevals\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m                            \u001b[0mobj\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeval\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfeval\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 216\u001b[0;31m                            xgb_model=xgb_model, callbacks=callbacks)\n\u001b[0m\u001b[1;32m    217\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    218\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/xgboost/training.py\u001b[0m in \u001b[0;36m_train_internal\u001b[0;34m(params, dtrain, num_boost_round, evals, obj, feval, xgb_model, callbacks)\u001b[0m\n\u001b[1;32m     82\u001b[0m         \u001b[0;31m# check evaluation result.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mevals\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 84\u001b[0;31m             \u001b[0mbst_eval_set\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbst\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meval_set\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mevals\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeval\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     85\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbst_eval_set\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSTRING_TYPES\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     86\u001b[0m                 \u001b[0mmsg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbst_eval_set\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36meval_set\u001b[0;34m(self, evals, iteration, feval)\u001b[0m\n\u001b[1;32m   1170\u001b[0m                                               \u001b[0mdmats\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mevnames\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1171\u001b[0m                                               \u001b[0mc_bst_ulong\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mevals\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1172\u001b[0;31m                                               ctypes.byref(msg)))\n\u001b[0m\u001b[1;32m   1173\u001b[0m         \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmsg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1174\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mfeval\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36m_check_call\u001b[0;34m(ret)\u001b[0m\n\u001b[1;32m    174\u001b[0m     \"\"\"\n\u001b[1;32m    175\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mret\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 176\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mXGBoostError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpy_str\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_LIB\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mXGBGetLastError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    177\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    178\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mXGBoostError\u001b[0m: [09:32:07] /workspace/src/metric/rank_metric.cc:150: Check failed: preds.Size() == info.labels_.Size() (185130 vs. 92565) : label size predict size not match\nStack trace:\n  [bt] (0) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x24) [0x7f0313d6acb4]\n  [bt] (1) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(+0x1be51d) [0x7f0313e2851d]\n  [bt] (2) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(xgboost::LearnerImpl::EvalOneIter(int, std::vector<xgboost::DMatrix*, std::allocator<xgboost::DMatrix*> > const&, std::vector<std::string, std::allocator<std::string> > const&)+0x3c9) [0x7f0313e04d99]\n  [bt] (3) /usr/local/lib/python3.7/dist-packages/xgboost/./lib/libxgboost.so(XGBoosterEvalOneIter+0x371) [0x7f0313d67651]\n  [bt] (4) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call_unix64+0x4c) [0x7f0351ef9dae]\n  [bt] (5) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call+0x22f) [0x7f0351ef971f]\n  [bt] (6) /usr/lib/python3.7/lib-dynload/_ctypes.cpython-37m-x86_64-linux-gnu.so(_ctypes_callproc+0x28c) [0x7f035210d5bc]\n  [bt] (7) /usr/lib/python3.7/lib-dynload/_ctypes.cpython-37m-x86_64-linux-gnu.so(+0x109e3) [0x7f035210c9e3]\n  [bt] (8) /usr/bin/python3(_PyObject_FastCallKeywords+0x92) [0x5650bddb7462]\n\n"]}]},{"cell_type":"code","metadata":{"id":"CUn3Z-zmePQj"},"source":["print(study0.best_trial.params)\n","print()\n","print(study0.best_trial)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"TFeQw9zmePOi"},"source":["# 학습 동안 파라미터가 변화되는 모습을 그려줌\n","optuna.visualization.plot_contour(study0) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jye9NYfxePMQ"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2WRGGbW7ePKH"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qsAtZNEFePIP"},"source":[""],"execution_count":null,"outputs":[]}]}